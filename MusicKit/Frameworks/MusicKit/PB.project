{
    CURRENTLY_ACTIVE_VERSION = YES; 
    DEPLOY_WITH_VERSION_NAME = A; 
    DYNAMIC_CODE_GEN = YES; 
    English_RESOURCES = {}; 
    FILESTABLE = {
        CLASSES = (
            ArielQP.m, 
            DSPSerialPortDevice.m, 
            MKConductor.m, 
            MKEnvelope.m, 
            MKFilePerformer.m, 
            MKFileWriter.m, 
            MKInstrument.m, 
            MKMTCPerformer.m, 
            MKMidi.m, 
            MKNote.m, 
            MKNoteFilter.m, 
            MKNoteReceiver.m, 
            MKNoteSender.m, 
            MKOrchestra.m, 
            MKPart.m, 
            MKPartPerformer.m, 
            MKPartRecorder.m, 
            MKPartials.m, 
            MKPartialsWaveshapingTable.m, 
            MKPatchTemplate.m, 
            MKPerformer.m, 
            MKSamplerInstrument.m, 
            MKSamples.m, 
            MKScore.m, 
            MKScorePerformer.m, 
            MKScoreRecorder.m, 
            MKScorefilePerformer.m, 
            MKScorefileWriter.m, 
            MKSynthData.m, 
            MKSynthInstrument.m, 
            MKSynthPatch.m, 
            MKTimbre.m, 
            MKTuningSystem.m, 
            MKUnitGenerator.m, 
            MKWaveTable.m, 
            OrchloopbeginUG.m, 
            _MKNameTable.m, 
            _MTCHelper.m, 
            _OrchloopbeginUG.m, 
            _ParName.m, 
            _ScorefileVar.m, 
            _SharedSynthInfo.m, 
            conversion.m, 
            midifile.m, 
            noteRecorderCFuncs.m, 
            parseMidi.m, 
            parseScore.m, 
            time.m, 
            tokenNames.m, 
            utilities.m, 
            writeBinary.m, 
            writeMidi.m, 
            writeScore.m
        ); 
        DOCUMENTATION = (); 
        FRAMEWORKS = (
            AppKit.framework, 
            dsp.framework, 
            Foundation.framework, 
            MKPerformSndMIDI.framework, 
            SndKit.framework, 
            System.framework
        ); 
        FRAMEWORKSEARCH = (
            "$(SYSTEM_LIBRARY_DIR)/Frameworks/AppKit.framework", 
            "$(SYSTEM_LIBRARY_DIR)/Frameworks/Foundation.framework", 
            "$(SYSTEM_LIBRARY_DIR)/Frameworks/SoundKit.framework", 
            "$(SYSTEM_LIBRARY_DIR)/Frameworks/System.framework", 
            "$(HOME)//Library/Frameworks", 
            "$(SYSTEM_LIBRARY_DIR)/PrivateFrameworks", 
            /Local/Library/Frameworks, 
            "$(HOMEDRIVE)$(LOCAL_DEVELOPER_DIR)/Frameworks"
        ); 
        HEADERSEARCH = (
            /Local/Users/leigh/Sources/Music/MusicKit/YellowBox/Frameworks/MusicKit_3.3_Headers
        ); 
        H_FILES = (
            ArielQP.h, 
            ConductorPrivate.h, 
            DSPSerialPortDevice.h, 
            EnvelopePrivate.h, 
            InstrumentPrivate.h, 
            MKConductor.h, 
            MKConductorDelegate.h, 
            MKDeviceStatus.h, 
            MKEnvelope.h, 
            MKFilePerformer.h, 
            MKFileWriter.h, 
            MKInstrument.h, 
            MKMTCPerformer.h, 
            MKMidi.h, 
            MKNote.h, 
            MKNoteFilter.h, 
            MKNoteReceiver.h, 
            MKNoteSender.h, 
            MKOrchestra.h, 
            MKPart.h, 
            MKPartPerformer.h, 
            MKPartRecorder.h, 
            MKPartials.h, 
            MKPatchTemplate.h, 
            MKPerformer.h, 
            MKPerformerDelegate.h, 
            MKSamplerInstrument.h, 
            MKSamples.h, 
            MKScore.h, 
            MKScorePerformer.h, 
            MKScoreRecorder.h, 
            MKScorefilePerformer.h, 
            MKScorefileWriter.h, 
            MKSynthData.h, 
            MKSynthInstrument.h, 
            MKSynthPatch.h, 
            MKTimbre.h, 
            MKTuningSystem.h, 
            MKUnitGenerator.h, 
            MKWaveTable.h, 
            MidiPrivate.h, 
            MusicKit.h, 
            NotePrivate.h, 
            NoteReceiverPrivate.h, 
            OrchestraPrivate.h, 
            OrchloopbeginUG.h, 
            PartPerformerPrivate.h, 
            PartPrivate.h, 
            PartRecorderPrivate.h, 
            PartialsPrivate.h, 
            PatchTemplatePrivate.h, 
            PerformerPrivate.h, 
            ScorePerformerPrivate.h, 
            ScorePrivate.h, 
            ScoreRecorderPrivate.h, 
            ScorefilePerformerPrivate.h, 
            SynthDataPrivate.h, 
            SynthInstrumentPrivate.h, 
            SynthPatchPrivate.h, 
            TuningSystemPrivate.h, 
            UnitGeneratorPrivate.h, 
            _ArielQP.h, 
            _DSPMK.h, 
            _MKNameTable.h, 
            _MKParameter.h, 
            _MTCHelper.h, 
            _OrchloopbeginUG.h, 
            _ParName.h, 
            _ScorefileVar.h, 
            _SharedSynthInfo.h, 
            _error.h, 
            _midi.h, 
            _musickit.h, 
            _noteRecorder.h, 
            _scorefile.h, 
            _time.h, 
            classFuncs.h, 
            dsp_types.h, 
            dspwrap.h, 
            errors.h, 
            keynums.h, 
            midiTranslation.h, 
            midi_spec.h, 
            midifile.h, 
            names.h, 
            noDVal.h, 
            orch.h, 
            params.h, 
            pitches.h, 
            scorefileObject.h, 
            timeunits.h, 
            tokens.h
        ); 
        LIBRARYSEARCH = (./); 
        OTHER_LIBS = (); 
        OTHER_LINKED = (sin.c, fastFFT.c); 
        OTHER_RESOURCES = (Localized.strings); 
        OTHER_SOURCES = (
            Makefile, 
            Makefile.postamble, 
            Makefile.preamble, 
            _synthElementMethods.m, 
            equalTempered.m, 
            h.template, 
            m.template, 
            make.sh, 
            mtcConductor.m, 
            mtcConductorPrivate.m, 
            mtcMidi.m, 
            mtcMidiPrivate.m, 
            noteDispatcherMethods.m, 
            noteRecorderMethods.m, 
            orchControl.m, 
            orchloopbeginUGInclude.m, 
            parNames.m, 
            partialsDBInclude.m, 
            platform.make, 
            synthElementCFuncs.m, 
            synthElementMethods.m, 
            timetagInclude.m, 
            separateThread.m
        ); 
        PRECOMPILED_HEADERS = (); 
        PROJECT_HEADERS = (); 
        PUBLIC_HEADERS = (
            ArielQP.h, 
            DSPSerialPortDevice.h, 
            MusicKit.h, 
            classFuncs.h, 
            dsp_types.h, 
            dspwrap.h, 
            errors.h, 
            keynums.h, 
            midiTranslation.h, 
            midi_spec.h, 
            midifile.h, 
            names.h, 
            noDVal.h, 
            orch.h, 
            params.h, 
            pitches.h, 
            scorefileObject.h, 
            timeunits.h, 
            MKOrchestra.h, 
            MKConductor.h, 
            MKConductorDelegate.h, 
            MKNote.h, 
            MKInstrument.h, 
            MKPartPerformer.h, 
            MKMidi.h, 
            MKScore.h, 
            MKNoteSender.h, 
            MKPart.h, 
            MKPerformer.h, 
            MKFilePerformer.h, 
            MKScorefilePerformer.h, 
            MKNoteReceiver.h, 
            MKScorefileWriter.h, 
            MKFileWriter.h, 
            MKPartRecorder.h, 
            MKScoreRecorder.h, 
            MKScorePerformer.h, 
            MKNoteFilter.h, 
            MKDeviceStatus.h, 
            MKPerformerDelegate.h, 
            MKMTCPerformer.h, 
            MKTuningSystem.h, 
            MKSynthPatch.h, 
            MKEnvelope.h, 
            MKSynthInstrument.h, 
            MKTimbre.h, 
            MKSamples.h, 
            MKWaveTable.h, 
            MKPartials.h, 
            MKUnitGenerator.h, 
            MKSynthData.h, 
            MKPatchTemplate.h, 
            MKSamplerInstrument.h
        ); 
    }; 
    LANGUAGE = English; 
    LOCALIZABLE_FILES = {}; 
    MAKEFILEDIR = .; 
    NEXTSTEP_BUILDTOOL = /bin/gnumake; 
    NEXTSTEP_INSTALLDIR = "$(LOCAL_LIBRARY_DIR)/Frameworks"; 
    NEXTSTEP_JAVA_COMPILER = /usr/bin/javac; 
    NEXTSTEP_OBJCPLUS_COMPILER = /usr/bin/cc; 
    PDO_UNIX_BUILDTOOL = $NEXT_ROOT/Developer/bin/make; 
    PDO_UNIX_JAVA_COMPILER = "$(NEXTDEV_BIN)/javac"; 
    PDO_UNIX_OBJCPLUS_COMPILER = "$(NEXTDEV_BIN)/gcc"; 
    PROJECTNAME = MusicKit; 
    PROJECTTYPE = Framework; 
    PROJECTVERSION = 2.8; 
    WINDOWS_BUILDTOOL = ./make.sh; 
    WINDOWS_INSTALLDIR = "$(HOMEDRIVE)$(LOCAL_DEVELOPER_DIR)/Frameworks"; 
    WINDOWS_JAVA_COMPILER = "$(JDKBINDIR)/javac.exe"; 
    WINDOWS_OBJCPLUS_COMPILER = "$(DEVDIR)/gcc"; 
}
