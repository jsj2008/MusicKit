{\rtf0\ansi{\fonttbl\f0\fnil Times-Roman;\f1\ftech Symbol;\f3\fmodern Ohlfs;}
\paperw16220
\paperh13060
\margl120
\margr0
\f0\b0\i0\ulnone\ql\fs24\fi0\li0\gray0\fc0\cf0\up0\dn0 Release 2.0  Copyright 
\f1 ã
\f0 1990 by NeXT Computer, Inc.  All Rights Reserved.\
\

\pard\tx3120\tx3620\tx4120\fs16\li2620\fc0\cf0 \

\fs28 \

\fs16 \

\fs28 \

\fs16 \

\pard\b\li1100\fc0\cf0 \
\
\
\

\fs36 DswitchtUG\

\fs16 \

\pard\tx7140\b0\fs28\li2100\fc0\cf0 INHERITS FROM	UnitGenerator\

\fs16 \

\fs28 DECLARED IN	musickit/unitgenerators/unitgenerators.h\

\fs16 \
\
\

\fs28 CLASS DESCRIPTION\

\fs16 \

\pard\tx3120\tx3620\tx4120\fs28\li2620\fc0\cf0 DswitchtUG reads a specified number of ticks from its first input signal and then switches to read the its second input signal.  You can cause a DswitchtUG to switch between its two inputs any number of times while its running.  The input signals can be independently scaled.  The input patchpoints must be allocated in the same memory space.  \

\fs16 \

\fs28 A similar class, DswitchUG, switches on a sample boundary and doesn't allow scaling on the second input.\

\fs16 \

\pard\tx7140\li2100\fc0\cf0 \
\

\fs28 MEMORY SPACES\

\fs16 \

\pard\tx3120\tx3620\tx4120\b\fs28\li2620\fc0\cf0 DswitchtUG
\i ab\

\b0 a	
\i0 output\

\i b	
\i0 input1 and input2\

\fs16 \

\pard\tx7140\li2100\fc0\cf0 \
\

\fs28 INSTANCE METHODS\

\fs16 \

\b \

\fs28 idleSelf\

\pard\f1\b0\li2620\fc0\cf0 - 
\f0\b idleSelf
\b0\i \

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 You never send this message.  It's invoked by sending the 
\b idle 
\b0 message to the object.  \
Sets the output patchpoint to 
\i sink
\i0 ,
\i  
\i0 thus ensuring that the object does not produce any output.  Note that you must send 
\b setOutput:
\b0  and 
\b run 
\b0 again to use the UnitGenerator after sending 
\b idle
\b0 .\

\fs16 \

\pard\tx7140\b\fs28\li2100\fc0\cf0 setInput1:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setInput1:
\b0\i aPatchpoint\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Sets the input 1 patchpoint to 
\i aPatchpoint
\i0 .  Returns 
\b nil
\b0  if the argument isn't a patchpoint; otherwise returns 
\b self
\b0 .\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setInput2:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setInput2:
\b0\i aPatchpoint\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Sets the input 2 patchpoint to 
\i aPatchpoint
\i0 .  Returns 
\b nil
\b0  if the argument isn't a patchpoint; otherwise returns 
\b self
\b0 .\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setDelayTicks:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setDelayTicks:
\b0\i (int)count\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Immediately switches the DswitchtUG to its first input and causes it to switch to its second input after 
\i count 
\i0 ticks have been read.  If 
\i count
\i0  is less than or equal to zero, the switch to the second input is performed immediately.  If the object is currently reading from its first input because of a previous invocation of this method, the old 
\i count
\i0  is superceded by the new one.  Returns 
\b self
\b0 .\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setOutput:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setOutput:
\b0\i aPatchpoint\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Sets the output patchpoint to 
\i aPatchpoint
\i0 .  Returns 
\b nil
\b0  if the argument isn't a patchpoint; otherwise returns 
\b self
\b0 .\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setScale1:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setScale1:
\b0\i (double)scale\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Sets the factor by which first input signal is scaled.  Returns 
\b self
\b0 .\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setScale2:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setScale2:
\b0\i (double)scale\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Sets the factor by which second input signal is scaled.  Returns 
\b self
\b0 .\

\fs16 \

\fs28 \

\fs16 \

\fs28 \

\fs16 \

}
