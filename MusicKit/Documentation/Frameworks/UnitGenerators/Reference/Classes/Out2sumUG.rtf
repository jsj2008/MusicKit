{\rtf0\ansi{\fonttbl\f0\fnil Times-Roman;\f1\ftech Symbol;\f3\fmodern Ohlfs;}
\paperw16220
\paperh12580
\margl120
\margr0
\f0\b0\i0\ulnone\ql\fs24\fi0\li0\gray0\fc0\cf0\up0\dn0 Release 2.0  Copyright 
\f1 ã
\f0 1990 by NeXT Computer, Inc.  All Rights Reserved.\
\

\pard\tx3120\tx3620\tx4120\fs16\li2620\fc0\cf0 \

\fs28 \

\fs16 \

\fs28 \

\fs16 \

\pard\b\li1100\fc0\cf0 \
\
\
\

\fs36 Out2sumUG\

\fs16 \

\pard\tx7140\b0\fs28\li2100\fc0\cf0 INHERITS FROM	UnitGenerator\

\fs16 \

\fs28 DECLARED IN	musickit/unitgenerators/unitgenerators.h\

\fs16 \
\
\

\fs28 CLASS DESCRIPTION\

\fs16 \

\pard\tx3120\tx3620\tx4120\fs28\li2620\fc0\cf0 Out2sumUG adds its input signal to the DSP's stereo output stream.  The signal is placed (or ªimagedº) between the two channels according to the value set through the 
\b setBearing:
\b0  or 
\b setBearing:scale:
\b0  method.  Alternatively, you can set the gain of either channel independently, through the 
\b setRightScale:
\b0  and 
\b setLeftScale:
\b0  methods. \

\fs16 \

\fs28 To write to just the left or just the right channel of the stereo ouput stream, you should use an Out1aUG or Out1bUG object, respectively.  Where the samples that are written to the DSP output stream are ultimately sentÐwhether to sound-out or to a soundfileÐdepends on the state of the Orchestra from which the Out1aUG or Out1bUG object was allocated.  By default, the Orchestra sends the samples to sound-out.\

\fs16 \

\fs28 If you're building SynthPatch subclasses, you should note that every SynthPatch object should have its own signal-output UnitGenerator; in other words, you don't allocate just one such object and then share it amongst the various SynthPatches.  The output signals produced by all the running Out1aUG's, Out1bUG's, and Out2sumUG's are mixed (added) together into the DSP's output stream.\

\fs16 \

\pard\tx7140\li2100\fc0\cf0 \
\

\fs28 MEMORY SPACES\

\fs16 \

\pard\tx3120\tx3620\tx4120\b\fs28\li2620\fc0\cf0 Out2sumUG
\i a\

\b0 a	
\i0 input \

\fs16 \

\pard\tx7140\li2100\fc0\cf0 \
\

\fs28 INSTANCE METHODS\

\fs16 \

\b \

\fs28 idleSelf\

\pard\f1\b0\li2620\fc0\cf0 - 
\f0\b idleSelf
\b0\i \

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 You never send this message.  It's invoked by sending the 
\b idle 
\b0 message to the object.   Since Out2sum has no outputs, it idles itself by patching its inputs to 
\i zero
\i0 . Thus, an idle Out2sum makes no sound.   Note that you must send 
\b setInput:
\b0  and 
\b run 
\b0 again to use the UnitGenerator after sending 
\b idle
\b0 .\

\fs16 \

\pard\tx7140\b\fs28\li2100\fc0\cf0 \
runSelf\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b runSelf
\b0\i \

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 If bearing has not been set, sets it to 0.0.  This method is invoked when you send the 
\b run 
\b0 message to the object.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setBearing:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setBearing:
\b0\i (double)degrees\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Distributes the input signal between the two output channels according to the value of 
\i degrees
\i0 :  0.0 degrees is center, 
\f1 -
\f0 45.0 is hard left, 45.0 is hard right.  Bearing is reflected as 
\i degrees
\i0  exceeds the boundaries; thus, for example, 50.0 degrees is the same as 40.0, 60.0 is 30.0, 90.0 is 0.0, and so on.  Returns 
\b self
\b0 .\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setBearing:scale:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setBearing:
\b0\i (double)degrees 
\b\i0 scale:
\b0 (double)
\i value\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 This is the same as 
\b setBearing:
\b0 , but the input signal is scaled by 
\i value
\i0 , which should be between 0.0 and 1.0, before being distributed.  Returns 
\b self
\b0 .\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setInput:\

\pard\f1\b0\li2620\fc0\cf0 - 
\f0\b setInput:
\b0\i aPatchpoint\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Sets the input patchpoint to 
\i aPatchpoint
\i0 .  Returns 
\b nil
\b0  if the argument isn't a patchpoint; otherwise returns 
\b self
\b0 .\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setLeftScale:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setLeftScale:
\b0\i (double)value\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Sets the factor by which the signal that's written to the left output channel is scaled.  By default, the scaler is set to a value that's just a tad less than 1.0.  Effective values are between 0.0 and 1.0 (a negative 
\i value
\i0  is the same as its absolute value, but with a 180 degree phase shift).  Returns 
\b self
\b0 .\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setRightScale:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setRightScale:
\b0\i (double)value\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Sets the factor by which the signal that's written to the right output channel is scaled.  By default, the scaler is set to a value that lacks 1.0 by a speck.    Effective values are between 0.0 and 1.0 (a negative 
\i value
\i0  is the same as its absolute value, but with a 180 degree phase shift).  Returns 
\b self
\b0 .\

\fs16 \

\fs28 \

\fs16 \

\fs28 \

\fs16 \

}
