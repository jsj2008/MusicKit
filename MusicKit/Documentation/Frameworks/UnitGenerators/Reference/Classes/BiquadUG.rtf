{\rtf0\ansi{\fonttbl\f0\fnil Times-Roman;\f1\ftech Symbol;\f3\fswiss Helvetica;\f2\fmodern Courier;}
\paperw15820
\paperh12580
\margl120
\margr120
{\colortbl;\red0\green0\blue0;}
\f0\b0\i0\ulnone\ql\fs24\fi0\li0\gray0\fc0\cf0\up0\dn0 Release 3.0  Copyright 
\f1 ã
\f0 1992 by CCRMA.  All Rights Reserved.\
\

\pard\tx3120\tx3620\tx4120\fs16\li2620\fc0\cf0 \

\fs28 \

\fs16 \

\fs28 \

\fs16 \

\pard\b\li1100\fc0\cf0 \
\
\
\

\fs36 BiquadUG\

\fs16 \

\pard\tx7140\b0\fs28\li2100\fc0\cf0 INHERITS FROM	UnitGenerator\

\fs16 \

\fs28 DECLARED IN	musickit/unitgenerators/unitgenerators.h\

\fs16 \
\

\fs28 CLASS DESCRIPTION\

\fs16 \

\pard\tx3120\tx3620\tx4120\fs28\li2620\fc1\cf1 The 
\b BiquadUG
\b0  unit-generator implements a two-pole, two-zero filter section in direct form.  The output space can only be 
\i y
\i0  DSP memory.    Therefore, only two leaf classes exist, 
\b BiquadUGx
\b0  and 
\b BiquadUGy
\b0 , corresponding to the two possible input spaces.\
\
The biquad transfer function is\
\
                                              -1              -2\
            		1  +  b1 * z   + b2 * z\
      H(z) = g * -------------------------\
                                              -1               -2\
                 	1  +  a1 * z   + a2 * z\
\
The biquad difference equation which implements H(z) is\
\
     v(n) = g * x(n) - a1 * v(n-1) - a2 * v(n-2);\
      y(n) =     v(n) + b1 * v(n-1) + b2 * v(n-2);\
\
where n denotes the current sample time, x(n) is the input signal at time n, y(n) is the output signal, and v(n) is an intermediate signal.  This is the so-called "transposed direct form II" digital filter structure, which avoids the possibility of internal overflow. See Digital Signal Processing by A.V. Oppenheim and R.W. Schafer (Prentice-Hall, 1975, p. 155) for further discussion.\
\

\pard\tx7140\li2100\fc0\cf0 MEMORY SPACES\

\fs16 \

\pard\tx3120\tx3620\tx4120\b\fs28\li2620\fc0\cf0 BiquadUG
\i ab\

\b0 a	
\i0 output\

\i b	
\i0 input\

\fs16 \

\pard\tx7140\li2100\fc0\cf0 \
\

\fs28 INSTANCE METHODS\

\fs16 \

\pard\tx520\tx1060\tx1600\tx2120\tx2660\tx3200\tx3720\tx4260\tx4800\tx5320\f3\fs24\fc0\cf0 \

\pard\tx7140\f0\b\fs28\li2100\fc0\cf0 idleSelf\

\pard\f1\b0\li2620\fc0\cf0 - 
\f0\b idleSelf
\b0\i \

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 You never send this message.  It's invoked by sending the 
\b idle 
\b0 message to the object.  \
Sets the output patchpoint to 
\i sink
\i0 ,
\i  
\i0 thus ensuring that the object does not produce any output.  Note that you must send 
\b setOutput:
\b0  and 
\b run 
\b0 again to use the UnitGenerator after sending 
\b idle
\b0 .\

\fs16 \

\pard\tx7140\b\fs28\li2100\fc1\cf1 setInput:\

\pard\fi-1020\li3620\fc1\cf1 - setInput:
\b0 (id)
\i aPatchPoint
\b\i0  \

\pard\tx3120\tx3620\tx4120\b0\li2620\fc1\cf1 \
  Sets filter input. \

\pard\b\fi-1020\li3620\fc1\cf1 \

\pard\tx7140\li2100\fc1\cf1 setOutput:\

\pard\fi-1020\li3620\fc1\cf1 - setOutput:
\b0 (id)
\i aPatchPoint
\b\i0  \

\pard\tx3120\tx3620\tx4120\b0\li2620\fc1\cf1 \
  Sets filter output. \

\pard\b\fi-1020\li3620\fc1\cf1 \

\pard\tx7140\li2100\fc1\cf1 clear\

\pard\fi-1020\li3620\fc1\cf1 - clear \

\pard\tx3120\tx3620\tx4120\b0\li2620\fc1\cf1 \
  Clear internal filter state. \

\pard\tx7140\b\li2100\fc1\cf1 \
setFirstDelayedSample:\

\pard\fi-1020\li3620\fc1\cf1 - setFirstDelayedSample:
\b0 (double)
\i d1
\b\i0  \
\

\b0 Sets the internal filter state of the first delayed sample.
\b \

\pard\tx7140\li2100\fc1\cf1 \
setSecondDelayedSample:\

\pard\fi-1020\li3620\fc1\cf1 - setSecondDelayedSample:
\b0 (double)
\i d2
\b\i0  \
\

\pard\tx3120\tx3620\tx4120\b0\li2620\fc1\cf1 Sets the internal filter state of the second delayed sample.\
\
  The following four methods set the corresponding coefficients.  See discussion above. \
  \

\pard\tx7140\b\li2100\fc1\cf1 setA1:\

\fi-1020\li3620 - setA1:
\b0 (double)
\i a1
\b\i0  \

\pard\tx3120\tx3620\tx4120\b0\li2620\fc1\cf1 \
Sets the A1 filter coefficient.\

\pard\tx7140\b\li2100\fc1\cf1 \
setA2:\

\fi-1020\li3620 - setA2:
\b0 (double)
\i a2
\b\i0  
\pard\tx3120\tx3620\tx4120\b0\li2620\fc1\cf1 \
\
Sets the A2 filter coefficient..\

\pard\tx7140\b\li2100\fc1\cf1 \
setB1:\

\fi-1020\li3620 - setB1:
\b0 (double)
\i b1
\b\i0  \

\pard\tx3120\tx3620\tx4120\b0\li2620\fc1\cf1 \
Sets the B1 filter coefficient..\

\pard\tx7140\b\li2100\fc1\cf1 \
setB2:\

\pard\fi-1020\li3620\fc1\cf1 - setB2:
\b0 (double)
\i b2
\b\i0  \

\pard\tx3120\tx3620\tx4120\b0\li2620\fc1\cf1 \
Sets the B2 filter coefficient..\

\pard\b\fi-1020\li3620\fc1\cf1 \

\pard\tx7140\li2100\fc1\cf1 setGain:\

\pard\fi-1020\li3620\fc1\cf1 - setGain:
\b0 (double)
\i g
\b\i0  \

\pard\tx3120\tx3620\tx4120\b0\li2620\fc1\cf1   \
Sets gain of filter. \
\

\pard\tx7140\b\li2100\fc1\cf1 setComplexPolesRadius:angle:\

\pard\fi-1020\li3620\fc1\cf1 - setComplexPolesRadius:
\b0 (double)
\i r
\i0  
\b angle:
\b0 (double)
\i t
\b\i0 \

\pard\tx3120\tx3620\tx4120\b0\li2620\fc1\cf1 \
This method provides a convenient way to set the filter feedback coefficients.    Sets the coefficients such as to provide the specified pole radius and angle.  The angle is in radians. \
\

\pard\tx7140\b\li2100\fc1\cf1 setComplexZerosRadius:angle:\

\pard\fi-1020\li3620\fc1\cf1 - setComplexZerosRadius:
\b0 (double)
\i r
\b\i0  angle:
\b0 (double)
\i t\
\

\pard\tx3120\tx3620\tx4120\i0\li2620\fc1\cf1 This method provides a convenient way to set the filter feedforward coefficients.    Sets the coefficients such as to provide the specified zero radius and angle.  The angle is in radians. \
\

\pard\tx7140\b\li2100\fc1\cf1 setComplexPolesFrequency:bandwidth:\

\pard\fi-1020\li3620\fc1\cf1 - setComplexPolesFrequency:
\b0 (double)
\i f
\b\i0  bandwidth:
\b0 (double)
\i b
\b\i0  \

\pard\tx3120\tx3620\tx4120\b0\li2620\fc1\cf1 \
This method provides a convenient way to set the filter feedback coefficients.    Sets the coefficients such as to provide the specified center frequency and bandwidth.  The angle is in radians. \
\
\

\pard\tx7140\b\li2100\fc1\cf1 setComplexZerosFrequency:bandwidth:\

\pard\fi-1020\li3620\fc1\cf1 - setComplexZerosFrequency:
\b0 (double)
\i f
\b\i0  bandwidth:
\b0 (double)
\i b
\b\i0  \

\b0\i \

\pard\tx3120\tx3620\tx4120\i0\li2620\fc1\cf1 This method provides a convenient way to set the filter feedforward coefficients.    Sets the coefficients such as to provide the specified center frequency and bandwidth.  The angle is in radians. \
\

\pard\tx7140\b\li2100\fc1\cf1 setComplexPolesFrequency:t60:\

\pard\fi-1020\li3620\fc1\cf1 - setComplexPolesFrequency:
\b0 (double)
\i f
\i0  
\b t60:
\b0 (double)
\i t60
\b\i0 \
\

\pard\tx3120\tx3620\tx4120\b0\li2620\fc1\cf1 Sets the coefficients such as to place the poles at the specified freq with the given 
\i t60
\i0  value.  
\i t60
\i0  is the time, in seconds, to decay to -60 dB. \

}
