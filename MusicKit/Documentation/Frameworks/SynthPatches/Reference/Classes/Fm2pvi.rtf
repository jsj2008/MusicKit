{\rtf0\ansi{\fonttbl\f0\fnil Times-Roman;\f1\ftech Symbol;\f2\fmodern Courier;}
\paperw16280
\paperh7800
\margl120
\margr120
{\colortbl;\red0\green0\blue0;}
\f0\b0\i0\ulnone\ql\fs24\fi0\li0\gray0\fc0\cf0\up0\dn0 Release 4.0  Copyright 
\f1 ã
\f0 1993 by Stanford University.  All Rights Reserved.\
\

\pard\tx3120\tx3620\tx4120\fs16\li2620\fc0\cf0 \

\fs28 \

\fs16 \

\fs28 \

\fs16 \

\pard\b\li1100\fc0\cf0 \
\
\
\

\fs36 Fm2pvi
\fs16 \

\pard\tx7140\b0\fs28\li2100\fc0\cf0 \
INHERITS FROM	SynthPatch\

\fs16 \

\fs28 DECLARED IN	musickit/synthpatches/synthpatches.h\

\fs16 \
\
\

\fs28 CLASS DESCRIPTION\

\fs16 \

\b\fs28\fc1\cf1 Fm2pvi
\b0  is a parallel-modulator frequency modulation SynthPatch, with an interpolating-oscillator as a carrier.  It provides for envelopes on amplitude, frequency, and a separate envelope on each modulator's FM index.  It also supports vibrato.   Although it does not inherit from 
\b Fm1vi
\b0 , it implements the same parameters, plus some of its own. 
\pard\tx1140\tx2280\tx3420\tx4560\tx5700\tx6840\tx7980\fs24\fc0\cf0 \

\fs36\fc1\cf1 \

\pard\tx7140\fs28\li2100\fc1\cf1 When using this SynthPatch in an interactive real-time context, such as playing from a MIDI keyboard, call 
\b MKUseRealTimeEnvelopes()
\b0  before allocating the SynthPatch.\

\fc0\cf0 \
INSTANCE VARIABLES\

\fs16 \

\pard\tx7140\tx10180\tx10680\i\fs28\fi-4540\li7140\fc0\cf0 Inherited from Object
\i0 	Class	isa;\

\fs16 \

\i\fs28 Inherited from SynthPatch
\i0 	id	synthElements;\

\pard\tx10180\tx10680\fi-520\li7660\fc0\cf0 id	synthInstrument;\
int	noteTag;\
MKSynthStatus	status;\
id	patchTemplate;\
BOOL	isAllocated;\
id	orchestra;\

\pard\tx7140\tx10180\tx10680\i\fi-4540\li7140\fc0\cf0 Declared in Fm2pvi
\i0 	WaveTable *	waveform\
	WaveTable *	m1Waveform\
	WaveTable *	m2Waveform\
	double 	cRatio\
	double 	m1Ratio\
	Envelope *	ampEnv\
	double 	amp0\
	double 	amp1\
	double 	ampAtt\
	double 	ampRel\
	Envelope *	freqEnv\
	double 	freq0\
	double 	freq1\
	double 	freqAtt\
	double 	freqRel\
	Envelope *	m1IndEnv\
	double 	m1Ind0\
	double 	m1Ind1\
	double 	m1IndAtt\
	double 	m1IndRel\
	Envelope *	m2IndEnv\
	double 	m2Ind0\
	double 	m2Ind1\
	double 	m2IndAtt\
	double 	m2IndRel\
	double 	bright\
	double 	bearing\
	double 	portamento\

\fc1\cf1 	double 	phase\
	double 	m1Phase\
	double 	velocitySensitivity\
	double	afterTouchSensitivity\
	double 	pitchbendSensitivity\
	int 	velocity\
	int 	pitchbend\
	int 	afterTouch\
	int 	volume\
	int 	wavelen\

\fc0\cf0 	WaveTable *	vibWaveform\
	double 	svibAmp0\
	double 	svibAmp1\
	double 	svibFreq0\
	double 	svibFreq1\
	double 	rvibAmp\
	 int 	modWheel\
	double 	panSensitivity\
	int 	pan\
	
\fs16 \

\pard\tx7140\li2100\fc0\cf0 \

\fs28 METHOD TYPES\

\fs16 \

\pard\tx7140\tx10180\tx10680\fi-4540\li7140\fc0\cf0 	
\fs28 + patchTemplateFor:\

\f1 	- 
\f0 freeSelf\

\f1 	- 
\f0 controllerValues:	\

\fs16 	
\f1\fs28 - 
\f0 noteOnSelf:
\fs16 \

\fs28 	
\f1 - 
\f0 noteOffSelf:
\pard\tx7140\fs16\li2100\fc0\cf0 \

\pard\tx7140\tx10180\tx10680\fs28\fi-4540\li7140\fc0\cf0 	
\f1 - 
\f0 noteUpdateSelf:
\pard\tx7140\fs16\li2100\fc0\cf0 \

\pard\tx7140\tx10180\tx10680\fs28\fi-4540\li7140\fc0\cf0 	
\f1 - 
\f0 noteEndSelf	\

\pard\tx7140\fs16\li2100\fc0\cf0 \
\

\fs28 CLASS METHODS\
\

\b patchTemplateFor:\

\pard\tx3120\tx3620\tx4120\b0\fs16\li2620\fc0\cf0 \

\f1\fs28 + 
\f0\b patchTemplateFor:
\b0\i aNote\

\fs16 \

\i0\fs28 Returns a template. A non-zero for 
\b svibAmp 
\b0 and 
\b rvibAmp 
\b0 determines whether vibrato resources are allocated. \

\pard\tx7140\b\fs16\li2100\fc0\cf0 \

\b0\fs28 \
INSTANCE METHODS\

\fs16 \

\b \

\fs28 noteOnSelf:\

\pard\tx3120\tx3620\tx4120\b0\fs16\li2620\fc0\cf0 \

\f1\fs28 - 
\f0\b noteOnSelf:
\b0\i aNote\

\fs16 \

\fs28 aNote 
\i0 is assumed to be a noteOn or noteDur.  This method triggers (or retriggers) the Note's envelopes, if any.  If this is a new phrase, all instance variables are set to default values, then the values are read from the Note.  \

\pard\tx7140\b\fs16\li2100\fc0\cf0 \

\fs28 noteUpdateSelf:\

\pard\tx3120\tx3620\tx4120\b0\fs16\li2620\fc0\cf0 \

\f1\fs28 - 
\f0\b noteUpdateSelf:
\b0\i aNote\

\fs16 \

\fs28 aNote 
\i0 is assumed to be a noteUpdate and the receiver is assumed to be currently playing a Note.  Sets parameters as specified in 
\i aNote.
\i0 \

\pard\tx7140\b\fs16\li2100\fc0\cf0 \

\fs28 noteOffSelf:\

\pard\tx3120\tx3620\tx4120\b0\fs16\li2620\fc0\cf0 \

\f1\fs28 - (
\f0\fc1\cf1 double
\f1\fc0\cf0 )
\f0\b noteOffSelf:
\b0\i aNote\

\fs16 \

\fs28 aNote 
\i0 is assumed to be a noteOff.  This method causes the Note's envelopes (if any) to begin its release portion and returns the time for the envelopes to finish.  Also sets any parameters present in 
\i aNote.
\pard\tx7140\b\i0\fs16\li2100\fc0\cf0 \

\fs28 \
noteEndSelf\

\pard\tx3120\tx3620\tx4120\b0\fs16\li2620\fc0\cf0 \

\f1\fs28 - 
\f0\b noteEndSelf
\b0\i \

\fs16 \

\i0\fs28 Resest instance variables to default values.
\pard\tx7140\b\fs16\li2100\fc0\cf0 \

\fs28 \
preemptFor:\

\pard\tx3120\tx3620\tx4120\b0\fs16\li2620\fc0\cf0 \

\f1\fs28 - 
\f0\b\fc1\cf1 preemptFor:
\b0\i aNote
\fc0\cf0 \

\fs16 \

\i0\fs28 Preempts envelope, if any.
\pard\tx7140\b\fs16\li2100\fc0\cf0 \

\fs28 \

\b0\fc1\cf1 PARAMETER INTERPRETATION\

\pard\tx1140\tx2280\tx3420\tx4560\tx5700\tx6840\tx7980\b\fs24\fc0\cf0 \

\pard\tx7140\b0\fs28\li2100\fc1\cf1 In addition to the parameters described in 
\b Fm11vi.rtfd
\b0 , the following parameters are supported:\
\

\b afterTouch - 
\b0 Note that 
\b afterTouch
\b0  applies here only to the cascade modulator's index.\

\pard\tx1140\tx2280\tx3420\tx4560\tx5700\tx6840\tx7980\b\fs24\fc0\cf0 \

\pard\tx7140\fs28\li2100\fc1\cf1 controlChange
\b0  -  MIDI pan (controller 10) has the same effect as 
\b bearing
\b0 .  If the 
\b panSensitivity
\b0  is 1.0, a MIDI pan value of  0 is full left and 127 is full right.  If the value of  
\b panSensitivity
\b0  is less than 1.0, the pan range is narrowed toward the center.  The value is set by the companion parameter, 
\b controlVal
\b0 .  \

\b \
controlVal
\b0  - See controlChange.\

\b \
m2Ratio
\b0  - Scaler on second modulator frequency.  Defaults to 2 for Fm2cvi and Fm2cnvi.  Defaults to 1.  The resulting modulator frequency is the value of 
\b m2Ratio
\b0  multiplied by the freq parameter.\

\b \
m2Ind
\b0  - Index of 2nd modulator.  If there's an envelope on the index of the 2nd modulator, this is the index when the envelope is at 1.  
\b m2Ind1
\b0  is synonym for 
\b m2Ind
\b0 .  \

\b \
m2IndEnv
\b0  - Frequency modulation index envelope for the second modulator.  \

\b \
m2Ind0
\b0  - Modulation index for the second modulator when envelope is at 0.  m2Ind is the index when envelope is at 1.\

\b \
m2IndAtt
\b0  - Time of attack portion of second modulator index envelope in seconds.  If this parameter is not present, the times in the envelope are used verbatim.\

\b \
m2IndRel
\b0  - Time of release portion of second modulator index envelope in seconds.  If this parameter is not present, the times in the envelope are used verbatim.\

\b \
m2Waveform
\b0  - Second modulator WaveTable.  Defaults to sine.\

\b \
m2Phase
\b0  - Initial phase in degrees of modulator wavetable.  Rarely needed.  Defaults to 0.0.\

\b \
panSensitivity - 
\b0 In the range 0.0:1.0.  Default is 1.0.\
\

\b velocity -
\b0  In addition to the usual amplitude scaling, velocity scales the strength of  the FM modulation.  The default velocity (64) has no effect on FM index.  \

\b \

\b0 \

}
