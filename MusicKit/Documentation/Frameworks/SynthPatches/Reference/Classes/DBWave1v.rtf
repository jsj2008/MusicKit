{\rtf0\ansi{\fonttbl\f0\fnil Times-Roman;\f1\ftech Symbol;\f2\fmodern Courier;}
\paperw16220
\paperh12580
\margl120
\margr0
{\colortbl;\red0\green0\blue0;}
\f0\b0\i0\ulnone\ql\fs24\fi0\li0\gray0\fc0\cf0\up0\dn0 Release 4.0  Copyright 
\f1 ã
\f0 1993 by Stanford University.  All Rights Reserved.\
\

\pard\tx3120\tx3620\tx4120\fs16\li2620\fc0\cf0 \

\fs28 \

\fs16 \

\fs28 \

\fs16 \

\pard\b\li1100\fc0\cf0 \
\
\
\

\fs36 DBWave1vi, DBWave1v
\fs16 \

\pard\tx7140\b0\fs28\li2100\fc0\cf0 \
INHERITS FROM	Wave1vi\

\fs16 \

\fs28 DECLARED IN	musickit/synthpatches/synthpatches.h\

\fs16 \
\
\

\fs28 CLASS DESCRIPTION\

\fs16 \

\pard\tx3120\tx3620\tx4120\b\fs28\li2620\fc1\cf1 DBWave1vi
\b0  is like 
\b Wave1vi
\b0 , but it includes support for the Music Kit Timbre Data Base. 
\b DBWave1v 
\b0 is like 
\b DBWave1vi
\b0 , but it uses a non-interpolating-oscillator (lower quality, but uses less DSP computation.)   See
\b  TimbreDataBase.rtf 
\b0 for details on the Timbre Data Base itself.
\fs16\fc0\cf0 \

\pard\tx7140\li2100\fc0\cf0 \

\pard\tx3120\tx3620\tx4120\fs28\li2620\fc1\cf1 When using this SynthPatch in an interactive real-time context, such as playing from a MIDI keyboard, call 
\b MKUseRealTimeEnvelopes()
\b0  before allocating the SynthPatch.\

\pard\tx7140\li2100\fc0\cf0 \
INSTANCE VARIABLES\

\fs16 \

\pard\tx7140\tx10180\tx10680\i\fs28\fi-4540\li7140\fc0\cf0 Inherited from Object
\i0 	Class	isa;\

\fs16 \

\i\fs28 Inherited from SynthPatch
\i0 	id	synthElements;\

\pard\tx10180\tx10680\fi-520\li7660\fc0\cf0 id	synthInstrument;\
int	noteTag;\
MKSynthStatus	status;\
id	patchTemplate;\
BOOL	isAllocated;\
id	orchestra;\

\pard\tx7140\tx10180\tx10680\i\fi-4540\li7140\fc0\cf0 Inherited from Wave1i
\i0 	WaveTable *	waveform\
	Envelope *	ampEnv\
	double 	amp0\
	double 	amp1\
	double 	ampAtt\
	double 	ampRel\
	Envelope *	freqEnv\
	double 	freq0\
	double 	freq1\
	double 	freqAtt\
	double 	freqRel\
	double 	bearing\
	double 	portamento\
	double	phase\
	double 	velocitySensitivity\
	double 	pitchbendSensitivity\
	int 	velocity\
	int 	pitchbend\
	int 	volume\
	int 	wavelen\

\i Inherited from Wave1vi
\i0 	WaveTable *	vibWaveform\
	double 	svibAmp0\
	double 	svibAmp1\
	double 	svibFreq0\
	double 	svibFreq1\
	double 	rvibAmp\
	 int 	modWheel\

\i Declared in DBWave1vi
\i0 	double 	panSensitivity\
	double 	balanceSensitivity\
	WaveTable *	waveform0\
	WaveTable *	waveform1\
	int 	pan\
	int 	balance\
	DSPDatum *	table\
	
\fs16 \

\pard\tx7140\li2100\fc0\cf0 \

\fs28 METHOD TYPES\

\fs16 \

\pard\tx7140\tx10180\tx10680\fi-4540\li7140\fc0\cf0 	
\fs28 + patchTemplateFor:\

\f1 	- 
\f0 freeSelf\

\f1 	- 
\f0 controllerValues:	\

\fs16 	
\f1\fs28 - 
\f0 noteOnSelf:
\fs16 \

\fs28 	
\f1 - 
\f0 noteOffSelf:
\pard\tx7140\fs16\li2100\fc0\cf0 \

\pard\tx7140\tx10180\tx10680\fs28\fi-4540\li7140\fc0\cf0 	
\f1 - 
\f0 noteUpdateSelf:
\pard\tx7140\fs16\li2100\fc0\cf0 \

\pard\tx7140\tx10180\tx10680\fs28\fi-4540\li7140\fc0\cf0 	
\f1 - 
\f0 noteEndSelf	\

\pard\tx7140\fs16\li2100\fc0\cf0 \
\

\fs28 CLASS METHODS\
\

\b patchTemplateFor:\

\pard\tx3120\tx3620\tx4120\b0\fs16\li2620\fc0\cf0 \

\f1\fs28 + 
\f0\b patchTemplateFor:
\b0\i aNote\

\fs16 \

\i0\fs28 Returns a template. A non-zero for 
\b svibAmp 
\b0 and 
\b rvibAmp 
\b0 determines whether vibrato resources are allocated. \

\pard\tx7140\b\fs16\li2100\fc0\cf0 \

\b0\fs28 \
INSTANCE METHODS\

\fs16 \

\b \

\fs28 noteOnSelf:\

\pard\tx3120\tx3620\tx4120\b0\fs16\li2620\fc0\cf0 \

\f1\fs28 - 
\f0\b noteOnSelf:
\b0\i aNote\

\fs16 \

\fs28 aNote 
\i0 is assumed to be a noteOn or noteDur.  This method triggers (or retriggers) the Note's envelopes, if any.  If this is a new phrase, all instance variables are set to default values, then the values are read from the Note.  \

\pard\tx7140\b\fs16\li2100\fc0\cf0 \

\fs28 noteUpdateSelf:\

\pard\tx3120\tx3620\tx4120\b0\fs16\li2620\fc0\cf0 \

\f1\fs28 - 
\f0\b noteUpdateSelf:
\b0\i aNote\

\fs16 \

\fs28 aNote 
\i0 is assumed to be a noteUpdate and the receiver is assumed to be currently playing a Note.  Sets parameters as specified in 
\i aNote.
\i0 \

\pard\tx7140\b\fs16\li2100\fc0\cf0 \

\fs28 noteOffSelf:\

\pard\tx3120\tx3620\tx4120\b0\fs16\li2620\fc0\cf0 \

\f1\fs28 - (
\f0\fc1\cf1 double
\f1\fc0\cf0 )
\f0\b noteOffSelf:
\b0\i aNote\

\fs16 \

\fs28 aNote 
\i0 is assumed to be a noteOff.  This method causes the Note's envelopes (if any) to begin its release portion and returns the time for the envelopes to finish.  Also sets any parameters present in 
\i aNote.
\pard\tx7140\b\i0\fs16\li2100\fc0\cf0 \

\fs28 \
noteEndSelf\

\pard\tx3120\tx3620\tx4120\b0\fs16\li2620\fc0\cf0 \

\f1\fs28 - 
\f0\b noteEndSelf
\b0\i \

\fs16 \

\i0\fs28 Resest instance variables to default values.
\pard\tx7140\b\fs16\li2100\fc0\cf0 \

\fs28 \
preemptFor:\

\pard\tx3120\tx3620\tx4120\b0\fs16\li2620\fc0\cf0 \

\f1\fs28 - 
\f0\b\fc1\cf1 preemptFor:
\b0\i aNote
\fc0\cf0 \

\fs16 \

\i0\fs28 Preempts envelope, if any.
\pard\tx7140\b\fs16\li2100\fc0\cf0 \

\fs28 \

\b0\fc1\cf1 PARAMETER INTERPRETATION\

\pard\tx1140\tx2280\tx3420\tx4560\tx5700\tx6840\tx7980\b\fs24\fc0\cf0 \

\pard\tx7140\b0\fs28\li2100\fc1\cf1 In addition to the parameters described in 
\b Wave1vi.rtfd
\b0 , the following parameters are supported:\
\

\b balanceSensitivity
\b0  - In the range 0.0:1.0.  Default is 1.0.\

\pard\tx1140\tx2280\tx3420\tx4560\tx5700\tx6840\tx7980\b\fs24\fc0\cf0 \

\pard\tx7140\fs28\li2100\fc1\cf1 controlChange
\b0  - MIDI balance (controller 8) interpolates between two timbres, 
\b waveform0
\b0  and 
\b waveform1
\b0 .  When the companion parameter, 
\b controlVal
\b0  is 0 the result is 
\b waveform0
\b0 .  When 
\b controlVal
\b0  is 127 (the default), the result is 
\b waveform1
\b0 .  Values between produce a linearly-interpolated timbre.  Setting the 
\b balanceSensitivity
\b0  parameter to less than 1.0 reduces the maximum proportion of 
\b waveform1
\b0 .  Since any change in 
\b balance
\b0  in this SynthPatch results in a new wavetable being sent to the DSP, there are limitations as to how quickly and smoothly it can be done.  Frequent changes may disturb timing.  Setting 
\b wavelen
\b0  to 128 or 64 helps.  If you are doing a great deal of wave table interpolation, you should use 
\b DBWave2vi
\b0 .  \
       MIDI pan (controller 10) has the same effect as 
\b bearing
\b0 .  If the 
\b panSensitivity
\b0  is 1.0, a MIDI pan value of  0 is full left and 127 is full right.  If the value of  
\b panSensitivity
\b0  is less than 1.0, the pan range is narrowed toward the center.  The value is set by the companion parameter, 
\b controlVal
\b0 .  \

\b \
controlVal
\b0  - See controlChange.\

\b \
panSensitivity - 
\b0 In the range 0.0:1.0.  Default is 1.0.\
\

\b waveform0
\b0  - Waveform when balance is 0.  Default is a sine wave.\

\b \
waveform1
\b0  - Waveform when balance is 1.  Default is a sine wave.  waveform1 is a synonym for waveform.\

\b \

\pard\tx1140\tx2280\tx3420\tx4560\tx5700\tx6840\tx7980\b0\qc\fs36\fc0\cf0 \

}
