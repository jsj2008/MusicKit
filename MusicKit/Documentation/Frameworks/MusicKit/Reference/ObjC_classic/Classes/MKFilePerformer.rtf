{\rtf0\ansi{\fonttbl\f0\fnil Times-Roman;\f1\ftech Symbol;\f2\fmodern Courier;}
\paperw16220
\paperh13060
\margl120
\margr0
\f0\b0\i0\ulnone\ql\fs24\fi0\li0\gray0\fc0\cf0\up0\dn0 Release 2.0  Copyright 
\f1 „
\f0 1990 by NeXT Computer, Inc.  All Rights Reserved.\
Release 4.2  Updates Copyright 
\f1 „
\f0 1996 by Stanford University.  All Rights Reserved.\
\

\pard\tx3120\tx3620\tx4120\fs16\li2620\fc0\cf0 \

\fs28 \

\fs16 \

\fs28 \

\fs16 \

\pard\b\li1100\fc0\cf0 \
\
\
\

\fs36 FilePerformer\

\fs16 \

\pard\tx7140\b0\fs28\li2100\fc0\cf0 INHERITS FROM	Performer : Object\

\fs16 \

\fs28 DECLARED IN	musickit.h\

\fs16 \
\
\

\fs28 CLASS DESCRIPTION\

\fs16 \

\pard\tx3120\tx3620\tx4120\fs28\li2620\fc0\cf0 During a Music Kit performance, a FilePerformer reads and performs time-ordered music data from a file on the disk.  An abstract class, FilePerformer provides common functionality and declares subclass responsibilities for its one subclass, ScorefilePerformer.\

\fs16 \

\fs28 A FilePerformer is associated with a file either by the file's name or through an NXStream pointer.  If you associate a FilePerformer with a file name (through the 
\b setFile:
\b0  method) the object opens and closes the file for you:  The file is opened for reading when the FilePerformer receives the 
\b activate
\b0  message and closed when it receives 
\b deactivate
\b0 .  The 
\b setFileStream:
\b0  method associates a FilePerformer with an NXStream pointer.  In this case, opening and closing the file is the responsibility of the application.  The FilePerformer's stream pointer is set to NULL after each performance so you must send another 
\b setFileStream:
\b0  message in order to replay the file.  Any number of FilePerformers can perform the same file simultaneously.\

\fs16 \

\fs28 The FilePerformer class declares two methods as subclass responsibilities:  
\b nextNote
\b0  and 
\b performNote:
\b0 .  A subclass implementation of
\b  nextNote
\b0  should be designed to read the next line of information in the file and from it create either a Note object or a timeTag value (for the following Note).  It returns the Note that it creates, or, in the case of a timeTag, it sets the instance variable 
\b fileTime
\b0  to represent the current time in the file and returns 
\b nil
\b0 .  
\b performNote:
\b0  should perform any desired manipulations on the Note created by 
\b nextNote
\b0  and then pass it as the argument to 
\b sendNote:
\b0  (sent to a NoteSender).  The value returned by 
\b performNote:
\b0  is ignored.\

\fs16 \

\fs28 FilePerformer defines two timing variables, 
\b firstTimeTag
\b0  and 
\b lastTimeTag
\b0 .  They represent the smallest and largest timeTag values that are considered for performance:  Notes with timeTags that are less than 
\b firstTimeTag
\b0  are ignored; if 
\b nextNote
\b0  creates a timeTag greater than 
\b lastTimeTag
\b0 , the FilePerformer is deactivated.\

\fs16 \

\fs28 Creation of a FilePerformer's NoteSender(s) is a subclass responsibility.\

\fs16 \

\fs28 See also:  ScorefilePerformer, Performer\

\fs16 \

\pard\tx7140\li2100\fc0\cf0 \
\

\fs28 INSTANCE VARIABLES\

\fs16 \

\pard\tx7140\tx10180\tx10680\i\fs28\fi-4540\li7140\fc0\cf0 Inherited from Object
\i0 	Class	isa;\

\fs16 \

\i\fs28 Inherited from Performer
\i0 	id	conductor;\

\pard\tx10180\tx10680\fi-520\li7660\fc0\cf0 MKPerformerStatus	status;\
int	performCount;\
double	timeShift;\
double	duration;\
double	time;\
double	nextPerform;\
id	noteSenders;\
id	delegate;\

\pard\tx7140\tx10180\tx10680\fs16\fi-4540\li7140\fc0\cf0 \

\i\fs28 Declared in FilePerformer
\i0 	char	*filename;\

\pard\tx10180\tx10680\fi-520\li7660\fc0\cf0 double	fileTime;\
NXStream	*stream;\
double	firstTimeTag;\
double	lastTimeTag;\

\pard\tx7140\tx10180\tx10680\fs16\fi-4540\li7140\fc0\cf0 \

\fs28 filename 	The object's file name, if set.\

\fs16 \

\fs28 fileTime 	The current time in the file, in beats.\

\fs16 \

\fs28 stream 	The object's NXStream pointer.\

\fs16 \

\fs28 firstTimeTag 	The smallest timeTag value considered for performance.\

\fs16 \

\fs28 lastTimeTag 	The largest timeTag value considered for performance.\

\pard\tx7140\fs16\li2100\fc0\cf0 \
\
\

\fs28 METHOD TYPES\

\fs16 \

\pard\tx7140\tx10180\tx10680\fs28\fi-4540\li7140\fc0\cf0 Creating a FilePerformer	
\f1 - 
\f0 copyFromZone:\

\fs16 \

\fs28 Modifying the object	
\f1 - 
\f0 init\

\pard\tx10180\tx10680\f1\fi-520\li7660\fc0\cf0 - 
\f0 setFile: \

\f1 - 
\f0 setFirstTimeTag: \

\f1 - 
\f0 setLastTimeTag: \

\f1 - 
\f0 setStream:\

\pard\tx7140\tx10180\tx10680\fs16\fi-4540\li7140\fc0\cf0 \

\fs28 Querying the object	
\f1 - 
\f0 file\

\pard\tx10180\tx10680\fi-520\li7660\fc0\cf0 + fileExtension\
+ fileExtensions\

\f1 - 
\f0 firstTimeTag\

\f1 - 
\f0 lastTimeTag\

\f1 - 
\f0 stream\

\pard\tx7140\tx10180\tx10680\fs16\fi-4540\li7140\fc0\cf0 \

\fs28 Performing the object	
\f1 - 
\f0 activateSelf\

\pard\tx10180\tx10680\f1\fi-520\li7660\fc0\cf0 - 
\f0 deactivateSelf\

\f1 - 
\f0 finishFile\

\f1 - 
\f0 initializeFile\

\f1 - 
\f0 nextNote\

\f1 - 
\f0 perform\

\f1 - 
\f0 performNote:\

\pard\tx7140\tx10180\tx10680\fs16\fi-4540\li7140\fc0\cf0 \

\fs28 Archiving the object	
\f1 - 
\f0 read:\

\pard\tx10180\tx10680\f1\fi-520\li7660\fc0\cf0 - 
\f0 write:\

\pard\tx7140\fs16\li2100\fc0\cf0 \
\
\

\fs28 CLASS METHODS\

\fs16 \

\b \

\fs28 fileExtension\

\pard\b0\fi-1020\li3620\fc0\cf0 + (char *)
\b fileExtension\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Returns the file name extension that's recognized by the class.  The default implementation returns NULL.  A subclass may override this method to specify its own file extension.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 fileExtension\

\pard\b0\fi-1020\li3620\fc0\cf0 + (char **)
\b fileExtension\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Returns a pointer to a null-terminated array of file extensions that are recognized by the class. The default implementation returns a pointer to an array whose single element is given the value returned by the 
\b fileExtension
\b0  method.  A subclass may override this method to specify its own file extensions.\

\fs16 \

\pard\tx7140\li2100\fc0\cf0 \
\

\fs28 INSTANCE METHODS\

\fs16 \

\b \

\fs28 activateSelf\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b activateSelf\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Prepares the object for a performance by opening the associated file (if necessary) and invoking 
\b nextNote
\b0  until it returns an appropriate Note–one with a timeTag between 
\b firstTimeTag
\b0  and 
\b lastTimeTag
\b0 , inclusive.  If an appropriate Note isn't found, the object is deactivated.  You never invoke this method; its invoked by the 
\b activate
\b0  method inherited from Performer.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 copy\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b copy\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Same as
\b  copyFromZone: 
\b0 but uses default zone.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 copyFromZone:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b copyFromZone:
\b0 (NXZone *)
\i zone
\b\i0 \

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Creates and returns a FilePerformer that contains a copy of the object's filename.  The new object's stream pointer is set to NULL.  The new object is given an empty list of NoteSenders.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 deactivateSelf\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b deactivateSelf\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Invokes 
\b finishFile
\b0 , closes the object's file (if it was set through 
\b setFile:
\b0 ), and sets the  
\b stream
\b0  instance variable to NULL.  You never invoke this method; its invoked automatically when the object is deactivated.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 file\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0 (char *)
\b file\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Returns the object's file name, if any.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 finishFile\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b finishFile\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 A subclass can implement this method for post-performance file operations.  You shouldn't close the stream pointer as part of this method.  You never invoke this method; it's invoked automatically by 
\b deactivateSelf
\b0 .  The default implementation does nothing.  The return value is ignored.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 firstTimeTag\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0 (double)
\b firstTimeTag\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Returns the object's 
\b firstTimeTag
\b0  value.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 init\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b init\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Initializes the object by setting 
\b stream
\b0  and 
\b filename
\b0  to NULL.  You invoke this method when creating a new instance of FilePerformer.  A subclass implementation should send 
\b [super init]
\b0  before performing its own initialization.  The return value is ignored.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 initializeFile\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b initializeFile\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 A subclass can implement this method to perform file initialization.  If 
\b nil
\b0  is returned, the object is deactivated.  You never invoke this method; it's invoked automatically by 
\b activateSelf
\b0 .  The default implementation does nothing and returns the object.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 lastTimeTag\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0 (double)
\b lastTimeTag\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Returns the object's 
\b lastTimeTag
\b0  value.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 nextNote\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b nextNote\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 A subclass responsibility expected to fashion a Note or timeTag from the file.  It should return the Note or 
\b nil
\b0  if the next file entry is a timeTag.  In the latter case, 
\i fileTime
\i0  should be updated.  You never invoke this method; it's invoked automatically by the 
\b perform
\b0  method.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 perform\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b perform\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Gets the next Note from the object's file by invoking 
\b nextNote
\b0 , passes it as the argument to 
\b performNote:
\b0 , then sets the value of 
\i nextPerform
\i0 .  You never invoke this method; it's invoked by the object's Conductor.  The return value is ignored.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 performNote:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b performNote:
\b0\i aNote\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 A subclass responsibility expected to manipulate and send 
\i aNote
\i0 , which was presumably just read from a file.  You never invoke this method; it's invoked automatically by the 
\b perform
\b0  method.  The return type is ignored.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 read:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b read:
\b0 (NXTypedStream *)
\i stream\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 You never invoke this method directly; to read an archived FilePerformer, call the 
\b NXReadObject()
\b0  C function.  \

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setFile:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setFile:
\b0 (char *)
\i aName\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Associates the object with the file named 
\i aName
\i0 .  The file is opened when the object is activated and closed when its deactivated.  If the object is active, does nothing and returns 
\b nil
\b0 , otherwise returns the object.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setFirstTimeTag:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setFirstTimeTag:
\b0 (double)
\i aTimeTag\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Sets the smallest timeTag considered for performance to 
\i aTimeTag
\i0 .  Returns the object.  If the object is active, does nothing and returns 
\b nil
\b0 .\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setLastTimeTag:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setLastTimeTag:
\b0 (double)
\i aTimeTag\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Sets the largest timeTag considered for performance to 
\i aTimeTag
\i0 .  Returns the object.  If the object is active, does nothing and returns 
\b nil
\b0 .\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setStream:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setStream:
\b0 (NXStream *)
\i aStream\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Sets the object's NXStream pointer to 
\i aStream
\i0 .  The sender must open and close the stream himself.  If the object is active, this does nothing and returns 
\b nil
\b0 , otherwise returns the object.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 stream\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0 (NXStream *)
\b stream\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Returns the object's NXStream pointer, or NULL if it isn't set.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 write:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b write:
\b0 (NXTypedStream *)
\i stream\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 You never invoke this method directly; to archive a FilePerformer, call the 
\b NXWriteRootObject()
\b0  C function.  An archived FilePerformer maintains its 
\i filename
\i0 , 
\i firstTimeTag
\i0 , and 
\i lastTimeTag
\i0  instance variables (as well as the instance variables defined in Performer).\

\fs16 \

\fs28 \

\fs16 \

}
