{\rtf0\ansi{\fonttbl\f0\fnil Times-Roman;\f2\ftech Symbol;\f1\fmodern Ohlfs;}
\paperw16220
\paperh12580
\margl120
\margr0
{\colortbl;\red0\green0\blue0;}
\f0\b0\i0\ulnone\ql\fs24\fi0\li0\gray0\fc0\cf0\up0\dn0 Release 2.0  Copyright 
\f2 ã
\f0 1990 by NeXT Computer, Inc.  All Rights Reserved.\
\

\pard\tx3120\tx3620\tx4120\fs16\li2620\fc0\cf0 \

\fs28 \

\fs16 \

\fs28 \

\fs16 \

\pard\b\li1100\fc0\cf0 \
\
\
\

\fs36 ScorefilePerformer\

\fs16 \

\pard\tx7140\b0\fs28\li2100\fc0\cf0 INHERITS FROM	FilePerformer : Performer : Object\

\fs16 \

\fs28 DECLARED IN	musickit.h\

\fs16 \
\
\

\fs28 CLASS DESCRIPTION\

\fs16 \

\pard\tx3120\tx3620\tx4120\fs28\li2620\fc0\cf0 ScorefilePerformers are used to perform scorefiles.  When the object is activated, it reads the file's header and creates a NoteSender for each (unique) member of the 
\b part
\b0  statement.  A NoteSender is given the same name as the Part for which it was created.\

\fs16 \

\fs28 During a performance, a ScorefilePerformer reads successive Note and time statements from the file from which it creates Note objects that it sends through its NoteSenders.  When it reaches the end of the file, the ScorefilePerformer is deactivated.\

\fs16 \

\fs28 A ScorefilePerformer has its own info Note that it fashions from the 
\b info
\b0  statement in the file, and defines an  NXStream on which scorefile 
\b print
\b0  statements are printed.\

\fs16 \

\pard\tx7140\li2100\fc0\cf0 \
\

\fs28 INSTANCE VARIABLES\

\fs16 \

\pard\tx7140\tx10180\tx10680\i\fs28\fi-4540\li7140\fc0\cf0 Inherited from Object
\i0 	Class	isa;\

\fs16 \

\i\fs28 Inherited from Performer
\i0 	id	conductor;\

\pard\tx10180\tx10680\fi-520\li7660\fc0\cf0 MKPerformerStatus	status;\
int	performCount;\
double	timeShift;\
double	duration;\
double	time;\
double	nextPerform;\
id	noteSenders;\

\pard\tx7140\tx10180\tx10680\fs16\fi-4540\li7140\fc0\cf0 \

\i\fs28 Inherited from FilePerformer
\i0 	char	*filename;\

\pard\tx10180\tx10680\fi-520\li7660\fc0\cf0 double	fileTime;\
NXStream	*stream;\
double	firstTimeTag;\
double	lastTimeTag;\

\pard\tx7140\tx10180\tx10680\fs16\fi-4540\li7140\fc0\cf0 \

\i\fs28 Declared in ScorefilePerformer
\i0 	NXStream	*scorefilePrintStream;\

\pard\tx10180\tx10680\fi-520\li7660\fc0\cf0 id	info;\

\pard\tx7140\tx10180\tx10680\fs16\fi-4540\li7140\fc0\cf0 \

\fs28 scorefilePrintStream 	The stream used for the scorefile's 
\b print
\b0  statements.\

\fs16 \

\fs28 info 	Score info Note for the file.\

\pard\tx7140\fs16\li2100\fc0\cf0 \
\
\

\fs28 METHOD TYPES\

\fs16 \

\pard\tx7140\tx10180\tx10680\fs28\fi-4540\li7140\fc0\cf0 Creating a ScorefilePerformer	
\f2 - 
\f0 copy\

\pard\tx10180\tx10680\f2\fi-520\li7660\fc0\cf0 - 
\f0 free\

\pard\tx7140\tx10180\tx10680\fs16\fi-4540\li7140\fc0\cf0 \

\fs28 Querying the object	+ fileExtensions\

\pard\tx10180\tx10680\f2\fi-520\li7660\fc0\cf0 - 
\f0 info\

\f2 - 
\f0 infoForNoteSender: \

\f2 - 
\f0 scorefilePrintStream\

\pard\tx7140\tx10180\tx10680\fs16\fi-4540\li7140\fc0\cf0 \

\fs28 Modifying the object	
\f2 - 
\f0 setScorefilePrintStream:\

\fs16 \

\fs28 Performing the object	
\f2 - 
\f0 initializeFile\

\pard\tx10180\tx10680\f2\fi-520\li7660\fc0\cf0 - 
\f0 nextNote\

\f2 - 
\f0 performNote:\

\f2 - 
\f0 finishFile\

\f2 - 
\f0 init\

\pard\tx7140\fs16\li2100\fc0\cf0 \
\
\

\fs28 CLASS METHODS\

\fs16 \

\b \

\fs28 fileExtensions\

\pard\b0\fi-1020\li3620\fc0\cf0 + (char **)
\b fileExtensions\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc1\cf1 Returns a null-terminated array of the default file extensions recognized by ScorefilePerformer instances. This array consists of "score" and "playscore".   This method is used by the FilePerformer class.  The string is not copied. \

\fs16\fc0\cf0 \
\

\pard\tx7140\b\fs28\li2100\fc0\cf0 fileExtension\

\pard\b0\fi-1020\li3620\fc0\cf0 + (char *)
\b fileExtension\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc1\cf1 Obsolete method.  \

\fs16\fc0\cf0 \

\pard\tx7140\fs28\li2100\fc0\cf0 \
INSTANCE METHODS\

\fs16 \

\b \

\fs28 copy\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b copy\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Creates and returns a new ScorefilePerformer as a copy of the receiver.  The info receiver's info Note is also copied.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 finishFile\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b finishFile\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 You never invoke this method; it's invoked automatically by 
\b deactivateSelf
\b0 .  Performs post-performance cleanup of the scorefile parser.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 free\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b free\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Frees the receiver, its NoteSenders, and its info Note.  If the receiver is active, this does nothing and returns self. Otherwise, returns 
\b nil\

\fs16 \

\pard\tx7140\li2100\fc0\cf0 \

\fs28 info\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b info\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Returns the receiver's info Note, fashioned from an 
\b info
\b0  statement in the header of the scorefile.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 infoForNoteSender:\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b infoForNoteSender:
\b0\i aNoteSender\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Returns the info Note of the Part associated with the NoteSender 
\i aNoteSender
\i0 .  If 
\i aNoteSender
\i0  isn't a contained in the receiver, returns 
\b nil
\b0 .\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 init\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b init\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Initializes the receiver.  You invoke this method when creating a new intance.  A subclass implementation should send 
\b [super initi]
\b0  before performing its own initialization.  
\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 initializeFile\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b initializeFile\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 You never invoke this method; it's invoked automatically by 
\b selfActivate
\b0  (just before the file is performed).  It reads the scorefile header and creates NoteSender objects for each member of the file's 
\b part
\b0  statements.  It also creates info Notes from the file's Score and Part info statements and adds them to itself and its Parts.  If the file can't be read, or the scorefile parser encounters too many errors, the receiver is deactivated.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 nextNote\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b nextNote\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Reads the next Note or time statement from the body of the scorefile.  Note statements are turned into Note objects and returned.  If its a time statement that's read, fileTime is set to the statement's value and 
\b nil
\b0  is returned.\

\fs16 \

\fs28 You never invoke this method; it's invoked automatically by the 
\b perform
\b0  method.  If you override this method, you must send 
\b [super nextNote]
\b0 .\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 performNote:\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b performNote:
\b0\i aNote\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Sends 
\i aNote
\i0  to the appropriate NoteSender You never send 
\b performNote:
\b0  directly to a ScorefilePerformer; it's invoked by the 
\b perform
\b0  method.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setScorefilePrintStream:\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setScorefilePrintStream:
\b0 (NXStream *)
\i aStream\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Sets the receiver's scorefile 
\b print
\b0  statement stream to 
\i aStream.\

\fs16 \

\pard\tx7140\b\i0\li2100\fc0\cf0 \

\fs28 scorefilePrintStream\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0 (NXStream *)
\b scorefilePrintStream\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Returns the receiver's scorefile 
\b print
\b0  statement stream.\

\fs16 \

\fs28 \

\fs16 \

}
