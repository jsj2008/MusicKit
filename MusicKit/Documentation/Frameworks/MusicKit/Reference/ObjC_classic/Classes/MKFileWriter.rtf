{\rtf0\ansi{\fonttbl\f0\fnil Times-Roman;\f1\ftech Symbol;\f2\fmodern Courier;}
\paperw16220
\paperh12580
\margl120
\margr0
\f0\b0\i0\ulnone\ql\fs24\fi0\li0\gray0\fc0\cf0\up0\dn0 Release 2.0  Copyright 
\f1 ã
\f0 1990 by NeXT Computer, Inc.  All Rights Reserved.\
\

\pard\tx3120\tx3620\tx4120\fs16\li2620\fc0\cf0 \

\fs28 \

\fs16 \

\fs28 \

\fs16 \

\pard\b\li1100\fc0\cf0 \
\
\
\

\fs36 FileWriter\

\fs16 \

\pard\tx7140\b0\fs28\li2100\fc0\cf0 INHERITS FROM	Instrument : Object\

\fs16 \

\fs28 DECLARED IN	musickit.h\

\fs16 \
\
\

\fs28 CLASS DESCRIPTION\

\fs16 \

\pard\tx3120\tx3620\tx4120\fs28\li2620\fc0\cf0 A FileWriter is an Instrument that realizes Notes by writing them to a file on the disk.  An abstract class, FileWriter provides common functionality for the Music Kit subclasses such as ScorefileWriter (currently the only subclass of FileWriter).\

\fs16 \

\fs28 A FileWriter is associated with a file, either by the file's name or through an NXStream.  If you assoicate a FileWriter with a file name (through the 
\b setFile:
\b0  method) the object opens and closes the file for you:  The file is opened for writing when the object first receives the 
\b realizeNote:
\b0  message and closed after the performance.  A FileWriter remembers its file name between performances, but the file is overwritten each time it's opened.\

\fs16 \

\fs28 The 
\b setStream:
\b0  method sets the FileWriter's 
\b stream
\b0  instance variable to the given NXStream pointer.  Opening and closing the NXStream is the responsibility of the application.  After each performance, 
\b stream
\b0  is set to NULL.\

\fs16 \

\fs28 The subclass responsibility 
\b realizeNote:fromNoteReceiver:
\b0 , inherited from Instrument, is passed on to the FileWriter subclasses.  Two other methods, 
\b initializeFile
\b0  and 
\b finishFile
\b0 , can be redefined in a subclass, although neither must be.  
\b initializeFile
\b0  is invoked just before the first Note is written to the file and should perform any special initialization such as writing a file header.  
\b finishFile
\b0  is invoked after each performance and should perform any post-performance cleanup.  The values returned by 
\b initializeFile
\b0  and 
\b finishFile
\b0  are ignored.\

\fs16 \

\pard\tx7140\li2100\fc0\cf0 \
\

\fs28 INSTANCE VARIABLES\

\fs16 \

\pard\tx7140\tx10180\tx10680\i\fs28\fi-4540\li7140\fc0\cf0 Inherited from Object
\i0 	Class	isa;\

\fs16 \

\i\fs28 Inherited from Instrument
\i0 	id	noteReceivers;\

\fs16 \

\i\fs28 Declared in FileWriter
\i0 	MKTimeUnit	timeUnit;\

\pard\tx10180\tx10680\fi-520\li7660\fc0\cf0 char	*filename;\
NXStream	*stream;\
double	timeShift;\

\pard\tx7140\tx10180\tx10680\fs16\fi-4540\li7140\fc0\cf0 \

\fs28 timeUnit 	Time unit used to interpret a Note's timetag and duration.\

\fs16 \

\fs28 filename 	The object's file name (if the file was set through 
\b setFile:
\b0 ).\

\fs16 \

\fs28 stream 	The object's stream pointer.\

\fs16 \

\fs28 timeShift 	Optional timetag value shift.\

\pard\tx7140\fs16\li2100\fc0\cf0 \
\
\

\fs28 METHOD TYPES\

\fs16 \

\pard\tx7140\tx10180\tx10680\fs28\fi-4540\li7140\fc0\cf0 Creating a FileWriter	
\f1 - 
\f0 copyFromZone:\

\fs16 \

\fs28 Querying the class	+ fileExtension\

\fs16 \

\fs28 Modifying the object	
\f1 - 
\f0 init\

\pard\tx10180\tx10680\f1\fi-520\li7660\fc0\cf0 - 
\f0 setFile: \

\f1 - 
\f0 setStream:\

\pard\tx7140\tx10180\tx10680\fs16\fi-4540\li7140\fc0\cf0 \

\fs28 Querying the object	
\f1 - 
\f0 file\

\pard\tx10180\tx10680\f1\fi-520\li7660\fc0\cf0 -
\f0  fileExtension\

\f1 - 
\f0 stream\

\pard\tx7140\tx10180\tx10680\fs16\fi-4540\li7140\fc0\cf0 \

\fs28 Performing the object	
\f1 - 
\f0 afterPerformance\

\pard\tx10180\tx10680\f1\fi-520\li7660\fc0\cf0 - 
\f0 finishFile\

\f1 - 
\f0 firstNote: \

\f1 - 
\f0 initializeFile\

\pard\tx7140\tx10180\tx10680\fs16\fi-4540\li7140\fc0\cf0 \

\fs28 Accessing Time	
\f1 - 
\f0 setTimeShift: \

\pard\tx10180\tx10680\f1\fi-520\li7660\fc0\cf0 - 
\f0 setTimeUnit: \

\f1 - 
\f0 timeShift\

\f1 - 
\f0 timeUnit\

\pard\tx7140\tx10180\tx10680\fs16\fi-4540\li7140\fc0\cf0 \

\fs28 Archiving the object	
\f1 - 
\f0 read:\

\pard\tx10180\tx10680\f1\fi-520\li7660\fc0\cf0 - 
\f0 write:\

\pard\tx7140\fs16\li2100\fc0\cf0 \
\
\

\fs28 CLASS METHODS\

\fs16 \

\b \

\fs28 fileExtension\

\pard\b0\fi-1020\li3620\fc0\cf0 + (char *)
\b fileExtension\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Returns the file name extension that's used by the class.  The default implementation returns NULL.  A subclass may override this method to specify its own file extension.\

\fs16 \

\pard\tx7140\li2100\fc0\cf0 \
\

\fs28 INSTANCE METHODS\

\fs16 \

\b \

\fs28 afterPerformance\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b afterPerformance\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 You never invoke this method; it's invoked automatically just after a performance.  It closes the object's 
\i stream
\i0  (if the object opened it itself in the 
\b firstNote:
\b0  method) and sets it to NULL.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 copyFromZone:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b copyFromZone:
\b0 (NXZone *)
\i zone
\b\i0 \

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Creates and returns a copy of the object.  The new object's 
\i filename
\i0  and 
\i stream
\i0  instance variables are set to NULL.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 file\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0 (char *)
\b file\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Returns the object's file name, if any.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 fileExtension\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0 (char *)
\b fileExtension\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Returns the file extension used by the object.  The default implementation returns the value of the 
\b fileExtension
\b0  class method.  A subclass can implement this method to allow different default file extensions for different instances.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 finishFile\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b finishFile\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 This can be overridden by a subclass to perform post-performance activities.  However, the implementation shouldn't close the object's NXStream pointer.  You never send the 
\b finishFile
\b0  message directly to a FileWriter; it's invoked automatically after each performance.  The return value is ignored.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 firstNote:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b firstNote:
\b0\i aNote\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 You never invoke this method; it's invoked automatically just before the object writes its first Note.  It opens a 
stream to the object's 
\i filename
\i0  (if set) and then sends 
\b initializeFile
\b0  to the object.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 init\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b init\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Initializes the object by setting both 
\b stream
\b0  and 
\b filename
\b0  to NULL.  You must invoke this method when creating a new instance of FileWriter.  A subclass implementation should send [
\b super init
\b0 ] before performing its own initialization.  The return value is ignored.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 initializeFile\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b initializeFile\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 This can be overriden by a subclass to perform file initialization, such as writing a file header.  You never send the 
\b initializeFile
\b0  message directly to a FileWriter; it's invoked from the 
\b firstNote:
\b0  method.  The return value is ignored.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 read:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b read:
\b0 (NXTypedStream *)
\i stream\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 You never invoke this method directly; to read an archived FileWriter, call the 
\b NXReadObject()
\b0  C function.  \

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setFile:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setFile:
\b0 (char *)
\i aName\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Associates the object with the file 
\i aName
\i0 .  The file is opened when the first Note is realized (written to the file) and closed at the end of the performance.  If the object is already in a performance, this does nothing and returns 
\b nil
\b0 , otherwise returns the object.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setStream:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setStream:
\b0 (NXStream *)
\i aStream\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Points the object's 
\b stream
\b0  pointer to 
\i aStream
\i0 .  You must open and close the 
\i aStream
\i0  yourself.  If the object is already in a performance, this does nothing and returns 
\b nil
\b0 , otherwise returns the object.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setTimeShift:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b setTimeShift:
\b0 (double)
\i timeShift\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Sets a constant value to be added to Notes' times when they are written out to the file. It's up to the subclass to use this value.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 setTimeUnit:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 -
\f0  
\b setTimeUnit:
\b0 (MKTimeUnit)
\i aTimeUnit\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Sets the unit in which the object measures time.  
\i aTimeUnit
\i0  can be 
\b MK_second
\b0  for measurement in seconds,  
\b MK_beat
\b0  for beats or 
\b MK_timeTag
\b0  for the value in the Note's timeTag field.  The default is 
\b MK_second
\b0 .\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 stream\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0 (NXStream *)
\b stream\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Returns the object's 
\b stream
\b0  pointer, or NULL if it isn't set.  The pointer is set to NULL after each performance.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 timeShift\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0 (double)
\b timeShift\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Returns the object's performance time offset, in seconds.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 timeUnit\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0 (MKTimeUnit)
\b timeUnit\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Returns the unit in which the object measures time, either 
\b MK_second
\b0 , 
\b MK_timeTag
\b0  or 
\b MK_beat
\b0 .  The default is 
\b MK_second
\b0 .\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 write:\

\pard\f1\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b write:
\b0 (NXTypedStream *)
\i stream\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 You never invoke this method directly; to archive a FileWriter, call the 
\b NXWriteRootObject()
\b0  C function.  An archived FileWriter maintains its 
\i filename
\i0 , 
\i timeUnit
\i0 , and 
\i timeShift
\i0  instance variables (as well as the instance variables defined in Instrument).\

\fs16 \

\fs28 \

\fs16 \

}
