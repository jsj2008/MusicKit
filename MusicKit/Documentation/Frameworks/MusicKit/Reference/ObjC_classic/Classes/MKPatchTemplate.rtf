{\rtf0\ansi{\fonttbl\f0\fnil Times-Roman;\f2\ftech Symbol;\f1\fmodern Ohlfs;}
\paperw16220
\paperh15460
\margl120
\margr0
\f0\b0\i0\ulnone\ql\fs24\fi0\li0\gray0\fc0\cf0\up0\dn0 Release 2.0  Copyright 
\f2 ã
\f0 1990 by NeXT Computer, Inc.  All Rights Reserved.\
\

\pard\tx3120\tx3620\tx4120\fs16\li2620\fc0\cf0 \

\fs28 \

\fs16 \

\fs28 \

\fs16 \

\pard\b\li1100\fc0\cf0 \
\
\
\

\fs36 PatchTemplate\

\fs16 \

\pard\tx7140\b0\fs28\li2100\fc0\cf0 INHERITS FROM	Object\

\fs16 \

\fs28 DECLARED IN	musickit.h\

\fs16 \
\
\

\fs28 CLASS DESCRIPTION\

\fs16 \

\pard\tx3120\tx3620\tx4120\fs28\li2620\fc0\cf0 A PatchTemplate is a recipe for building a SynthPatch object.  It contains specifications for the UnitGenerator and SynthData objects that are needed and instructions for connecting these objects together.\

\fs16 \

\fs28 PatchTemplate's 
\b addUnitGenerator:ordered:
\b0  and 
\b addSynthData:length:
\b0  methods describe the objects that make up the SynthPatch.  It's important to keep in mind that these methods don't add actual objects to the PatchTemplate.  Instead, they specify the types of objects that will be created when the SynthPatch is constructed by the Orchestra.\

\fs16 \

\fs28 A PatchTemplate's UnitGenerators are specified by their class, given as the first argument to the 
\b addUnitGenerator:ordered:
\b0  method.  The argument should be a UnitGenerator leaf class, not a master class (leaf and master classes are explained in the UnitGenerator class description).\

\fs16 \

\fs28 The UnitGenerator is further described as being ordered or unordered, as the argument to the 
\b ordered:
\b0  keyword is YES or NO.  Ordered UnitGenerators are executed (on the DSP) in the order that they're added to the PatchTemplate; unordered UnitGenerators are executed in an undetermined order.  Usually, the order in which UnitGenerators are executed is significant; for example, if the output of UnitGenerator A is read by UnitGenerator B, then A must be executed before B if no delay is to be incurred.  As a convenience, the 
\b addUnitGenerator:
\b0  method is provided to add UnitGenerators that are automatically declared as ordered.  The advantage of unordered UnitGenerators is that their allocation is less constrained.\

\fs16 \

\fs28 SynthDatas are specified by a DSP memory segment and a length.  The memory segment is given as the first argument to 
\b addSynthData:length:
\b0 .  This can be either MK_xData, for x data memory, or MK_yData, for y data memory.  Which memory segment to specify depends on where the UnitGenerators that access it expects it to be.  The argument to the 
\b length:
\b0  keyword specifies the size of the SynthData, or how much DSP memory it represents, and is given as DSPDatum (24-bit) words.\

\fs16 \

\fs28 A typical use of a SynthData is to create a location called a 
\i patchpoint
\i0  that's written to by one UnitGenerator and then read by another.  A patchpoint, which is always 8 words long, is ordinarily the only way that two UnitGenerators can communicate.  The 
\b addPatchPoint:
\b0  method is provided as a convenient way to add SynthDatas that are used as patchpoints.  The argument to this method is either MK_xPatch or MK_yPatch, for x and y patchpoint memory, respectively.\

\fs16 \

\fs28 The object-adding methods each return a unique integer that identifies the added UnitGenerator or SynthData.\

\fs16 \

\fs28 Once you have added the requisite synthesis elements to a PatchTemplate, you can specify how they are connected.  This is done through invocations of the 
\b to:sel:arg:
\b0  method.  The first argument is an integer that identifies a UnitGenerator (such as returned by 
\b addUnitGenerator:
\b0 ), the last argument is an integer that identifies a SynthData (or patchpoint).  The argument to the 
\b sel:
\b0  keyword is a selector that's implemented by the UnitGenerator and that takes a SynthData object as its only argument.  Typical selectors are 
\b setInput:
\b0  (the UnitGenerator reads from the SynthData) and 
\b setOuput:
\b0  (it writes to the SynthData).  Notice that you can't connect a UnitGenerator directly to another UnitGenerator.\

\fs16 \

\fs28 See also:  UnitGenerator, SynthData, SynthPatch\

\fs16 \

\pard\tx7140\li2100\fc0\cf0 \
\

\fs28 INSTANCE VARIABLES\

\fs16 \

\pard\tx7140\tx10180\tx10680\i\fs28\fi-4540\li7140\fc0\cf0 Inherited from Object
\i0 	Class	isa;\

\fs16 \

\i\fs28 Declared in PatchTemplate
\i0 	(none)\

\pard\tx7140\fs16\li2100\fc0\cf0 \
\
\

\fs28 METHOD TYPES\

\fs16 \

\pard\tx7140\tx10180\tx10680\fs28\fi-4540\li7140\fc0\cf0 Creating a PatchTemplate object	
\pard\tx10180\tx10680\f2\fi-520\li7660\fc0\cf0 - 
\f0 copy \

\pard\tx7140\tx10180\tx10680\fs16\fi-4540\li7140\fc0\cf0 \

\fs28 Adding and connecting synthesis elements\

\f2\fi0 - 
\f0 addPatchpoint:\

\pard\tx10180\tx10680\f2\fi-520\li7660\fc0\cf0 - 
\f0 addSynthData:length:\

\f2 - 
\f0 addUnitGenerator:\

\f2 - 
\f0 addUnitGenerator:ordered:\

\f2 - 
\f0 to:sel:arg:\

\pard\tx7140\tx10180\tx10680\fs16\fi-4540\li7140\fc0\cf0 \

\fs28 Querying the object	
\f2 - 
\f0 synthElementCount\

\pard\tx7140\fs16\li2100\fc0\cf0 \
\
\

\fs28 INSTANCE METHODS\

\fs16 \

\b \

\fs28 addPatchpoint:\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0 (unsigned)
\b addPatchpoint:
\b0 (MKOrchMemSegment)
\i segment\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Adds a patchpoint (SynthData) specification to the receiver.  
\i segment
\i0  is the DSP memory segment from which the patchpoint is allocated.  It can be either MK_xPatch or MK_yPatch.  Returns an integer that identifies the patchpoint specification.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 addSynthData:length:\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0 (unsigned)
\b addSynthData:
\b0 (MKOrchMemSegment)
\i segment 
\b\i0 length:
\b0 (unsigned)
\i len\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Adds a SynthData specification to the receiver.  The SynthData has a length of 
\i len
\i0  DSPDatum words and is allocated from the DSP segment 
\i segment
\i0 , which should be either MK_xData or MK_yData.  Returns an integer that identifies the SynthData specification.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 addUnitGenerator:\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0 (unsigned)
\b addUnitGenerator:
\b0\i aUGClass\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Adds an ordered UnitGenerator specification to the receiver.  Implemented as 
\b [self addUnitGenerator:
\b0\i aUGClass 
\b\i0 ordered:YES].
\b0  Returns an integer that identifies the UnitGenerator specification.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 addUnitGenerator:ordered:\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0 (unsigned)
\b addUnitGenerator:
\b0\i aUGClass 
\b\i0 ordered:
\b0 (BOOL)
\i isOrdered\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Adds a UnitGenerator specification to the receiver.  The UnitGenerator is an instance of 
\i aUGClass
\i0 , a UnitGenerator leaf class.  If 
\i isOrdered
\i0  is YES, then the order in which the specification is added (in relation to the receiver's other UnitGenerators) is the order in which the UnitGenerator, once created, is executed on the DSP.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 copy\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b copy\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Creates and returns a PatchTemplate as a copy of the receiver.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 init\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b init\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Initializes a new PatchTemplate and returns 
\b self
\b0 .\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 synthElementCount\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0 (unsigned)
\b synthElementCount\

\fs16 \

\pard\tx3120\tx3620\tx4120\b0\fs28\li2620\fc0\cf0 Returns the number of UnitGenerator and SynthData specifications (including patchpoints) that have been added to the receiver.\

\fs16 \

\pard\tx7140\b\li2100\fc0\cf0 \

\fs28 to:sel:arg:\

\pard\f2\b0\fi-1020\li3620\fc0\cf0 - 
\f0\b to:
\b0 (unsigned)
\i anObjInt\

\b\i0\fi0 sel:
\b0 (SEL)
\i aSelector
\i0  \

\b arg:
\b0 (unsigned)
\i anArgInt\

\fs16 \

\pard\tx3120\tx3620\tx4120\i0\fs28\li2620\fc0\cf0 Specifies a connection between the UnitGenerator identified by 
\i objInt1
\i0  and the SynthData identified by 
\i objInt2
\i0 .  The means of the connection are specified in the method 
\i aSelector
\i0 , to which the UnitGenerator must respond.  
\i objInt1
\i0  and 
\i objInt2
\i0  are identifying integers returned by PatchTemplate's add methods.  If either of these arguments are invalid identifiers, the method returns 
\b nil
\b0 , otherwise it returns the receiver.\

\fs16 \

\fs28 \

\fs16 \

}
