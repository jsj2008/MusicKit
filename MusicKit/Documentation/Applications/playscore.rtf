{\rtf0\ansi{\fonttbl\f4\fswiss Helvetica;\f1\ftech Symbol;\f3\fmodern Ohlfs;}
\paperw11880
\paperh7800
\margl120
\margr120
{\colortbl;\red0\green0\blue0;}
\pard\tx520\tx1060\tx1600\tx2120\tx2660\tx3200\tx3720\tx4260\tx4800\tx5320\f4\b0\i0\ulnone\fs24\fc0\cf0 Portions Copyright 
\f1 Ó
\f4  1992, NeXT Computer, Inc.\
Portions Copyright 
\f1 Ó
\f4  1994, Stanford University\
\

\b\fs36 playscore
\b0  	Ð€	
\fc1\cf1 scorefile playing utility\

\fs24\fc0\cf0 \

\fs36 SYNOPSIS
\fs24 \

\fs36\fc1\cf1 playscore [±fqdpva] [±rtcwsn <arg>] scorefile \

\fs24\fc0\cf0 \

\fs36\fc1\cf1 DESCRIPTION
\fs24\fc0\cf0 \

\fs32 Plays the specified scorefile on the DSP and MIDI.  If the scorefile isn't found in the current directory and it isn't given as a full path name, the following directories are searched:\

\fs24 \
		
\b\fs32\fc1\cf1 (1)
\b0\fs24\fc0\cf0 		
\b\fs32\fc1\cf1 ~/Library/Music/Scores\
		(2)		/LocalLibrary/Music/Scores \
		(3) 		/NextLibrary/Music/Scores\
\
ScorePlayer
\b0  is an application very similar to 
\b playscore
\b0 .  However, currently (as of October 94), 
\b playscore
\b0  is the only one of the two that can handle multiple simultaneous DSPs.\

\b\fs28 \

\b0\fs24\fc0\cf0 \

\fs36\fc1\cf1 OPTIONS
\fs24\fc0\cf0 \

\b\fs32\fc1\cf1 ±a			
\fc0\cf0 A
\b0 ll DSPs; use all available DSP cards (Intel only.)  \
			This flag should not be combined with 
\b -c
\b0 ,
\b  -w
\b0  or 
\b -s
\b0 .  Instead, the serial \
			port device should be set with the Music Kit Preferences panel.\

\fs24 \

\b\fs32\fc1\cf1 ±c <soundfile>
\b0\fs24\fc0\cf0 \

\b\fs32\fc1\cf1 			C
\b0 ommands written; the DSP commands are written to the named\
			soundfile.  The '.snd' extension is automatically appended to the file\
			name.  This mode is largely obsolete, as DSP commands files are\
			not supported on Intel hardware.\

\fs24\fc0\cf0 \

\b\fs32\fc1\cf1 ±d
\b0\fc0\cf0 			
\b\fc1\cf1 D
\b0 ebug; allocate space (on the DSP) for the DSP debugger.\

\fs24\fc0\cf0 \

\b\fs32\fc1\cf1 ±f
\b0\fc0\cf0 			
\b F
\b0 ast;  Normally, playscore reads the entire scorefile before playing;\
			With the f option, notes are played as soon as they are read from the\
			file.  This reduces start up time, but can also cause playback to be\
			less reliable for very dense scores.\

\fs24 \

\b\fs32\fc1\cf1 ±n <dsp number>
\b0\fs24\fc0\cf0 \

\fs32 			
\b N
\b0 umber of DSP; specifies that the DSP<n> should be used as the \
			default DSP, instead of DSP0. This flag should not be combined with \
			
\b ±a
\b0 .\

\b\fc1\cf1 \
±p			P
\b0 ersistent; waits for DSP if it's in use.\

\fs24\fc0\cf0 \

\b\fs32\fc1\cf1 ±q			Q
\b0 uiet; error and warning messages are suppressed.\

\fs24\fc0\cf0 \

\b\fs32\fc1\cf1 ±r <repeatCount>\

\b0 			
\b R
\b0 epeat; play the file <repeatCount> times.\

\fs24\fc0\cf0 \

\b\fs32\fc1\cf1 ±s <deviceName>\
			S
\b0 erial sound;  sound is sent out the DSP serial port to the\
			specified device.  This flag is largely obsolete, thanks to the \
			Music Kit Preferences panel.  Devices supported are:\
	\
				
\i SSAD64x
\i0  			(Singular Solutions),\
				
\i StealthDAI2400	
\i0 (Other Stealth devices may work)\
				
\i ArielProPort		
\i0 (Ariel DAT Port should also work)
\i \
				GENERIC			
\i0 (DSPSerialPortDevice protocol)\
\
			In the case of Intel DSP cards that do not have NeXT±compatible \
			DSP ports, the serial port device is automatically selected.\
			An example of such a card is the TurtleBeach Multisound.\

\fs24\fc0\cf0 \

\b\fs32\fc1\cf1 ±t <arg>
\b0\fc0\cf0 	
\b T
\b0 race; set Music Kit trace bit to <arg>.  Bits may be added together.\

\fc1\cf1 			The meanings of the bits are as follows: \

\fs28\fc0\cf0 \
			1ÐOrchestra allocation information; \
			2ÐApp params printed when first encountered; \
			4ÐMusic Kit DSP messages; \
			8ÐMIDI in/out/time warnings; \
			16ÐSynthInstrument preemptions msgs; \
			32ÐSynthInstrument messages; \
			64ÐSynthPatch library messages; \
			128ÐUnitGenerator library messages; \
			256ÐConductor time messages; \
			512ÐPrint arrays loaded to DSP.\

\fs24 \

\b\fs32\fc1\cf1 ±v			V
\b0 erbose; print DSP library error and status messages.\

\fs24\fc0\cf0 \

\b\fs32\fc1\cf1 ±w <soundfile>
\b0\fs24\fc0\cf0 \

\fs32\fc1\cf1 			
\b W
\b0 rite as samples; the DSP sample output is written to the named\
			soundfile.  The '.snd' extension is automatically appended to the file\
			name.\
\

\fs36 \
INSTRUMENTS\

\fs32 The playscore program has access to the following instruments: \

\fs24\fc0\cf0 \

\b\fs32 Wave1i	
\b0 Periodic wave table synthesis.\
\

\b Wave1vi	
\b0 Periodic wave table synthesis with vibrato.\
\

\b DBWave1vi\

\b0 			Periodic wave table synthesis with vibrato and access to the timbre \
			data base created by Michael Mcnabb.\
\

\b DBWave2vi
\b0 \
			Like 
\b DBWave1vi
\b0 , but with interpolation between two wave tables.\
\

\b Pluck
\b0  		Plucked string synthesis, based on Karplus/Strong algorithm with\
			Jaffe/Smith extensions.\
 \

\b Fm1i
\b0 		Frequency modulation synthesis with arbitrary waveform.\
\

\b Fm1vi		
\b0 Frequency modulation synthesis with arbitrary waveform and vibrato.\
\

\b DBFm1vi	
\b0 Frequency modulation with vibrato and access to the timbre data \
			base.\
\

\b Fm2pvi	
\b0 Frequency modulation with two parallel modulators and vibrato.\
\

\b Fm2cvi	
\b0 Frequency modulation synthesis with two cascaded modulators and \
			vibrato.\
\

\b Fm2pnvi	
\b0 Like Fm2pvi, but with an additional noise modulator.\
\

\b Fm2cnvi	
\b0 Like Fm2cvi, but with an additional noise modulator.\
\

\b Wave1, Wave1v, DBWave1v, Fm1v, Fm1\

\b0 			These are like the corresponding patches described above, but they \
			use a non-interpolating oscillator.  This allows more simultaneous\
			voices, but at lower sound-quality.\

\b Simp
\b0 		The simplest instrument:  a  single, non-interpolating sine wave \
			oscillator. \
 \

\b Waveshape
\b0 	\
			Waveshaping (non-linear distortion) synthesis.\
\

\b midi0\

\b0 			MIDI output on the default MIDI device, MIDI0, which is serial port A 			on NeXT hardware. On Intel hardware, MIDI0 is set via the Music Kit \
			Preferences panel.  "midi" is a synonym for "midi0"\
\

\b midi1		
\b0 MIDI output on the MIDI1 device, which is serial port B on NeXT \
			hardware.\

\fs24 \

\fs36 \
THE SCOREFILE INFO STATEMENT\

\b\fs32 playscore
\b0  decides which instrument to use, as well as other configuration information, based on the info statements in the scorefile.  The following scorefile info statement parameters are recognized:\

\fs24  \

\b\fs32\fc1\cf1 headroom
\b0\fs24\fc0\cf0 	
\fs32\fc1\cf1 Headroom is a fractional number in the range -1 < = f <= 1 that\
determines how DSP resources are allocated.  As the headroom is\
decreased, the DSP becomes "bigger" but at the cost of decreased\
reliability (generally heard as degraded rhythmic integrity).\
Increasing the headroom makes synthesis more reliable, but you may\
decrease the number of simultaneous voices (the DSP becomes\
"smaller").  The default is 0.\

\fs24\fc0\cf0 \

\b\fs32\fc1\cf1 samplingRate     \

\b0 This should be 44100 or 22050. The default is 22050.\

\fs24\fc0\cf0 \

\b\fs32\fc1\cf1 alternativeSamplingRate     \

\b0 If present, this is used as the sampling rate for Turtle Beach cards,\
which have slower DSP memory. The alternativeSamplingRate is a simple\
way to provide a lower sampling rate for use with such cards. \
\

\b tempo\

\b0 The tempo is in beats per minute; the default is 60.0.\

\fs24\fc0\cf0 \

\b\fs32\fc1\cf1 midiOffset
\b0\fs24\fc0\cf0 \

\fs32\fc1\cf1 This is a time offset in seconds for notes that are sent to an external MIDI synthesizer.  It's used to adjust synchronization between MIDI and the DSP.  Its value can be negative (shift MIDI notes ahead with respect to DSP synthesis) or positive (shift MIDI notes behind with respect to the DSP).\

\fs24\fc0\cf0 \

\fs36 \
THE PART INFO STATEMENT\

\fs32\fc1\cf1 Part info statements provide information that's applied to a particular part in the scorefile. The following part info statement parameters are recognized:\

\fs24\fc0\cf0  \

\b\fs32 synthPatch
\b0\fs24        \

\fs32\fc1\cf1 This sets the instrument for the part; you must quote the instrument\
name, as taken from the instrument list given above.  For example,\

\i synthPatch:"Pluck"\

\i0\fs24\fc0\cf0  \

\b\fs32\fc1\cf1 synthPatchCount  \

\b0 This is the number of preallocated instruments (simultaneous voices);  if it's omitted, the instruments are allocated as they're needed.  The SynthPatch count is significant for DSP instruments only.\

\fs24\fc0\cf0  \

\b\fs32\fc1\cf1 midiChan  \

\b0 This is the MIDI channel on which the part's notes are sent.  The value must be an integer between 1 and 16, inclusive.  The MIDI channel is significant for MIDI instruments only.\
 \

\b orchestraIndex  \

\b0 If you specify the 
\b ±a
\b0  switch, the orchestraIndex part info parameter is used\
to determine on which DSP to play the part. The value of this parameter is\
0 for DSP0, 1 for DSP1, etc.  You set the value of these DSP variables from\
the Music Kit Preferences panel.\

\fs24\fc0\cf0 \
\

\fs36 FILES
\fs24 \

\fs32 Example scorefiles are found in 
\b /LocalLibrary/Music/Scores
\b0 .  You may copy these files to your directory and modify them with a Music Kit programor a text editor.  There are two types of files.  Files of the form
\i  Examp* 
\i0 or 
\i *Examp*
\i0  are \
tutorial examples which illustrate the use of the software instruments.\
Other files, such as 
\i Emma.playscore
\i0  and 
\i Gamelan.playscore
\i0  are short demo pieces.\

\fs24 \

\fs36\fc1\cf1 SEE ALSO\

\fs32 See the Music Kit documentation on 
\b /LocalLibrary/Documentation/MusicKit
\b0  for  general information about scorefiles, DSP software instruments, and MIDI.  The ScorePlayer application covers much of the same functionality as playscore, and additionally will synchronize to MIDI time code.\

\fs24\fc0\cf0 \
\

\fs36\fc1\cf1 DIAGNOSTICS\

\fs32 Exit status is 0 on success, 1 if there is a problem opening the DSP or parsing the file.\

\fs36 \
BUGS\

\fs32 Large chords (exactly simultaneous notes) may cause timing problems.  It's better to separate them by some small amount of time.  This is particularly true when doing periodic wave table synthesis.  Frequent changes of wave tables can cause the music to become uneven.  Very fast musical passages may also be problematic.  In some cases, putting a one-beat rest at the start of the scorefile may be helpful.  Playback may become unreliable if your computer is heavily loaded with other tasks.  For scores that are too dense or complex to play in real time, try using the 
\b ±c
\b0  or 
\b ±w
\b0  flag and then play the resulting soundfile.  
\b midiOffset
\b0  shouldn't be necessary, but it is, for some reason, on NeXT hardware.\

\fs24\fc0\cf0 \
\
\

}
