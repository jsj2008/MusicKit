%!PS-Adobe-2.0
%%Title: WaveShaping.math.ma (Local)  -  /u/ejgraves/324/ws-0.1c
%%Creator: Mathematica
%%CreationDate: Fri May 22 23:13:19 1992
%%For: ejgraves
%%DocumentFonts: (atend)
%%Pages: (atend) 1
%%BoundingBox: (atend)
%%DocumentPaperSizes: Letter
%%Orientation: Portrait
%%EndComments

%%BeginDocument: /usr/lib/NextStep/printPackage.ps
%!PS-Adobe-2.0
%%Title: Printing Package
%%EndComments
%Version: 2.0
%Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/setcmykcolor{
	1.0 exch sub dup dup 6 -1 roll
	sub dup 0 lt{pop 0}if 5 1 roll
	4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll
	exch sub dup 0 lt{pop 0}if setrgbcolor
}__NXbdef
/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def   
/_NXfstr 128 string dup 0 (_NX) putinterval def   
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {//findfont exec}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {//findfont exec dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXProcArray 5 array __NXdef
/_NXChannels 0 __NXdef
/_NXTotalBytes 0 __NXdef
/_NXDoImageOp{
	1 index{dup}{1}ifelse /_NXChannels exch store
	_NXChannels 2 add 2 roll _NXProcArray 0 _NXChannels getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /_NXTotalBytes exch store pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{	0 1 _NXChannels 1 sub{
			_NXProcArray exch get exec
			length _NXTotalBytes exch sub /_NXTotalBytes exch store}for
		_NXTotalBytes 0 le{exit}if
	}loop /_NXProcArray 5 array def
}__NXbdef
/colorimage{_NXDoImageOp}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
%%EndDocument

gsave
-20 9972 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
%%PaperSize: Letter
%%Feature: *ManualFeed False
%%Feature: *Resolution 400
%%EndSetup

%%Page: 1 1
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 9972 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
[1 0 0 -1 -19 10581] concat
19 9789 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 76 460 29 rectclip
gsave
/Times-Italic findfont 10 scalefont [1 0 0 -1 0 0] makefont
297
exch
defineuserobject
297 execuserobject setfont
0 setgray
61 76 1.677618e+07 29 rectclip
61 76 translate
1 1 1 setrgbcolor
0 0 459 29 rectfill
/Times-Bold findfont 24 scalefont [1 0 0 -1 0 0] makefont
24
exch
defineuserobject
24 execuserobject setfont
0 setgray
38 23 moveto (WaveShaping Synthesis on the NeXT) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 117 460 34 rectclip
gsave
24 execuserobject setfont
0 setgray
61 117 1.677618e+07 34 rectclip
61 117 translate
1 1 1 setrgbcolor
0 0 459 34 rectfill
/Times-Italic findfont 14 scalefont [1 0 0 -1 0 0] makefont
298
exch
defineuserobject
298 execuserobject setfont
0 setgray
79 13 moveto (DSP56001 Unit Generator and MusicKit interface by) show
89 30 moveto (Eric J. Graves \(ejgraves@phoenix.princeton.edu\)) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 161 460 42 rectclip
gsave
298 execuserobject setfont
0 setgray
61 161 1.677618e+07 42 rectclip
61 161 translate
1 1 1 setrgbcolor
0 0 459 42 rectfill
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
299
exch
defineuserobject
299 execuserobject setfont
0 setgray
2 11 moveto (First, we should examine the theory of Waveshaping synthesis \(as described by Arfib) show
2 25 moveto (and LeBrun\). First, let us examine the output from a 1st order Chebychev) show
2 39 moveto (polynomial--that is, the graph that it will produce:) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
299 execuserobject setfont
0 setgray
77 211 1.677616e+07 12 rectclip
77 211 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) In[1]:=) show
grestore
gsave
96 225 425 13 rectclip
gsave
297 execuserobject setfont
0 setgray
96 225 1.677615e+07 13 rectclip
96 225 translate
1 1 1 setrgbcolor
0 0 425 13 rectfill
/Courier-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
300
exch
defineuserobject
300 execuserobject setfont
0 setgray
2 10 moveto (cheby1[x_] := x) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
300 execuserobject setfont
0 setgray
77 246 1.677616e+07 12 rectclip
77 246 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) In[2]:=) show
grestore
gsave
96 260 425 13 rectclip
gsave
297 execuserobject setfont
0 setgray
96 260 1.677614e+07 13 rectclip
96 260 translate
1 1 1 setrgbcolor
0 0 425 13 rectfill
300 execuserobject setfont
0 setgray
2 10 moveto (Plot[cheby1[x],{x,-1,1}]) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
95 281 282 174 rectclip
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		95.000000 def
/Mbottom	455.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
%!
%%Creator: Mathematica
%%AspectRatio: 0.61803 
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0.309017 0.294302 [
[(-1)] 0.02381 0.30902 0 2 Msboxa
[(-0.5)] 0.2619 0.30902 0 2 Msboxa
[(0.5)] 0.7381 0.30902 0 2 Msboxa
[(1)] 0.97619 0.30902 0 2 Msboxa
[(-1)] 0.4875 0.01472 1 0 Msboxa
[(-0.5)] 0.4875 0.16187 1 0 Msboxa
[(0.5)] 0.4875 0.45617 1 0 Msboxa
[(1)] 0.4875 0.60332 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.30902 moveto
0.02381 0.31527 lineto
stroke
grestore
[(-1)] 0.02381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.30902 moveto
0.2619 0.31527 lineto
stroke
grestore
[(-0.5)] 0.2619 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.30902 moveto
0.7381 0.31527 lineto
stroke
grestore
[(0.5)] 0.7381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.30902 moveto
0.97619 0.31527 lineto
stroke
grestore
[(1)] 0.97619 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.30902 moveto
0.07143 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.30902 moveto
0.11905 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.30902 moveto
0.16667 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.30902 moveto
0.21429 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.30902 moveto
0.30952 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.30902 moveto
0.35714 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.30902 moveto
0.40476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.30902 moveto
0.45238 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.30902 moveto
0.54762 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.30902 moveto
0.59524 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.30902 moveto
0.64286 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.30902 moveto
0.69048 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.30902 moveto
0.78571 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.30902 moveto
0.83333 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.30902 moveto
0.88095 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.30902 moveto
0.92857 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0.01472 moveto
0.50625 0.01472 lineto
stroke
grestore
[(-1)] 0.4875 0.01472 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.16187 moveto
0.50625 0.16187 lineto
stroke
grestore
[(-0.5)] 0.4875 0.16187 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.45617 moveto
0.50625 0.45617 lineto
stroke
grestore
[(0.5)] 0.4875 0.45617 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.60332 moveto
0.50625 0.60332 lineto
stroke
grestore
[(1)] 0.4875 0.60332 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.04415 moveto
0.50375 0.04415 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.07358 moveto
0.50375 0.07358 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.10301 moveto
0.50375 0.10301 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13244 moveto
0.50375 0.13244 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.1913 moveto
0.50375 0.1913 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.22073 moveto
0.50375 0.22073 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.25016 moveto
0.50375 0.25016 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27959 moveto
0.50375 0.27959 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33845 moveto
0.50375 0.33845 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.36788 moveto
0.50375 0.36788 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.39731 moveto
0.50375 0.39731 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.42674 moveto
0.50375 0.42674 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.4856 moveto
0.50375 0.4856 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.51503 moveto
0.50375 0.51503 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.54446 moveto
0.50375 0.54446 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.57389 moveto
0.50375 0.57389 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.06349 0.03924 lineto
0.10317 0.06377 lineto
0.14286 0.08829 lineto
0.18254 0.11282 lineto
0.22222 0.13734 lineto
0.2619 0.16187 lineto
0.30159 0.18639 lineto
0.34127 0.21092 lineto
0.38095 0.23544 lineto
0.42063 0.25997 lineto
0.46032 0.28449 lineto
0.5 0.30902 lineto
0.53968 0.33354 lineto
0.57937 0.35807 lineto
0.61905 0.38259 lineto
0.65873 0.40712 lineto
0.69841 0.43164 lineto
0.7381 0.45617 lineto
0.77778 0.48069 lineto
0.81746 0.50522 lineto
0.85714 0.52974 lineto
0.89683 0.55427 lineto
0.93651 0.57879 lineto
0.97619 0.60332 lineto
stroke
grestore
grestore
% End of Graphics
MathPictureEnd%%PSTrailer
end

%%EPS Trailer
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
300 execuserobject setfont
0 setgray
77 463 1.677616e+07 12 rectclip
77 463 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) Out[2]=) show
grestore
gsave
96 477 425 12 rectclip
/Courier findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
0 0 0 setrgbcolor
96 485 moveto
(-Graphics-) show
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 497 460 28 rectclip
gsave
297 execuserobject setfont
0 setgray
61 497 1.677618e+07 28 rectclip
61 497 translate
1 1 1 setrgbcolor
0 0 459 28 rectfill
299 execuserobject setfont
0 setgray
2 11 moveto (Note that this will produce exactly the same value at the output as is input to it; this is) show
2 25 moveto (the default wavetable that the Waveshaping SynthPatch uses.) show
grestore
grestore
grestore
gsave
54 29 467 14 rectclip
gsave
299 execuserobject setfont
0 setgray
54 29 467 14 rectclip
54 29 translate
299 execuserobject setfont
0 setgray
2 11 moveto (WaveShaping.math.ma) show
grestore
grestore
0.5 setlinewidth
521 43 moveto
54 43 lineto
stroke
1 setlinewidth
1 setlinewidth 0 setgray
gsave
54 29 467 14 rectclip
gsave
299 execuserobject setfont
0 setgray
54 29 467 14 rectclip
54 29 translate
299 execuserobject setfont
0 setgray
459 11 moveto (1) show
grestore
grestore
0.5 setlinewidth
521 43 moveto
54 43 lineto
stroke
1 setlinewidth
1 setlinewidth 0 setgray
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Courier-Bold
%%+ Courier
%%+ Times-Italic
%%+ Times-Bold
%%+ Times-Roman

%%Page: 2 2
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 9972 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
[1 0 0 -1 -19 10581] concat
19 9789 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
299
exch
defineuserobject
299 execuserobject setfont
0 setgray
77 76 1.677616e+07 12 rectclip
77 76 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
/Times-Italic findfont 10 scalefont [1 0 0 -1 0 0] makefont
297
exch
defineuserobject
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) In[3]:=) show
grestore
gsave
96 90 425 13 rectclip
gsave
297 execuserobject setfont
0 setgray
96 90 1.677614e+07 13 rectclip
96 90 translate
1 1 1 setrgbcolor
0 0 425 13 rectfill
/Courier-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
300
exch
defineuserobject
300 execuserobject setfont
0 setgray
2 10 moveto (Plot[Cos[time],{time,0,2*Pi},PlotRange->{-1,1}]) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
95 111 282 174 rectclip
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		95.000000 def
/Mbottom	285.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
%!
%%Creator: Mathematica
%%AspectRatio: 0.61803 
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.151576 0.309017 0.309017 [
[(1)] 0.17539 0.30902 0 2 Msboxa
[(2)] 0.32696 0.30902 0 2 Msboxa
[(3)] 0.47854 0.30902 0 2 Msboxa
[(4)] 0.63011 0.30902 0 2 Msboxa
[(5)] 0.78169 0.30902 0 2 Msboxa
[(6)] 0.93327 0.30902 0 2 Msboxa
[(-1)] 0.01131 0 1 0 Msboxa
[(-0.75)] 0.01131 0.07725 1 0 Msboxa
[(-0.5)] 0.01131 0.15451 1 0 Msboxa
[(-0.25)] 0.01131 0.23176 1 0 Msboxa
[(0.25)] 0.01131 0.38627 1 0 Msboxa
[(0.5)] 0.01131 0.46353 1 0 Msboxa
[(0.75)] 0.01131 0.54078 1 0 Msboxa
[(1)] 0.01131 0.61803 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.17539 0.30902 moveto
0.17539 0.31527 lineto
stroke
grestore
[(1)] 0.17539 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.32696 0.30902 moveto
0.32696 0.31527 lineto
stroke
grestore
[(2)] 0.32696 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.47854 0.30902 moveto
0.47854 0.31527 lineto
stroke
grestore
[(3)] 0.47854 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.63011 0.30902 moveto
0.63011 0.31527 lineto
stroke
grestore
[(4)] 0.63011 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.78169 0.30902 moveto
0.78169 0.31527 lineto
stroke
grestore
[(5)] 0.78169 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.93327 0.30902 moveto
0.93327 0.31527 lineto
stroke
grestore
[(6)] 0.93327 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.05412 0.30902 moveto
0.05412 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08444 0.30902 moveto
0.08444 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11476 0.30902 moveto
0.11476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14507 0.30902 moveto
0.14507 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2057 0.30902 moveto
0.2057 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23602 0.30902 moveto
0.23602 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26633 0.30902 moveto
0.26633 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29665 0.30902 moveto
0.29665 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35728 0.30902 moveto
0.35728 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38759 0.30902 moveto
0.38759 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41791 0.30902 moveto
0.41791 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44822 0.30902 moveto
0.44822 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50885 0.30902 moveto
0.50885 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53917 0.30902 moveto
0.53917 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56948 0.30902 moveto
0.56948 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5998 0.30902 moveto
0.5998 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.66043 0.30902 moveto
0.66043 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69074 0.30902 moveto
0.69074 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72106 0.30902 moveto
0.72106 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75137 0.30902 moveto
0.75137 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81201 0.30902 moveto
0.81201 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84232 0.30902 moveto
0.84232 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87264 0.30902 moveto
0.87264 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90295 0.30902 moveto
0.90295 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.96358 0.30902 moveto
0.96358 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9939 0.30902 moveto
0.9939 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.03006 0 lineto
stroke
grestore
[(-1)] 0.01131 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.07725 moveto
0.03006 0.07725 lineto
stroke
grestore
[(-0.75)] 0.01131 0.07725 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.15451 moveto
0.03006 0.15451 lineto
stroke
grestore
[(-0.5)] 0.01131 0.15451 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.23176 moveto
0.03006 0.23176 lineto
stroke
grestore
[(-0.25)] 0.01131 0.23176 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.38627 moveto
0.03006 0.38627 lineto
stroke
grestore
[(0.25)] 0.01131 0.38627 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.46353 moveto
0.03006 0.46353 lineto
stroke
grestore
[(0.5)] 0.01131 0.46353 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.54078 moveto
0.03006 0.54078 lineto
stroke
grestore
[(0.75)] 0.01131 0.54078 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.61803 moveto
0.03006 0.61803 lineto
stroke
grestore
[(1)] 0.01131 0.61803 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.01545 moveto
0.02756 0.01545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0309 moveto
0.02756 0.0309 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.04635 moveto
0.02756 0.04635 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0618 moveto
0.02756 0.0618 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.09271 moveto
0.02756 0.09271 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.10816 moveto
0.02756 0.10816 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.12361 moveto
0.02756 0.12361 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13906 moveto
0.02756 0.13906 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.16996 moveto
0.02756 0.16996 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.18541 moveto
0.02756 0.18541 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.20086 moveto
0.02756 0.20086 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.21631 moveto
0.02756 0.21631 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.24721 moveto
0.02756 0.24721 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26266 moveto
0.02756 0.26266 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.27812 moveto
0.02756 0.27812 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.29357 moveto
0.02756 0.29357 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.32447 moveto
0.02756 0.32447 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33992 moveto
0.02756 0.33992 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35537 moveto
0.02756 0.35537 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.37082 moveto
0.02756 0.37082 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.40172 moveto
0.02756 0.40172 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.41717 moveto
0.02756 0.41717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.43262 moveto
0.02756 0.43262 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44807 moveto
0.02756 0.44807 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.47898 moveto
0.02756 0.47898 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.49443 moveto
0.02756 0.49443 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50988 moveto
0.02756 0.50988 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.52533 moveto
0.02756 0.52533 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.55623 moveto
0.02756 0.55623 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.57168 moveto
0.02756 0.57168 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.58713 moveto
0.02756 0.58713 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.60258 moveto
0.02756 0.60258 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.61803 moveto
0.02505 0.61802 lineto
0.02629 0.61799 lineto
0.02753 0.61794 lineto
0.02877 0.61787 lineto
0.03001 0.61778 lineto
0.03125 0.61766 lineto
0.03373 0.61737 lineto
0.03621 0.617 lineto
0.03869 0.61655 lineto
0.04365 0.61539 lineto
0.04861 0.61391 lineto
0.05357 0.6121 lineto
0.06349 0.6075 lineto
0.08333 0.59451 lineto
0.10317 0.57663 lineto
0.14286 0.52753 lineto
0.18254 0.46353 lineto
0.22222 0.389 lineto
0.2619 0.30902 lineto
0.30159 0.22904 lineto
0.34127 0.15451 lineto
0.38095 0.09051 lineto
0.40079 0.06386 lineto
0.42063 0.0414 lineto
0.44048 0.02352 lineto
0.4504 0.0164 lineto
0.46032 0.01053 lineto
0.47024 0.00594 lineto
0.4752 0.00413 lineto
0.48016 0.00264 lineto
0.48512 0.00149 lineto
0.4876 0.00103 lineto
0.49008 0.00066 lineto
0.49256 0.00037 lineto
0.4938 0.00026 lineto
0.49504 0.00017 lineto
0.49628 9e-05 lineto
0.49752 4e-05 lineto
0.49876 1e-05 lineto
0.5 0 lineto
0.50124 1e-05 lineto
0.50248 4e-05 lineto
0.50372 9e-05 lineto
0.50496 0.00017 lineto
0.5062 0.00026 lineto
0.50744 0.00037 lineto
0.50992 0.00066 lineto
0.5124 0.00103 lineto
0.51488 0.00149 lineto
Mistroke
0.51984 0.00264 lineto
0.5248 0.00413 lineto
0.52976 0.00594 lineto
0.53968 0.01053 lineto
0.55952 0.02352 lineto
0.57937 0.0414 lineto
0.61905 0.09051 lineto
0.65873 0.15451 lineto
0.69841 0.22904 lineto
0.7381 0.30902 lineto
0.77778 0.389 lineto
0.81746 0.46353 lineto
0.85714 0.52753 lineto
0.87698 0.55418 lineto
0.89683 0.57663 lineto
0.91667 0.59451 lineto
0.93651 0.6075 lineto
0.94643 0.6121 lineto
0.95139 0.61391 lineto
0.95635 0.61539 lineto
0.96131 0.61655 lineto
0.96379 0.617 lineto
0.96627 0.61737 lineto
0.96875 0.61766 lineto
0.96999 0.61778 lineto
0.97123 0.61787 lineto
0.97247 0.61794 lineto
0.97371 0.61799 lineto
0.97495 0.61802 lineto
0.97619 0.61803 lineto
Mfstroke
grestore
grestore
% End of Graphics
MathPictureEnd%%PSTrailer
end

%%EPS Trailer
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
300 execuserobject setfont
0 setgray
77 293 1.677616e+07 12 rectclip
77 293 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) Out[3]=) show
grestore
gsave
96 307 425 12 rectclip
/Courier findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
0 0 0 setrgbcolor
96 315 moveto
(-Graphics-) show
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
297 execuserobject setfont
0 setgray
77 327 1.677616e+07 12 rectclip
77 327 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) In[4]:=) show
grestore
gsave
96 341 425 13 rectclip
gsave
297 execuserobject setfont
0 setgray
96 341 1.677614e+07 13 rectclip
96 341 translate
1 1 1 setrgbcolor
0 0 425 13 rectfill
300 execuserobject setfont
0 setgray
2 10 moveto (Plot[cheby1[Cos[time]],{time,0,2*Pi},PlotRange->{-1,1}]) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
95 362 282 174 rectclip
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		95.000000 def
/Mbottom	536.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
%!
%%Creator: Mathematica
%%AspectRatio: 0.61803 
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.151576 0.309017 0.309017 [
[(1)] 0.17539 0.30902 0 2 Msboxa
[(2)] 0.32696 0.30902 0 2 Msboxa
[(3)] 0.47854 0.30902 0 2 Msboxa
[(4)] 0.63011 0.30902 0 2 Msboxa
[(5)] 0.78169 0.30902 0 2 Msboxa
[(6)] 0.93327 0.30902 0 2 Msboxa
[(-1)] 0.01131 0 1 0 Msboxa
[(-0.75)] 0.01131 0.07725 1 0 Msboxa
[(-0.5)] 0.01131 0.15451 1 0 Msboxa
[(-0.25)] 0.01131 0.23176 1 0 Msboxa
[(0.25)] 0.01131 0.38627 1 0 Msboxa
[(0.5)] 0.01131 0.46353 1 0 Msboxa
[(0.75)] 0.01131 0.54078 1 0 Msboxa
[(1)] 0.01131 0.61803 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.17539 0.30902 moveto
0.17539 0.31527 lineto
stroke
grestore
[(1)] 0.17539 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.32696 0.30902 moveto
0.32696 0.31527 lineto
stroke
grestore
[(2)] 0.32696 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.47854 0.30902 moveto
0.47854 0.31527 lineto
stroke
grestore
[(3)] 0.47854 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.63011 0.30902 moveto
0.63011 0.31527 lineto
stroke
grestore
[(4)] 0.63011 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.78169 0.30902 moveto
0.78169 0.31527 lineto
stroke
grestore
[(5)] 0.78169 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.93327 0.30902 moveto
0.93327 0.31527 lineto
stroke
grestore
[(6)] 0.93327 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.05412 0.30902 moveto
0.05412 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08444 0.30902 moveto
0.08444 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11476 0.30902 moveto
0.11476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14507 0.30902 moveto
0.14507 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2057 0.30902 moveto
0.2057 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23602 0.30902 moveto
0.23602 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26633 0.30902 moveto
0.26633 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29665 0.30902 moveto
0.29665 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35728 0.30902 moveto
0.35728 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38759 0.30902 moveto
0.38759 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41791 0.30902 moveto
0.41791 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44822 0.30902 moveto
0.44822 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50885 0.30902 moveto
0.50885 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53917 0.30902 moveto
0.53917 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56948 0.30902 moveto
0.56948 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5998 0.30902 moveto
0.5998 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.66043 0.30902 moveto
0.66043 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69074 0.30902 moveto
0.69074 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72106 0.30902 moveto
0.72106 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75137 0.30902 moveto
0.75137 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81201 0.30902 moveto
0.81201 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84232 0.30902 moveto
0.84232 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87264 0.30902 moveto
0.87264 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90295 0.30902 moveto
0.90295 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.96358 0.30902 moveto
0.96358 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9939 0.30902 moveto
0.9939 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.03006 0 lineto
stroke
grestore
[(-1)] 0.01131 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.07725 moveto
0.03006 0.07725 lineto
stroke
grestore
[(-0.75)] 0.01131 0.07725 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.15451 moveto
0.03006 0.15451 lineto
stroke
grestore
[(-0.5)] 0.01131 0.15451 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.23176 moveto
0.03006 0.23176 lineto
stroke
grestore
[(-0.25)] 0.01131 0.23176 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.38627 moveto
0.03006 0.38627 lineto
stroke
grestore
[(0.25)] 0.01131 0.38627 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.46353 moveto
0.03006 0.46353 lineto
stroke
grestore
[(0.5)] 0.01131 0.46353 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.54078 moveto
0.03006 0.54078 lineto
stroke
grestore
[(0.75)] 0.01131 0.54078 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.61803 moveto
0.03006 0.61803 lineto
stroke
grestore
[(1)] 0.01131 0.61803 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.01545 moveto
0.02756 0.01545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0309 moveto
0.02756 0.0309 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.04635 moveto
0.02756 0.04635 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0618 moveto
0.02756 0.0618 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.09271 moveto
0.02756 0.09271 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.10816 moveto
0.02756 0.10816 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.12361 moveto
0.02756 0.12361 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13906 moveto
0.02756 0.13906 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.16996 moveto
0.02756 0.16996 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.18541 moveto
0.02756 0.18541 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.20086 moveto
0.02756 0.20086 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.21631 moveto
0.02756 0.21631 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.24721 moveto
0.02756 0.24721 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26266 moveto
0.02756 0.26266 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.27812 moveto
0.02756 0.27812 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.29357 moveto
0.02756 0.29357 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.32447 moveto
0.02756 0.32447 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33992 moveto
0.02756 0.33992 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35537 moveto
0.02756 0.35537 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.37082 moveto
0.02756 0.37082 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.40172 moveto
0.02756 0.40172 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.41717 moveto
0.02756 0.41717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.43262 moveto
0.02756 0.43262 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44807 moveto
0.02756 0.44807 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.47898 moveto
0.02756 0.47898 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.49443 moveto
0.02756 0.49443 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50988 moveto
0.02756 0.50988 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.52533 moveto
0.02756 0.52533 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.55623 moveto
0.02756 0.55623 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.57168 moveto
0.02756 0.57168 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.58713 moveto
0.02756 0.58713 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.60258 moveto
0.02756 0.60258 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.61803 moveto
0.02505 0.61802 lineto
0.02629 0.61799 lineto
0.02753 0.61794 lineto
0.02877 0.61787 lineto
0.03001 0.61778 lineto
0.03125 0.61766 lineto
0.03373 0.61737 lineto
0.03621 0.617 lineto
0.03869 0.61655 lineto
0.04365 0.61539 lineto
0.04861 0.61391 lineto
0.05357 0.6121 lineto
0.06349 0.6075 lineto
0.08333 0.59451 lineto
0.10317 0.57663 lineto
0.14286 0.52753 lineto
0.18254 0.46353 lineto
0.22222 0.389 lineto
0.2619 0.30902 lineto
0.30159 0.22904 lineto
0.34127 0.15451 lineto
0.38095 0.09051 lineto
0.40079 0.06386 lineto
0.42063 0.0414 lineto
0.44048 0.02352 lineto
0.4504 0.0164 lineto
0.46032 0.01053 lineto
0.47024 0.00594 lineto
0.4752 0.00413 lineto
0.48016 0.00264 lineto
0.48512 0.00149 lineto
0.4876 0.00103 lineto
0.49008 0.00066 lineto
0.49256 0.00037 lineto
0.4938 0.00026 lineto
0.49504 0.00017 lineto
0.49628 9e-05 lineto
0.49752 4e-05 lineto
0.49876 1e-05 lineto
0.5 0 lineto
0.50124 1e-05 lineto
0.50248 4e-05 lineto
0.50372 9e-05 lineto
0.50496 0.00017 lineto
0.5062 0.00026 lineto
0.50744 0.00037 lineto
0.50992 0.00066 lineto
0.5124 0.00103 lineto
0.51488 0.00149 lineto
Mistroke
0.51984 0.00264 lineto
0.5248 0.00413 lineto
0.52976 0.00594 lineto
0.53968 0.01053 lineto
0.55952 0.02352 lineto
0.57937 0.0414 lineto
0.61905 0.09051 lineto
0.65873 0.15451 lineto
0.69841 0.22904 lineto
0.7381 0.30902 lineto
0.77778 0.389 lineto
0.81746 0.46353 lineto
0.85714 0.52753 lineto
0.87698 0.55418 lineto
0.89683 0.57663 lineto
0.91667 0.59451 lineto
0.93651 0.6075 lineto
0.94643 0.6121 lineto
0.95139 0.61391 lineto
0.95635 0.61539 lineto
0.96131 0.61655 lineto
0.96379 0.617 lineto
0.96627 0.61737 lineto
0.96875 0.61766 lineto
0.96999 0.61778 lineto
0.97123 0.61787 lineto
0.97247 0.61794 lineto
0.97371 0.61799 lineto
0.97495 0.61802 lineto
0.97619 0.61803 lineto
Mfstroke
grestore
grestore
% End of Graphics
MathPictureEnd%%PSTrailer
end

%%EPS Trailer
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
300 execuserobject setfont
0 setgray
77 544 1.677616e+07 12 rectclip
77 544 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) Out[4]=) show
grestore
gsave
96 558 425 12 rectclip
32 execuserobject setfont
0 0 0 setrgbcolor
96 566 moveto
(-Graphics-) show
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 578 460 84 rectclip
gsave
297 execuserobject setfont
0 setgray
61 578 1.677618e+07 84 rectclip
61 578 translate
1 1 1 setrgbcolor
0 0 459 84 rectfill
299 execuserobject setfont
0 setgray
2 11 moveto (As you can see, the first chebychev polynomail simply takes an input and performs a) show
2 25 moveto (linear mapping of it into the output and therefore is the First Harmonic. This in itself is) show
2 39 moveto (actually entirely useless--why insert the overhead of a wavetable lookup when you just) show
2 53 moveto (want a sine wave output? There is no reason, in fact. However, WaveShaping becomes an) show
2 67 moveto (extremely useful and efficient method of synthesizing complex sounds, as you will see) show
2 81 moveto (below:) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 670 460 14 rectclip
gsave
299 execuserobject setfont
0 setgray
61 670 1.677618e+07 14 rectclip
61 670 translate
1 1 1 setrgbcolor
0 0 459 14 rectfill
299 execuserobject setfont
0 setgray
2 11 moveto (First, let us consider a plot of the first 3 odd Chebychev polynomials.) show
grestore
grestore
grestore
gsave
54 29 467 14 rectclip
gsave
299 execuserobject setfont
0 setgray
54 29 467 14 rectclip
54 29 translate
299 execuserobject setfont
0 setgray
2 11 moveto (WaveShaping.math.ma) show
grestore
grestore
0.5 setlinewidth
521 43 moveto
54 43 lineto
stroke
1 setlinewidth
1 setlinewidth 0 setgray
gsave
54 29 467 14 rectclip
gsave
299 execuserobject setfont
0 setgray
54 29 467 14 rectclip
54 29 translate
299 execuserobject setfont
0 setgray
459 11 moveto (2) show
grestore
grestore
0.5 setlinewidth
521 43 moveto
54 43 lineto
stroke
1 setlinewidth
1 setlinewidth 0 setgray
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Courier-Bold
%%+ Courier
%%+ Times-Italic
%%+ Times-Roman

%%Page: 3 3
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 9972 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
[1 0 0 -1 -19 10581] concat
19 9789 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
299
exch
defineuserobject
299 execuserobject setfont
0 setgray
77 76 1.677616e+07 12 rectclip
77 76 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
/Times-Italic findfont 10 scalefont [1 0 0 -1 0 0] makefont
297
exch
defineuserobject
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) In[5]:=) show
grestore
gsave
96 90 425 13 rectclip
gsave
297 execuserobject setfont
0 setgray
96 90 1.677615e+07 13 rectclip
96 90 translate
1 1 1 setrgbcolor
0 0 425 13 rectfill
/Courier-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
300
exch
defineuserobject
300 execuserobject setfont
0 setgray
2 10 moveto (cheby2[x_] := \(x/3 + \(4*x^3 -3*x\)/3 +\(16*x^5 - 20*x^3 +5*x\)/3\)) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
300 execuserobject setfont
0 setgray
77 111 1.677616e+07 12 rectclip
77 111 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) In[6]:=) show
grestore
gsave
96 125 425 13 rectclip
gsave
297 execuserobject setfont
0 setgray
96 125 1.677614e+07 13 rectclip
96 125 translate
1 1 1 setrgbcolor
0 0 425 13 rectfill
300 execuserobject setfont
0 setgray
2 10 moveto (Plot[cheby2[x],{x,-1,1},PlotRange->{-1,1}]) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
95 146 282 174 rectclip
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		95.000000 def
/Mbottom	320.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
%!
%%Creator: Mathematica
%%AspectRatio: 0.61803 
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0.309017 0.309017 [
[(-1)] 0.02381 0.30902 0 2 Msboxa
[(-0.5)] 0.2619 0.30902 0 2 Msboxa
[(0.5)] 0.7381 0.30902 0 2 Msboxa
[(1)] 0.97619 0.30902 0 2 Msboxa
[(-1)] 0.4875 0 1 0 Msboxa
[(-0.75)] 0.4875 0.07725 1 0 Msboxa
[(-0.5)] 0.4875 0.15451 1 0 Msboxa
[(-0.25)] 0.4875 0.23176 1 0 Msboxa
[(0.25)] 0.4875 0.38627 1 0 Msboxa
[(0.5)] 0.4875 0.46353 1 0 Msboxa
[(0.75)] 0.4875 0.54078 1 0 Msboxa
[(1)] 0.4875 0.61803 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.30902 moveto
0.02381 0.31527 lineto
stroke
grestore
[(-1)] 0.02381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.30902 moveto
0.2619 0.31527 lineto
stroke
grestore
[(-0.5)] 0.2619 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.30902 moveto
0.7381 0.31527 lineto
stroke
grestore
[(0.5)] 0.7381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.30902 moveto
0.97619 0.31527 lineto
stroke
grestore
[(1)] 0.97619 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.30902 moveto
0.07143 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.30902 moveto
0.11905 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.30902 moveto
0.16667 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.30902 moveto
0.21429 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.30902 moveto
0.30952 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.30902 moveto
0.35714 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.30902 moveto
0.40476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.30902 moveto
0.45238 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.30902 moveto
0.54762 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.30902 moveto
0.59524 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.30902 moveto
0.64286 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.30902 moveto
0.69048 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.30902 moveto
0.78571 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.30902 moveto
0.83333 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.30902 moveto
0.88095 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.30902 moveto
0.92857 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.50625 0 lineto
stroke
grestore
[(-1)] 0.4875 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.07725 moveto
0.50625 0.07725 lineto
stroke
grestore
[(-0.75)] 0.4875 0.07725 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.15451 moveto
0.50625 0.15451 lineto
stroke
grestore
[(-0.5)] 0.4875 0.15451 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.23176 moveto
0.50625 0.23176 lineto
stroke
grestore
[(-0.25)] 0.4875 0.23176 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.38627 moveto
0.50625 0.38627 lineto
stroke
grestore
[(0.25)] 0.4875 0.38627 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.46353 moveto
0.50625 0.46353 lineto
stroke
grestore
[(0.5)] 0.4875 0.46353 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.54078 moveto
0.50625 0.54078 lineto
stroke
grestore
[(0.75)] 0.4875 0.54078 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.61803 moveto
0.50625 0.61803 lineto
stroke
grestore
[(1)] 0.4875 0.61803 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.01545 moveto
0.50375 0.01545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.0309 moveto
0.50375 0.0309 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04635 moveto
0.50375 0.04635 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.0618 moveto
0.50375 0.0618 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09271 moveto
0.50375 0.09271 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.10816 moveto
0.50375 0.10816 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.12361 moveto
0.50375 0.12361 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13906 moveto
0.50375 0.13906 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16996 moveto
0.50375 0.16996 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18541 moveto
0.50375 0.18541 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.20086 moveto
0.50375 0.20086 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21631 moveto
0.50375 0.21631 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.24721 moveto
0.50375 0.24721 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.26266 moveto
0.50375 0.26266 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27812 moveto
0.50375 0.27812 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.29357 moveto
0.50375 0.29357 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32447 moveto
0.50375 0.32447 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33992 moveto
0.50375 0.33992 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35537 moveto
0.50375 0.35537 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.37082 moveto
0.50375 0.37082 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40172 moveto
0.50375 0.40172 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41717 moveto
0.50375 0.41717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.43262 moveto
0.50375 0.43262 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44807 moveto
0.50375 0.44807 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.47898 moveto
0.50375 0.47898 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.49443 moveto
0.50375 0.49443 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.50988 moveto
0.50375 0.50988 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.52533 moveto
0.50375 0.52533 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55623 moveto
0.50375 0.55623 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.57168 moveto
0.50375 0.57168 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58713 moveto
0.50375 0.58713 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.60258 moveto
0.50375 0.60258 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0 moveto
0.04365 0.13124 lineto
0.06349 0.22851 lineto
0.08333 0.2974 lineto
0.09325 0.32279 lineto
0.10317 0.34293 lineto
0.1131 0.35836 lineto
0.11806 0.36448 lineto
0.12302 0.36961 lineto
0.12798 0.37381 lineto
0.13294 0.37715 lineto
0.13542 0.37851 lineto
0.1379 0.37967 lineto
0.14038 0.38065 lineto
0.14286 0.38144 lineto
0.14534 0.38206 lineto
0.14782 0.38251 lineto
0.14906 0.38267 lineto
0.1503 0.38279 lineto
0.15154 0.38287 lineto
0.15278 0.38292 lineto
0.15402 0.38293 lineto
0.15526 0.38289 lineto
0.1565 0.38283 lineto
0.15774 0.38273 lineto
0.15898 0.38259 lineto
0.16022 0.38242 lineto
0.1627 0.38198 lineto
0.16518 0.38141 lineto
0.16766 0.38071 lineto
0.17262 0.37899 lineto
0.18254 0.3743 lineto
0.20238 0.36107 lineto
0.22222 0.34458 lineto
0.2619 0.30902 lineto
0.28175 0.29273 lineto
0.30159 0.27878 lineto
0.32143 0.26782 lineto
0.33135 0.26361 lineto
0.34127 0.26027 lineto
0.35119 0.25783 lineto
0.35615 0.25695 lineto
0.35863 0.2566 lineto
0.36111 0.2563 lineto
0.36359 0.25606 lineto
0.36607 0.25587 lineto
0.36731 0.2558 lineto
0.36855 0.25574 lineto
0.36979 0.2557 lineto
0.37103 0.25566 lineto
Mistroke
0.37227 0.25565 lineto
0.37351 0.25564 lineto
0.37475 0.25565 lineto
0.37599 0.25568 lineto
0.37723 0.25571 lineto
0.37847 0.25576 lineto
0.38095 0.2559 lineto
0.38343 0.2561 lineto
0.38591 0.25635 lineto
0.39087 0.25699 lineto
0.39583 0.25785 lineto
0.40079 0.25889 lineto
0.41071 0.26156 lineto
0.42063 0.26493 lineto
0.44048 0.27356 lineto
0.46032 0.28421 lineto
0.5 0.30902 lineto
0.53968 0.33382 lineto
0.55952 0.34448 lineto
0.56944 0.34908 lineto
0.57937 0.3531 lineto
0.58929 0.35648 lineto
0.59921 0.35914 lineto
0.60417 0.36019 lineto
0.60913 0.36104 lineto
0.61161 0.36139 lineto
0.61409 0.36169 lineto
0.61657 0.36194 lineto
0.61905 0.36213 lineto
0.62153 0.36227 lineto
0.62277 0.36232 lineto
0.62401 0.36236 lineto
0.62525 0.36238 lineto
0.62649 0.36239 lineto
0.62773 0.36239 lineto
0.62897 0.36237 lineto
0.63021 0.36234 lineto
0.63145 0.36229 lineto
0.63269 0.36224 lineto
0.63393 0.36216 lineto
0.63641 0.36198 lineto
0.63889 0.36173 lineto
0.64385 0.36108 lineto
0.64881 0.3602 lineto
0.65873 0.35776 lineto
0.66865 0.35443 lineto
0.67857 0.35021 lineto
0.69841 0.33925 lineto
0.7381 0.30902 lineto
0.77778 0.27346 lineto
Mistroke
0.79762 0.25696 lineto
0.80754 0.24981 lineto
0.81746 0.24374 lineto
0.82242 0.2412 lineto
0.82738 0.23905 lineto
0.83234 0.23732 lineto
0.83482 0.23663 lineto
0.8373 0.23606 lineto
0.83978 0.23562 lineto
0.84102 0.23545 lineto
0.84226 0.23531 lineto
0.8435 0.23521 lineto
0.84474 0.23514 lineto
0.84598 0.23511 lineto
0.84722 0.23512 lineto
0.84846 0.23516 lineto
0.8497 0.23524 lineto
0.85094 0.23536 lineto
0.85218 0.23553 lineto
0.85466 0.23597 lineto
0.85714 0.23659 lineto
0.85962 0.23738 lineto
0.8621 0.23836 lineto
0.86706 0.24089 lineto
0.87202 0.24422 lineto
0.87698 0.24843 lineto
0.8869 0.25967 lineto
0.89683 0.27511 lineto
0.90675 0.29524 lineto
0.91667 0.32064 lineto
0.93651 0.38952 lineto
0.95635 0.4868 lineto
0.97619 0.61803 lineto
Mfstroke
grestore
grestore
% End of Graphics
MathPictureEnd%%PSTrailer
end

%%EPS Trailer
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
300 execuserobject setfont
0 setgray
77 328 1.677616e+07 12 rectclip
77 328 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) Out[6]=) show
grestore
gsave
96 342 425 12 rectclip
/Courier findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
0 0 0 setrgbcolor
96 350 moveto
(-Graphics-) show
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 362 460 28 rectclip
gsave
297 execuserobject setfont
0 setgray
61 362 1.677618e+07 28 rectclip
61 362 translate
1 1 1 setrgbcolor
0 0 459 28 rectfill
299 execuserobject setfont
0 setgray
2 11 moveto (The above table is however, somewhat unclear as to what impact it will have on the input) show
2 25 moveto (values, so let us examine the output when we feed a sine wave into it:) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
299 execuserobject setfont
0 setgray
77 398 1.677616e+07 12 rectclip
77 398 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) In[7]:=) show
grestore
gsave
96 412 425 13 rectclip
gsave
297 execuserobject setfont
0 setgray
96 412 1.677614e+07 13 rectclip
96 412 translate
1 1 1 setrgbcolor
0 0 425 13 rectfill
300 execuserobject setfont
0 setgray
2 10 moveto (Plot[cheby2[Cos[time]],{time,0,2*Pi},PlotRange->{-1,1}]) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
95 433 282 174 rectclip
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		95.000000 def
/Mbottom	607.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
%!
%%Creator: Mathematica
%%AspectRatio: 0.61803 
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.151576 0.309017 0.309017 [
[(1)] 0.17539 0.30902 0 2 Msboxa
[(2)] 0.32696 0.30902 0 2 Msboxa
[(3)] 0.47854 0.30902 0 2 Msboxa
[(4)] 0.63011 0.30902 0 2 Msboxa
[(5)] 0.78169 0.30902 0 2 Msboxa
[(6)] 0.93327 0.30902 0 2 Msboxa
[(-1)] 0.01131 0 1 0 Msboxa
[(-0.75)] 0.01131 0.07725 1 0 Msboxa
[(-0.5)] 0.01131 0.15451 1 0 Msboxa
[(-0.25)] 0.01131 0.23176 1 0 Msboxa
[(0.25)] 0.01131 0.38627 1 0 Msboxa
[(0.5)] 0.01131 0.46353 1 0 Msboxa
[(0.75)] 0.01131 0.54078 1 0 Msboxa
[(1)] 0.01131 0.61803 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.17539 0.30902 moveto
0.17539 0.31527 lineto
stroke
grestore
[(1)] 0.17539 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.32696 0.30902 moveto
0.32696 0.31527 lineto
stroke
grestore
[(2)] 0.32696 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.47854 0.30902 moveto
0.47854 0.31527 lineto
stroke
grestore
[(3)] 0.47854 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.63011 0.30902 moveto
0.63011 0.31527 lineto
stroke
grestore
[(4)] 0.63011 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.78169 0.30902 moveto
0.78169 0.31527 lineto
stroke
grestore
[(5)] 0.78169 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.93327 0.30902 moveto
0.93327 0.31527 lineto
stroke
grestore
[(6)] 0.93327 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.05412 0.30902 moveto
0.05412 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08444 0.30902 moveto
0.08444 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11476 0.30902 moveto
0.11476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14507 0.30902 moveto
0.14507 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2057 0.30902 moveto
0.2057 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23602 0.30902 moveto
0.23602 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26633 0.30902 moveto
0.26633 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29665 0.30902 moveto
0.29665 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35728 0.30902 moveto
0.35728 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38759 0.30902 moveto
0.38759 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41791 0.30902 moveto
0.41791 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44822 0.30902 moveto
0.44822 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50885 0.30902 moveto
0.50885 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53917 0.30902 moveto
0.53917 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56948 0.30902 moveto
0.56948 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5998 0.30902 moveto
0.5998 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.66043 0.30902 moveto
0.66043 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69074 0.30902 moveto
0.69074 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72106 0.30902 moveto
0.72106 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75137 0.30902 moveto
0.75137 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81201 0.30902 moveto
0.81201 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84232 0.30902 moveto
0.84232 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87264 0.30902 moveto
0.87264 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90295 0.30902 moveto
0.90295 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.96358 0.30902 moveto
0.96358 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9939 0.30902 moveto
0.9939 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.03006 0 lineto
stroke
grestore
[(-1)] 0.01131 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.07725 moveto
0.03006 0.07725 lineto
stroke
grestore
[(-0.75)] 0.01131 0.07725 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.15451 moveto
0.03006 0.15451 lineto
stroke
grestore
[(-0.5)] 0.01131 0.15451 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.23176 moveto
0.03006 0.23176 lineto
stroke
grestore
[(-0.25)] 0.01131 0.23176 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.38627 moveto
0.03006 0.38627 lineto
stroke
grestore
[(0.25)] 0.01131 0.38627 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.46353 moveto
0.03006 0.46353 lineto
stroke
grestore
[(0.5)] 0.01131 0.46353 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.54078 moveto
0.03006 0.54078 lineto
stroke
grestore
[(0.75)] 0.01131 0.54078 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.61803 moveto
0.03006 0.61803 lineto
stroke
grestore
[(1)] 0.01131 0.61803 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.01545 moveto
0.02756 0.01545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0309 moveto
0.02756 0.0309 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.04635 moveto
0.02756 0.04635 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0618 moveto
0.02756 0.0618 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.09271 moveto
0.02756 0.09271 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.10816 moveto
0.02756 0.10816 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.12361 moveto
0.02756 0.12361 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13906 moveto
0.02756 0.13906 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.16996 moveto
0.02756 0.16996 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.18541 moveto
0.02756 0.18541 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.20086 moveto
0.02756 0.20086 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.21631 moveto
0.02756 0.21631 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.24721 moveto
0.02756 0.24721 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26266 moveto
0.02756 0.26266 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.27812 moveto
0.02756 0.27812 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.29357 moveto
0.02756 0.29357 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.32447 moveto
0.02756 0.32447 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33992 moveto
0.02756 0.33992 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35537 moveto
0.02756 0.35537 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.37082 moveto
0.02756 0.37082 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.40172 moveto
0.02756 0.40172 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.41717 moveto
0.02756 0.41717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.43262 moveto
0.02756 0.43262 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44807 moveto
0.02756 0.44807 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.47898 moveto
0.02756 0.47898 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.49443 moveto
0.02756 0.49443 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50988 moveto
0.02756 0.50988 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.52533 moveto
0.02756 0.52533 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.55623 moveto
0.02756 0.55623 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.57168 moveto
0.02756 0.57168 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.58713 moveto
0.02756 0.58713 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.60258 moveto
0.02756 0.60258 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.61803 moveto
0.02505 0.61791 lineto
0.02629 0.61755 lineto
0.02753 0.61695 lineto
0.02877 0.61611 lineto
0.03001 0.61503 lineto
0.03125 0.61371 lineto
0.03373 0.61037 lineto
0.03869 0.60094 lineto
0.04365 0.58803 lineto
0.05357 0.55292 lineto
0.06349 0.50801 lineto
0.08333 0.40418 lineto
0.09325 0.35358 lineto
0.10317 0.30902 lineto
0.10813 0.28999 lineto
0.1131 0.27354 lineto
0.11806 0.25989 lineto
0.12302 0.24919 lineto
0.12798 0.24151 lineto
0.13046 0.23881 lineto
0.1317 0.23774 lineto
0.13294 0.23685 lineto
0.13418 0.23615 lineto
0.13542 0.23563 lineto
0.13666 0.23529 lineto
0.1379 0.23512 lineto
0.13914 0.23513 lineto
0.14038 0.23532 lineto
0.14162 0.23567 lineto
0.14286 0.23618 lineto
0.14534 0.23769 lineto
0.14782 0.23981 lineto
0.15278 0.24573 lineto
0.15774 0.25362 lineto
0.1627 0.26311 lineto
0.18254 0.30902 lineto
0.19246 0.33099 lineto
0.19742 0.34043 lineto
0.20238 0.34844 lineto
0.20734 0.35477 lineto
0.20982 0.35726 lineto
0.2123 0.35927 lineto
0.21354 0.36009 lineto
0.21478 0.36078 lineto
0.21602 0.36136 lineto
0.21726 0.3618 lineto
0.2185 0.36212 lineto
0.21974 0.36232 lineto
0.22098 0.36239 lineto
Mistroke
0.22222 0.36234 lineto
0.2619 0.30902 lineto
0.27183 0.28927 lineto
0.27679 0.28027 lineto
0.28175 0.27228 lineto
0.28671 0.26561 lineto
0.28919 0.26285 lineto
0.29167 0.2605 lineto
0.29415 0.2586 lineto
0.29539 0.25781 lineto
0.29663 0.25715 lineto
0.29787 0.2566 lineto
0.29911 0.25618 lineto
0.30035 0.25588 lineto
0.30159 0.2557 lineto
0.30283 0.25564 lineto
0.30407 0.25571 lineto
0.30531 0.25591 lineto
0.30655 0.25623 lineto
0.30903 0.25725 lineto
0.31027 0.25795 lineto
0.31151 0.25877 lineto
0.31647 0.26326 lineto
0.32143 0.2696 lineto
0.33135 0.28704 lineto
0.34127 0.30902 lineto
0.35119 0.33272 lineto
0.36111 0.35492 lineto
0.36607 0.36441 lineto
0.37103 0.3723 lineto
0.37599 0.37823 lineto
0.37847 0.38034 lineto
0.37971 0.38118 lineto
0.38095 0.38185 lineto
0.38219 0.38237 lineto
0.38343 0.38272 lineto
0.38467 0.3829 lineto
0.38591 0.38291 lineto
0.38715 0.38275 lineto
0.38839 0.38241 lineto
0.38963 0.38189 lineto
0.39087 0.38118 lineto
0.39335 0.37922 lineto
0.39583 0.37652 lineto
0.39831 0.37306 lineto
0.40079 0.36884 lineto
0.40575 0.35814 lineto
0.41071 0.34449 lineto
0.42063 0.30902 lineto
0.44048 0.21385 lineto
Mistroke
0.46032 0.11003 lineto
0.47024 0.06512 lineto
0.48016 0.03001 lineto
0.48512 0.01709 lineto
0.4876 0.01193 lineto
0.49008 0.00767 lineto
0.49256 0.00433 lineto
0.4938 0.00301 lineto
0.49504 0.00193 lineto
0.49628 0.00108 lineto
0.49752 0.00048 lineto
0.49876 0.00012 lineto
0.5 0 lineto
0.50124 0.00012 lineto
0.50248 0.00048 lineto
0.50372 0.00108 lineto
0.50496 0.00193 lineto
0.5062 0.00301 lineto
0.50744 0.00433 lineto
0.50992 0.00767 lineto
0.51488 0.01709 lineto
0.51984 0.03001 lineto
0.52976 0.06512 lineto
0.53968 0.11003 lineto
0.55952 0.21385 lineto
0.56944 0.26445 lineto
0.57937 0.30902 lineto
0.58929 0.34449 lineto
0.59425 0.35814 lineto
0.59921 0.36884 lineto
0.60169 0.37306 lineto
0.60417 0.37652 lineto
0.60665 0.37922 lineto
0.60789 0.3803 lineto
0.60913 0.38118 lineto
0.61037 0.38189 lineto
0.61161 0.38241 lineto
0.61285 0.38275 lineto
0.61409 0.38291 lineto
0.61533 0.3829 lineto
0.61657 0.38272 lineto
0.61781 0.38237 lineto
0.61905 0.38185 lineto
0.62153 0.38034 lineto
0.62401 0.37823 lineto
0.62897 0.3723 lineto
0.63393 0.36441 lineto
0.63889 0.35492 lineto
0.65873 0.30902 lineto
0.66865 0.28704 lineto
Mistroke
0.67361 0.2776 lineto
0.67857 0.2696 lineto
0.68353 0.26326 lineto
0.68601 0.26078 lineto
0.68849 0.25877 lineto
0.68973 0.25795 lineto
0.69097 0.25725 lineto
0.69221 0.25668 lineto
0.69345 0.25623 lineto
0.69469 0.25591 lineto
0.69593 0.25571 lineto
0.69717 0.25564 lineto
0.69841 0.2557 lineto
0.7381 0.30902 lineto
0.74802 0.32877 lineto
0.75298 0.33777 lineto
0.75794 0.34575 lineto
0.7629 0.35242 lineto
0.76786 0.35753 lineto
0.77034 0.35944 lineto
0.77158 0.36022 lineto
0.77282 0.36089 lineto
0.77406 0.36143 lineto
0.7753 0.36186 lineto
0.77654 0.36216 lineto
0.77778 0.36234 lineto
0.81746 0.30902 lineto
0.82738 0.28531 lineto
0.8373 0.26311 lineto
0.84226 0.25362 lineto
0.84722 0.24573 lineto
0.8497 0.2425 lineto
0.85218 0.23981 lineto
0.85466 0.23769 lineto
0.8559 0.23686 lineto
0.85714 0.23618 lineto
0.85838 0.23567 lineto
0.85962 0.23532 lineto
0.86086 0.23513 lineto
0.8621 0.23512 lineto
0.86334 0.23529 lineto
0.86458 0.23563 lineto
0.86582 0.23615 lineto
0.86706 0.23685 lineto
0.86954 0.23881 lineto
0.87202 0.24151 lineto
0.8745 0.24498 lineto
0.87698 0.24919 lineto
0.88194 0.25989 lineto
0.8869 0.27354 lineto
Mistroke
0.89683 0.30902 lineto
0.93651 0.50801 lineto
0.94643 0.55292 lineto
0.95139 0.5719 lineto
0.95635 0.58803 lineto
0.96131 0.60094 lineto
0.96379 0.6061 lineto
0.96627 0.61037 lineto
0.96875 0.61371 lineto
0.96999 0.61503 lineto
0.97123 0.61611 lineto
0.97247 0.61695 lineto
0.97371 0.61755 lineto
0.97495 0.61791 lineto
0.97619 0.61803 lineto
Mfstroke
grestore
grestore
% End of Graphics
MathPictureEnd%%PSTrailer
end

%%EPS Trailer
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
300 execuserobject setfont
0 setgray
77 615 1.677616e+07 12 rectclip
77 615 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) Out[7]=) show
grestore
gsave
96 629 425 12 rectclip
32 execuserobject setfont
0 0 0 setrgbcolor
96 637 moveto
(-Graphics-) show
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 649 460 28 rectclip
gsave
297 execuserobject setfont
0 setgray
61 649 1.677618e+07 28 rectclip
61 649 translate
1 1 1 setrgbcolor
0 0 459 28 rectfill
299 execuserobject setfont
0 setgray
2 11 moveto (As we can see, either visually or through a mathematical proof, this is in fact the same as) show
2 25 moveto (doing additive synthesis of the first three harmonics:) show
grestore
grestore
grestore
gsave
54 29 467 14 rectclip
gsave
299 execuserobject setfont
0 setgray
54 29 467 14 rectclip
54 29 translate
299 execuserobject setfont
0 setgray
2 11 moveto (WaveShaping.math.ma) show
grestore
grestore
0.5 setlinewidth
521 43 moveto
54 43 lineto
stroke
1 setlinewidth
1 setlinewidth 0 setgray
gsave
54 29 467 14 rectclip
gsave
299 execuserobject setfont
0 setgray
54 29 467 14 rectclip
54 29 translate
299 execuserobject setfont
0 setgray
459 11 moveto (3) show
grestore
grestore
0.5 setlinewidth
521 43 moveto
54 43 lineto
stroke
1 setlinewidth
1 setlinewidth 0 setgray
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Courier-Bold
%%+ Courier
%%+ Times-Italic
%%+ Times-Roman

%%Page: 4 4
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 9972 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
[1 0 0 -1 -19 10581] concat
19 9789 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
299
exch
defineuserobject
299 execuserobject setfont
0 setgray
77 76 1.677616e+07 12 rectclip
77 76 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
/Times-Italic findfont 10 scalefont [1 0 0 -1 0 0] makefont
297
exch
defineuserobject
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) In[8]:=) show
grestore
gsave
96 90 425 26 rectclip
gsave
297 execuserobject setfont
0 setgray
96 90 1.677614e+07 26 rectclip
96 90 translate
1 1 1 setrgbcolor
0 0 425 26 rectfill
/Courier-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
300
exch
defineuserobject
300 execuserobject setfont
0 setgray
2 10 moveto (Plot[\(Cos[time]/3 + Cos[3*\(time\)]/3 + Cos[5*\(time\)]/3\),) show
30 23 moveto ({time,0,2*Pi},PlotRange->{-1,1}]) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
95 124 282 174 rectclip
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		95.000000 def
/Mbottom	298.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
%!
%%Creator: Mathematica
%%AspectRatio: 0.61803 
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.151576 0.309017 0.309017 [
[(1)] 0.17539 0.30902 0 2 Msboxa
[(2)] 0.32696 0.30902 0 2 Msboxa
[(3)] 0.47854 0.30902 0 2 Msboxa
[(4)] 0.63011 0.30902 0 2 Msboxa
[(5)] 0.78169 0.30902 0 2 Msboxa
[(6)] 0.93327 0.30902 0 2 Msboxa
[(-1)] 0.01131 0 1 0 Msboxa
[(-0.75)] 0.01131 0.07725 1 0 Msboxa
[(-0.5)] 0.01131 0.15451 1 0 Msboxa
[(-0.25)] 0.01131 0.23176 1 0 Msboxa
[(0.25)] 0.01131 0.38627 1 0 Msboxa
[(0.5)] 0.01131 0.46353 1 0 Msboxa
[(0.75)] 0.01131 0.54078 1 0 Msboxa
[(1)] 0.01131 0.61803 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.17539 0.30902 moveto
0.17539 0.31527 lineto
stroke
grestore
[(1)] 0.17539 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.32696 0.30902 moveto
0.32696 0.31527 lineto
stroke
grestore
[(2)] 0.32696 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.47854 0.30902 moveto
0.47854 0.31527 lineto
stroke
grestore
[(3)] 0.47854 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.63011 0.30902 moveto
0.63011 0.31527 lineto
stroke
grestore
[(4)] 0.63011 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.78169 0.30902 moveto
0.78169 0.31527 lineto
stroke
grestore
[(5)] 0.78169 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.93327 0.30902 moveto
0.93327 0.31527 lineto
stroke
grestore
[(6)] 0.93327 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.05412 0.30902 moveto
0.05412 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08444 0.30902 moveto
0.08444 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11476 0.30902 moveto
0.11476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14507 0.30902 moveto
0.14507 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2057 0.30902 moveto
0.2057 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23602 0.30902 moveto
0.23602 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26633 0.30902 moveto
0.26633 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29665 0.30902 moveto
0.29665 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35728 0.30902 moveto
0.35728 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38759 0.30902 moveto
0.38759 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41791 0.30902 moveto
0.41791 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44822 0.30902 moveto
0.44822 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50885 0.30902 moveto
0.50885 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53917 0.30902 moveto
0.53917 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56948 0.30902 moveto
0.56948 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5998 0.30902 moveto
0.5998 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.66043 0.30902 moveto
0.66043 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69074 0.30902 moveto
0.69074 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72106 0.30902 moveto
0.72106 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75137 0.30902 moveto
0.75137 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81201 0.30902 moveto
0.81201 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84232 0.30902 moveto
0.84232 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87264 0.30902 moveto
0.87264 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90295 0.30902 moveto
0.90295 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.96358 0.30902 moveto
0.96358 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9939 0.30902 moveto
0.9939 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.03006 0 lineto
stroke
grestore
[(-1)] 0.01131 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.07725 moveto
0.03006 0.07725 lineto
stroke
grestore
[(-0.75)] 0.01131 0.07725 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.15451 moveto
0.03006 0.15451 lineto
stroke
grestore
[(-0.5)] 0.01131 0.15451 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.23176 moveto
0.03006 0.23176 lineto
stroke
grestore
[(-0.25)] 0.01131 0.23176 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.38627 moveto
0.03006 0.38627 lineto
stroke
grestore
[(0.25)] 0.01131 0.38627 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.46353 moveto
0.03006 0.46353 lineto
stroke
grestore
[(0.5)] 0.01131 0.46353 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.54078 moveto
0.03006 0.54078 lineto
stroke
grestore
[(0.75)] 0.01131 0.54078 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.61803 moveto
0.03006 0.61803 lineto
stroke
grestore
[(1)] 0.01131 0.61803 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.01545 moveto
0.02756 0.01545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0309 moveto
0.02756 0.0309 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.04635 moveto
0.02756 0.04635 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0618 moveto
0.02756 0.0618 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.09271 moveto
0.02756 0.09271 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.10816 moveto
0.02756 0.10816 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.12361 moveto
0.02756 0.12361 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13906 moveto
0.02756 0.13906 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.16996 moveto
0.02756 0.16996 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.18541 moveto
0.02756 0.18541 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.20086 moveto
0.02756 0.20086 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.21631 moveto
0.02756 0.21631 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.24721 moveto
0.02756 0.24721 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26266 moveto
0.02756 0.26266 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.27812 moveto
0.02756 0.27812 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.29357 moveto
0.02756 0.29357 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.32447 moveto
0.02756 0.32447 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33992 moveto
0.02756 0.33992 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35537 moveto
0.02756 0.35537 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.37082 moveto
0.02756 0.37082 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.40172 moveto
0.02756 0.40172 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.41717 moveto
0.02756 0.41717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.43262 moveto
0.02756 0.43262 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44807 moveto
0.02756 0.44807 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.47898 moveto
0.02756 0.47898 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.49443 moveto
0.02756 0.49443 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50988 moveto
0.02756 0.50988 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.52533 moveto
0.02756 0.52533 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.55623 moveto
0.02756 0.55623 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.57168 moveto
0.02756 0.57168 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.58713 moveto
0.02756 0.58713 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.60258 moveto
0.02756 0.60258 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.61803 moveto
0.02505 0.61791 lineto
0.02629 0.61755 lineto
0.02753 0.61695 lineto
0.02877 0.61611 lineto
0.03001 0.61503 lineto
0.03125 0.61371 lineto
0.03373 0.61037 lineto
0.03869 0.60094 lineto
0.04365 0.58803 lineto
0.05357 0.55292 lineto
0.06349 0.50801 lineto
0.08333 0.40418 lineto
0.09325 0.35358 lineto
0.10317 0.30902 lineto
0.10813 0.28999 lineto
0.1131 0.27354 lineto
0.11806 0.25989 lineto
0.12302 0.24919 lineto
0.12798 0.24151 lineto
0.13046 0.23881 lineto
0.1317 0.23774 lineto
0.13294 0.23685 lineto
0.13418 0.23615 lineto
0.13542 0.23563 lineto
0.13666 0.23529 lineto
0.1379 0.23512 lineto
0.13914 0.23513 lineto
0.14038 0.23532 lineto
0.14162 0.23567 lineto
0.14286 0.23618 lineto
0.14534 0.23769 lineto
0.14782 0.23981 lineto
0.15278 0.24573 lineto
0.15774 0.25362 lineto
0.1627 0.26311 lineto
0.18254 0.30902 lineto
0.19246 0.33099 lineto
0.19742 0.34043 lineto
0.20238 0.34844 lineto
0.20734 0.35477 lineto
0.20982 0.35726 lineto
0.2123 0.35927 lineto
0.21354 0.36009 lineto
0.21478 0.36078 lineto
0.21602 0.36136 lineto
0.21726 0.3618 lineto
0.2185 0.36212 lineto
0.21974 0.36232 lineto
0.22098 0.36239 lineto
Mistroke
0.22222 0.36234 lineto
0.2619 0.30902 lineto
0.27183 0.28927 lineto
0.27679 0.28027 lineto
0.28175 0.27228 lineto
0.28671 0.26561 lineto
0.28919 0.26285 lineto
0.29167 0.2605 lineto
0.29415 0.2586 lineto
0.29539 0.25781 lineto
0.29663 0.25715 lineto
0.29787 0.2566 lineto
0.29911 0.25618 lineto
0.30035 0.25588 lineto
0.30159 0.2557 lineto
0.30283 0.25564 lineto
0.30407 0.25571 lineto
0.30531 0.25591 lineto
0.30655 0.25623 lineto
0.30903 0.25725 lineto
0.31027 0.25795 lineto
0.31151 0.25877 lineto
0.31647 0.26326 lineto
0.32143 0.2696 lineto
0.33135 0.28704 lineto
0.34127 0.30902 lineto
0.35119 0.33272 lineto
0.36111 0.35492 lineto
0.36607 0.36441 lineto
0.37103 0.3723 lineto
0.37599 0.37823 lineto
0.37847 0.38034 lineto
0.37971 0.38118 lineto
0.38095 0.38185 lineto
0.38219 0.38237 lineto
0.38343 0.38272 lineto
0.38467 0.3829 lineto
0.38591 0.38291 lineto
0.38715 0.38275 lineto
0.38839 0.38241 lineto
0.38963 0.38189 lineto
0.39087 0.38118 lineto
0.39335 0.37922 lineto
0.39583 0.37652 lineto
0.39831 0.37306 lineto
0.40079 0.36884 lineto
0.40575 0.35814 lineto
0.41071 0.34449 lineto
0.42063 0.30902 lineto
0.44048 0.21385 lineto
Mistroke
0.46032 0.11003 lineto
0.47024 0.06512 lineto
0.48016 0.03001 lineto
0.48512 0.01709 lineto
0.4876 0.01193 lineto
0.49008 0.00767 lineto
0.49256 0.00433 lineto
0.4938 0.00301 lineto
0.49504 0.00193 lineto
0.49628 0.00108 lineto
0.49752 0.00048 lineto
0.49876 0.00012 lineto
0.5 0 lineto
0.50124 0.00012 lineto
0.50248 0.00048 lineto
0.50372 0.00108 lineto
0.50496 0.00193 lineto
0.5062 0.00301 lineto
0.50744 0.00433 lineto
0.50992 0.00767 lineto
0.51488 0.01709 lineto
0.51984 0.03001 lineto
0.52976 0.06512 lineto
0.53968 0.11003 lineto
0.55952 0.21385 lineto
0.56944 0.26445 lineto
0.57937 0.30902 lineto
0.58929 0.34449 lineto
0.59425 0.35814 lineto
0.59921 0.36884 lineto
0.60169 0.37306 lineto
0.60417 0.37652 lineto
0.60665 0.37922 lineto
0.60789 0.3803 lineto
0.60913 0.38118 lineto
0.61037 0.38189 lineto
0.61161 0.38241 lineto
0.61285 0.38275 lineto
0.61409 0.38291 lineto
0.61533 0.3829 lineto
0.61657 0.38272 lineto
0.61781 0.38237 lineto
0.61905 0.38185 lineto
0.62153 0.38034 lineto
0.62401 0.37823 lineto
0.62897 0.3723 lineto
0.63393 0.36441 lineto
0.63889 0.35492 lineto
0.65873 0.30902 lineto
0.66865 0.28704 lineto
Mistroke
0.67361 0.2776 lineto
0.67857 0.2696 lineto
0.68353 0.26326 lineto
0.68601 0.26078 lineto
0.68849 0.25877 lineto
0.68973 0.25795 lineto
0.69097 0.25725 lineto
0.69221 0.25668 lineto
0.69345 0.25623 lineto
0.69469 0.25591 lineto
0.69593 0.25571 lineto
0.69717 0.25564 lineto
0.69841 0.2557 lineto
0.7381 0.30902 lineto
0.74802 0.32877 lineto
0.75298 0.33777 lineto
0.75794 0.34575 lineto
0.7629 0.35242 lineto
0.76786 0.35753 lineto
0.77034 0.35944 lineto
0.77158 0.36022 lineto
0.77282 0.36089 lineto
0.77406 0.36143 lineto
0.7753 0.36186 lineto
0.77654 0.36216 lineto
0.77778 0.36234 lineto
0.81746 0.30902 lineto
0.82738 0.28531 lineto
0.8373 0.26311 lineto
0.84226 0.25362 lineto
0.84722 0.24573 lineto
0.8497 0.2425 lineto
0.85218 0.23981 lineto
0.85466 0.23769 lineto
0.8559 0.23686 lineto
0.85714 0.23618 lineto
0.85838 0.23567 lineto
0.85962 0.23532 lineto
0.86086 0.23513 lineto
0.8621 0.23512 lineto
0.86334 0.23529 lineto
0.86458 0.23563 lineto
0.86582 0.23615 lineto
0.86706 0.23685 lineto
0.86954 0.23881 lineto
0.87202 0.24151 lineto
0.8745 0.24498 lineto
0.87698 0.24919 lineto
0.88194 0.25989 lineto
0.8869 0.27354 lineto
Mistroke
0.89683 0.30902 lineto
0.93651 0.50801 lineto
0.94643 0.55292 lineto
0.95139 0.5719 lineto
0.95635 0.58803 lineto
0.96131 0.60094 lineto
0.96379 0.6061 lineto
0.96627 0.61037 lineto
0.96875 0.61371 lineto
0.96999 0.61503 lineto
0.97123 0.61611 lineto
0.97247 0.61695 lineto
0.97371 0.61755 lineto
0.97495 0.61791 lineto
0.97619 0.61803 lineto
Mfstroke
grestore
grestore
% End of Graphics
MathPictureEnd%%PSTrailer
end

%%EPS Trailer
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
300 execuserobject setfont
0 setgray
77 306 1.677616e+07 12 rectclip
77 306 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) Out[8]=) show
grestore
gsave
96 320 425 12 rectclip
/Courier findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
0 0 0 setrgbcolor
96 328 moveto
(-Graphics-) show
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 340 460 28 rectclip
gsave
297 execuserobject setfont
0 setgray
61 340 1.677618e+07 28 rectclip
61 340 translate
1 1 1 setrgbcolor
0 0 459 28 rectfill
299 execuserobject setfont
0 setgray
2 11 moveto (Next, we can examine adding harmonics 1, 2, 4, 6, and 8. \(Through wavetable synthesis) show
2 25 moveto (using the appropriate chebychev polynomails \(1, 2, 4, 6, 8\).) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
299 execuserobject setfont
0 setgray
77 376 1.677616e+07 12 rectclip
77 376 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) In[9]:=) show
grestore
gsave
96 390 425 13 rectclip
gsave
297 execuserobject setfont
0 setgray
96 390 1.677615e+07 13 rectclip
96 390 translate
1 1 1 setrgbcolor
0 0 425 13 rectfill
300 execuserobject setfont
0 setgray
2 10 moveto (cheby3[x_] := .2*x + .2*\(2*x^2 -1\) + .2*\(8*x^4 - 8*x^2 +1\) + .2*\(32*x^6 - 48*x^4 +18 x^2 -1\) +.2*\(128*x^8 -256*x^6 +160*x^4 -32*x^2 +1\)) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 411 460 14 rectclip
gsave
300 execuserobject setfont
0 setgray
61 411 1.677618e+07 14 rectclip
61 411 translate
1 1 1 setrgbcolor
0 0 459 14 rectfill
299 execuserobject setfont
0 setgray
2 11 moveto (First, let's look at the table:) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
299 execuserobject setfont
0 setgray
77 433 1.677616e+07 12 rectclip
77 433 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) In[10]:=) show
grestore
gsave
96 447 425 13 rectclip
gsave
297 execuserobject setfont
0 setgray
96 447 1.677614e+07 13 rectclip
96 447 translate
1 1 1 setrgbcolor
0 0 425 13 rectfill
300 execuserobject setfont
0 setgray
2 10 moveto (Plot[cheby3[x],{x,-1,1},PlotRange->{-1,1}]) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
95 468 282 174 rectclip
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		95.000000 def
/Mbottom	642.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
%!
%%Creator: Mathematica
%%AspectRatio: 0.61803 
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0.309017 0.309017 [
[(-1)] 0.02381 0.30902 0 2 Msboxa
[(-0.5)] 0.2619 0.30902 0 2 Msboxa
[(0.5)] 0.7381 0.30902 0 2 Msboxa
[(1)] 0.97619 0.30902 0 2 Msboxa
[(-1)] 0.4875 0 1 0 Msboxa
[(-0.75)] 0.4875 0.07725 1 0 Msboxa
[(-0.5)] 0.4875 0.15451 1 0 Msboxa
[(-0.25)] 0.4875 0.23176 1 0 Msboxa
[(0.25)] 0.4875 0.38627 1 0 Msboxa
[(0.5)] 0.4875 0.46353 1 0 Msboxa
[(0.75)] 0.4875 0.54078 1 0 Msboxa
[(1)] 0.4875 0.61803 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.30902 moveto
0.02381 0.31527 lineto
stroke
grestore
[(-1)] 0.02381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.30902 moveto
0.2619 0.31527 lineto
stroke
grestore
[(-0.5)] 0.2619 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.30902 moveto
0.7381 0.31527 lineto
stroke
grestore
[(0.5)] 0.7381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.30902 moveto
0.97619 0.31527 lineto
stroke
grestore
[(1)] 0.97619 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.30902 moveto
0.07143 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.30902 moveto
0.11905 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.30902 moveto
0.16667 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.30902 moveto
0.21429 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.30902 moveto
0.30952 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.30902 moveto
0.35714 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.30902 moveto
0.40476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.30902 moveto
0.45238 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.30902 moveto
0.54762 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.30902 moveto
0.59524 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.30902 moveto
0.64286 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.30902 moveto
0.69048 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.30902 moveto
0.78571 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.30902 moveto
0.83333 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.30902 moveto
0.88095 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.30902 moveto
0.92857 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.50625 0 lineto
stroke
grestore
[(-1)] 0.4875 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.07725 moveto
0.50625 0.07725 lineto
stroke
grestore
[(-0.75)] 0.4875 0.07725 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.15451 moveto
0.50625 0.15451 lineto
stroke
grestore
[(-0.5)] 0.4875 0.15451 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.23176 moveto
0.50625 0.23176 lineto
stroke
grestore
[(-0.25)] 0.4875 0.23176 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.38627 moveto
0.50625 0.38627 lineto
stroke
grestore
[(0.25)] 0.4875 0.38627 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.46353 moveto
0.50625 0.46353 lineto
stroke
grestore
[(0.5)] 0.4875 0.46353 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.54078 moveto
0.50625 0.54078 lineto
stroke
grestore
[(0.75)] 0.4875 0.54078 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.61803 moveto
0.50625 0.61803 lineto
stroke
grestore
[(1)] 0.4875 0.61803 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.01545 moveto
0.50375 0.01545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.0309 moveto
0.50375 0.0309 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04635 moveto
0.50375 0.04635 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.0618 moveto
0.50375 0.0618 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09271 moveto
0.50375 0.09271 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.10816 moveto
0.50375 0.10816 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.12361 moveto
0.50375 0.12361 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13906 moveto
0.50375 0.13906 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16996 moveto
0.50375 0.16996 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18541 moveto
0.50375 0.18541 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.20086 moveto
0.50375 0.20086 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21631 moveto
0.50375 0.21631 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.24721 moveto
0.50375 0.24721 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.26266 moveto
0.50375 0.26266 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27812 moveto
0.50375 0.27812 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.29357 moveto
0.50375 0.29357 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32447 moveto
0.50375 0.32447 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33992 moveto
0.50375 0.33992 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35537 moveto
0.50375 0.35537 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.37082 moveto
0.50375 0.37082 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40172 moveto
0.50375 0.40172 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41717 moveto
0.50375 0.41717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.43262 moveto
0.50375 0.43262 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44807 moveto
0.50375 0.44807 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.47898 moveto
0.50375 0.47898 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.49443 moveto
0.50375 0.49443 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.50988 moveto
0.50375 0.50988 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.52533 moveto
0.50375 0.52533 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55623 moveto
0.50375 0.55623 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.57168 moveto
0.50375 0.57168 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58713 moveto
0.50375 0.58713 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.60258 moveto
0.50375 0.60258 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.49443 moveto
0.02877 0.4238 lineto
0.03373 0.36429 lineto
0.03869 0.31472 lineto
0.04365 0.27399 lineto
0.04861 0.24109 lineto
0.05357 0.2151 lineto
0.05853 0.19515 lineto
0.06101 0.1872 lineto
0.06349 0.18048 lineto
0.06845 0.17035 lineto
0.07093 0.16679 lineto
0.07217 0.16535 lineto
0.07341 0.16413 lineto
0.07465 0.16311 lineto
0.07589 0.16229 lineto
0.07713 0.16166 lineto
0.07837 0.16121 lineto
0.07961 0.16094 lineto
0.08085 0.16082 lineto
0.08209 0.16087 lineto
0.08333 0.16107 lineto
0.08457 0.1614 lineto
0.08581 0.16188 lineto
0.08829 0.1632 lineto
0.09077 0.16499 lineto
0.09325 0.16719 lineto
0.10317 0.17921 lineto
0.12302 0.211 lineto
0.14286 0.24202 lineto
0.15278 0.2547 lineto
0.1627 0.26481 lineto
0.16766 0.26882 lineto
0.17262 0.27214 lineto
0.17758 0.27476 lineto
0.18006 0.27582 lineto
0.18254 0.27671 lineto
0.18502 0.27743 lineto
0.1875 0.27799 lineto
0.18998 0.2784 lineto
0.19122 0.27854 lineto
0.19246 0.27865 lineto
0.1937 0.27872 lineto
0.19494 0.27875 lineto
0.19618 0.27875 lineto
0.19742 0.27871 lineto
0.19866 0.27864 lineto
0.1999 0.27854 lineto
0.20238 0.27823 lineto
0.20486 0.27779 lineto
Mistroke
0.20734 0.27724 lineto
0.2123 0.27578 lineto
0.22222 0.2717 lineto
0.24206 0.26028 lineto
0.2619 0.24721 lineto
0.28175 0.23538 lineto
0.29167 0.23064 lineto
0.29663 0.22865 lineto
0.30159 0.22695 lineto
0.30655 0.22555 lineto
0.30903 0.22497 lineto
0.31151 0.22447 lineto
0.31399 0.22405 lineto
0.31647 0.22371 lineto
0.31771 0.22357 lineto
0.31895 0.22345 lineto
0.32019 0.22335 lineto
0.32143 0.22328 lineto
0.32267 0.22322 lineto
0.32391 0.22318 lineto
0.32515 0.22317 lineto
0.32639 0.22318 lineto
0.32763 0.2232 lineto
0.32887 0.22325 lineto
0.33011 0.22332 lineto
0.33135 0.22341 lineto
0.33383 0.22365 lineto
0.33631 0.22397 lineto
0.33879 0.22437 lineto
0.34127 0.22485 lineto
0.35119 0.22755 lineto
0.35615 0.22934 lineto
0.36111 0.2314 lineto
0.38095 0.24202 lineto
0.42063 0.26981 lineto
0.44048 0.28374 lineto
0.46032 0.29564 lineto
0.47024 0.30044 lineto
0.48016 0.30432 lineto
0.48512 0.30589 lineto
0.49008 0.30719 lineto
0.49504 0.30824 lineto
0.49752 0.30866 lineto
0.5 0.30902 lineto
0.50248 0.30931 lineto
0.50496 0.30953 lineto
0.5062 0.30961 lineto
0.50744 0.30968 lineto
0.50868 0.30973 lineto
0.50992 0.30977 lineto
Mistroke
0.51116 0.30979 lineto
0.5124 0.30979 lineto
0.51364 0.30978 lineto
0.51488 0.30975 lineto
0.51612 0.3097 lineto
0.51736 0.30964 lineto
0.5186 0.30956 lineto
0.51984 0.30947 lineto
0.5248 0.30894 lineto
0.52728 0.30858 lineto
0.52976 0.30816 lineto
0.53968 0.30594 lineto
0.5496 0.3029 lineto
0.55952 0.29919 lineto
0.57937 0.29041 lineto
0.59921 0.28111 lineto
0.61905 0.27292 lineto
0.62897 0.26976 lineto
0.63393 0.26849 lineto
0.63889 0.26745 lineto
0.64385 0.26668 lineto
0.64633 0.26639 lineto
0.64757 0.26627 lineto
0.64881 0.26618 lineto
0.65005 0.26609 lineto
0.65129 0.26603 lineto
0.65253 0.26599 lineto
0.65377 0.26596 lineto
0.65501 0.26596 lineto
0.65625 0.26597 lineto
0.65749 0.266 lineto
0.65873 0.26605 lineto
0.65997 0.26612 lineto
0.66121 0.26622 lineto
0.66369 0.26646 lineto
0.66617 0.26678 lineto
0.66865 0.26718 lineto
0.67361 0.26824 lineto
0.67857 0.26963 lineto
0.68849 0.2734 lineto
0.69841 0.27845 lineto
0.71825 0.29203 lineto
0.7381 0.30902 lineto
0.75794 0.32723 lineto
0.77778 0.3438 lineto
0.7877 0.35046 lineto
0.79762 0.35548 lineto
0.8001 0.35644 lineto
0.80258 0.35726 lineto
0.80506 0.35794 lineto
Mistroke
0.80754 0.35848 lineto
0.80878 0.35869 lineto
0.81002 0.35887 lineto
0.81126 0.35901 lineto
0.8125 0.35911 lineto
0.81374 0.35917 lineto
0.81498 0.35919 lineto
0.81622 0.35917 lineto
0.81746 0.35911 lineto
0.8187 0.35901 lineto
0.81994 0.35887 lineto
0.82242 0.35846 lineto
0.8249 0.35788 lineto
0.82738 0.35712 lineto
0.83234 0.35509 lineto
0.8373 0.35236 lineto
0.84722 0.34483 lineto
0.85714 0.33473 lineto
0.87698 0.30886 lineto
0.8869 0.29492 lineto
0.89683 0.28222 lineto
0.90179 0.27694 lineto
0.90427 0.2747 lineto
0.90675 0.27278 lineto
0.90923 0.27122 lineto
0.91047 0.27059 lineto
0.91171 0.27007 lineto
0.91295 0.26967 lineto
0.91419 0.26939 lineto
0.91543 0.26924 lineto
0.91667 0.26922 lineto
0.91791 0.26935 lineto
0.91915 0.26962 lineto
0.92039 0.27006 lineto
0.92163 0.27066 lineto
0.92287 0.27143 lineto
0.92411 0.27238 lineto
0.92659 0.27486 lineto
0.92907 0.27817 lineto
0.93155 0.28237 lineto
0.93651 0.29378 lineto
0.94147 0.30975 lineto
0.94643 0.33098 lineto
0.95139 0.35826 lineto
0.95635 0.39244 lineto
0.96131 0.43446 lineto
0.96627 0.48532 lineto
0.97619 0.61803 lineto
Mfstroke
grestore
grestore
% End of Graphics
MathPictureEnd%%PSTrailer
end

%%EPS Trailer
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
300 execuserobject setfont
0 setgray
77 650 1.677616e+07 12 rectclip
77 650 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) Out[10]=) show
grestore
gsave
96 664 425 12 rectclip
32 execuserobject setfont
0 0 0 setrgbcolor
96 672 moveto
(-Graphics-) show
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 684 460 14 rectclip
gsave
297 execuserobject setfont
0 setgray
61 684 1.677618e+07 14 rectclip
61 684 translate
1 1 1 setrgbcolor
0 0 459 14 rectfill
299 execuserobject setfont
0 setgray
2 11 moveto (And now, one cycle of a wave created by it:) show
grestore
grestore
grestore
gsave
54 29 467 14 rectclip
gsave
299 execuserobject setfont
0 setgray
54 29 467 14 rectclip
54 29 translate
299 execuserobject setfont
0 setgray
2 11 moveto (WaveShaping.math.ma) show
grestore
grestore
0.5 setlinewidth
521 43 moveto
54 43 lineto
stroke
1 setlinewidth
1 setlinewidth 0 setgray
gsave
54 29 467 14 rectclip
gsave
299 execuserobject setfont
0 setgray
54 29 467 14 rectclip
54 29 translate
299 execuserobject setfont
0 setgray
459 11 moveto (4) show
grestore
grestore
0.5 setlinewidth
521 43 moveto
54 43 lineto
stroke
1 setlinewidth
1 setlinewidth 0 setgray
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Courier-Bold
%%+ Courier
%%+ Times-Italic
%%+ Times-Roman

%%Page: 5 5
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 9972 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
[1 0 0 -1 -19 10581] concat
19 9789 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
299
exch
defineuserobject
299 execuserobject setfont
0 setgray
77 76 1.677616e+07 12 rectclip
77 76 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
/Times-Italic findfont 10 scalefont [1 0 0 -1 0 0] makefont
297
exch
defineuserobject
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) In[11]:=) show
grestore
gsave
96 90 425 13 rectclip
gsave
297 execuserobject setfont
0 setgray
96 90 1.677614e+07 13 rectclip
96 90 translate
1 1 1 setrgbcolor
0 0 425 13 rectfill
/Courier-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
300
exch
defineuserobject
300 execuserobject setfont
0 setgray
2 10 moveto (Plot[cheby3[Cos[time]],{time,0,2*Pi},PlotRange->{-1,1}]) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
95 111 282 174 rectclip
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		95.000000 def
/Mbottom	285.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
%!
%%Creator: Mathematica
%%AspectRatio: 0.61803 
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.151576 0.309017 0.309017 [
[(1)] 0.17539 0.30902 0 2 Msboxa
[(2)] 0.32696 0.30902 0 2 Msboxa
[(3)] 0.47854 0.30902 0 2 Msboxa
[(4)] 0.63011 0.30902 0 2 Msboxa
[(5)] 0.78169 0.30902 0 2 Msboxa
[(6)] 0.93327 0.30902 0 2 Msboxa
[(-1)] 0.01131 0 1 0 Msboxa
[(-0.75)] 0.01131 0.07725 1 0 Msboxa
[(-0.5)] 0.01131 0.15451 1 0 Msboxa
[(-0.25)] 0.01131 0.23176 1 0 Msboxa
[(0.25)] 0.01131 0.38627 1 0 Msboxa
[(0.5)] 0.01131 0.46353 1 0 Msboxa
[(0.75)] 0.01131 0.54078 1 0 Msboxa
[(1)] 0.01131 0.61803 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.17539 0.30902 moveto
0.17539 0.31527 lineto
stroke
grestore
[(1)] 0.17539 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.32696 0.30902 moveto
0.32696 0.31527 lineto
stroke
grestore
[(2)] 0.32696 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.47854 0.30902 moveto
0.47854 0.31527 lineto
stroke
grestore
[(3)] 0.47854 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.63011 0.30902 moveto
0.63011 0.31527 lineto
stroke
grestore
[(4)] 0.63011 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.78169 0.30902 moveto
0.78169 0.31527 lineto
stroke
grestore
[(5)] 0.78169 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.93327 0.30902 moveto
0.93327 0.31527 lineto
stroke
grestore
[(6)] 0.93327 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.05412 0.30902 moveto
0.05412 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08444 0.30902 moveto
0.08444 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11476 0.30902 moveto
0.11476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14507 0.30902 moveto
0.14507 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2057 0.30902 moveto
0.2057 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23602 0.30902 moveto
0.23602 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26633 0.30902 moveto
0.26633 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29665 0.30902 moveto
0.29665 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35728 0.30902 moveto
0.35728 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38759 0.30902 moveto
0.38759 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41791 0.30902 moveto
0.41791 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44822 0.30902 moveto
0.44822 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50885 0.30902 moveto
0.50885 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53917 0.30902 moveto
0.53917 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56948 0.30902 moveto
0.56948 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5998 0.30902 moveto
0.5998 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.66043 0.30902 moveto
0.66043 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69074 0.30902 moveto
0.69074 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72106 0.30902 moveto
0.72106 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75137 0.30902 moveto
0.75137 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81201 0.30902 moveto
0.81201 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84232 0.30902 moveto
0.84232 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87264 0.30902 moveto
0.87264 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90295 0.30902 moveto
0.90295 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.96358 0.30902 moveto
0.96358 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9939 0.30902 moveto
0.9939 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.03006 0 lineto
stroke
grestore
[(-1)] 0.01131 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.07725 moveto
0.03006 0.07725 lineto
stroke
grestore
[(-0.75)] 0.01131 0.07725 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.15451 moveto
0.03006 0.15451 lineto
stroke
grestore
[(-0.5)] 0.01131 0.15451 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.23176 moveto
0.03006 0.23176 lineto
stroke
grestore
[(-0.25)] 0.01131 0.23176 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.38627 moveto
0.03006 0.38627 lineto
stroke
grestore
[(0.25)] 0.01131 0.38627 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.46353 moveto
0.03006 0.46353 lineto
stroke
grestore
[(0.5)] 0.01131 0.46353 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.54078 moveto
0.03006 0.54078 lineto
stroke
grestore
[(0.75)] 0.01131 0.54078 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.61803 moveto
0.03006 0.61803 lineto
stroke
grestore
[(1)] 0.01131 0.61803 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.01545 moveto
0.02756 0.01545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0309 moveto
0.02756 0.0309 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.04635 moveto
0.02756 0.04635 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0618 moveto
0.02756 0.0618 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.09271 moveto
0.02756 0.09271 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.10816 moveto
0.02756 0.10816 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.12361 moveto
0.02756 0.12361 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13906 moveto
0.02756 0.13906 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.16996 moveto
0.02756 0.16996 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.18541 moveto
0.02756 0.18541 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.20086 moveto
0.02756 0.20086 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.21631 moveto
0.02756 0.21631 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.24721 moveto
0.02756 0.24721 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26266 moveto
0.02756 0.26266 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.27812 moveto
0.02756 0.27812 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.29357 moveto
0.02756 0.29357 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.32447 moveto
0.02756 0.32447 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33992 moveto
0.02756 0.33992 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35537 moveto
0.02756 0.35537 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.37082 moveto
0.02756 0.37082 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.40172 moveto
0.02756 0.40172 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.41717 moveto
0.02756 0.41717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.43262 moveto
0.02756 0.43262 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44807 moveto
0.02756 0.44807 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.47898 moveto
0.02756 0.47898 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.49443 moveto
0.02756 0.49443 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50988 moveto
0.02756 0.50988 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.52533 moveto
0.02756 0.52533 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.55623 moveto
0.02756 0.55623 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.57168 moveto
0.02756 0.57168 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.58713 moveto
0.02756 0.58713 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.60258 moveto
0.02756 0.60258 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.61803 moveto
0.06349 0.42224 lineto
0.07341 0.35539 lineto
0.07837 0.32736 lineto
0.08333 0.30431 lineto
0.08829 0.28691 lineto
0.09077 0.28043 lineto
0.09201 0.27776 lineto
0.09325 0.27545 lineto
0.09449 0.27352 lineto
0.09573 0.27195 lineto
0.09697 0.27074 lineto
0.09821 0.26989 lineto
0.09945 0.26938 lineto
0.10069 0.26921 lineto
0.10193 0.26937 lineto
0.10317 0.26984 lineto
0.10441 0.27061 lineto
0.10565 0.27167 lineto
0.10689 0.273 lineto
0.10813 0.2746 lineto
0.1131 0.28326 lineto
0.12302 0.30772 lineto
0.13294 0.33372 lineto
0.1379 0.34453 lineto
0.14038 0.349 lineto
0.14286 0.35272 lineto
0.14534 0.35564 lineto
0.14658 0.35678 lineto
0.14782 0.3577 lineto
0.14906 0.35841 lineto
0.1503 0.35889 lineto
0.15154 0.35914 lineto
0.15278 0.35918 lineto
0.15402 0.35899 lineto
0.15526 0.35858 lineto
0.1565 0.35795 lineto
0.15774 0.35711 lineto
0.15898 0.35606 lineto
0.16022 0.35481 lineto
0.1627 0.35172 lineto
0.16766 0.3435 lineto
0.17262 0.3331 lineto
0.18254 0.30902 lineto
0.1875 0.29708 lineto
0.19246 0.28631 lineto
0.19742 0.2774 lineto
0.1999 0.27381 lineto
0.20238 0.27086 lineto
0.20362 0.26965 lineto
Mistroke
0.20486 0.2686 lineto
0.2061 0.26772 lineto
0.20734 0.26703 lineto
0.20858 0.2665 lineto
0.20982 0.26616 lineto
0.21106 0.26598 lineto
0.2123 0.26597 lineto
0.21354 0.26614 lineto
0.21478 0.26646 lineto
0.21602 0.26694 lineto
0.21726 0.26758 lineto
0.21974 0.26927 lineto
0.22222 0.27149 lineto
0.23214 0.28403 lineto
0.2371 0.29125 lineto
0.24206 0.29811 lineto
0.24454 0.30117 lineto
0.24702 0.30387 lineto
0.2495 0.30614 lineto
0.25074 0.30709 lineto
0.25198 0.30791 lineto
0.25322 0.30858 lineto
0.25446 0.30912 lineto
0.2557 0.3095 lineto
0.25694 0.30972 lineto
0.25818 0.30979 lineto
0.25942 0.3097 lineto
0.26066 0.30944 lineto
0.2619 0.30902 lineto
0.26438 0.30768 lineto
0.26562 0.30676 lineto
0.26687 0.30568 lineto
0.27183 0.29982 lineto
0.27679 0.29176 lineto
0.28175 0.28198 lineto
0.29167 0.25991 lineto
0.29663 0.24912 lineto
0.30159 0.2395 lineto
0.30407 0.23533 lineto
0.30655 0.2317 lineto
0.30903 0.22865 lineto
0.31151 0.22624 lineto
0.31275 0.22529 lineto
0.31399 0.22451 lineto
0.31523 0.22391 lineto
0.31647 0.22349 lineto
0.31771 0.22324 lineto
0.31895 0.22317 lineto
0.32019 0.22328 lineto
0.32143 0.22356 lineto
Mistroke
0.32267 0.22402 lineto
0.32391 0.22464 lineto
0.32515 0.22543 lineto
0.32639 0.22638 lineto
0.33135 0.23164 lineto
0.33631 0.23881 lineto
0.34127 0.24721 lineto
0.35119 0.26443 lineto
0.35367 0.26818 lineto
0.35615 0.2715 lineto
0.35863 0.2743 lineto
0.35987 0.27547 lineto
0.36111 0.27648 lineto
0.36235 0.27731 lineto
0.36359 0.27796 lineto
0.36483 0.27843 lineto
0.36607 0.27869 lineto
0.36731 0.27875 lineto
0.36855 0.27861 lineto
0.36979 0.27825 lineto
0.37103 0.27768 lineto
0.37227 0.27689 lineto
0.37351 0.27588 lineto
0.37599 0.27321 lineto
0.37847 0.26968 lineto
0.38095 0.26532 lineto
0.39087 0.24079 lineto
0.40079 0.20966 lineto
0.40575 0.19422 lineto
0.41071 0.18048 lineto
0.41319 0.17462 lineto
0.41567 0.16963 lineto
0.41815 0.16565 lineto
0.41939 0.16407 lineto
0.42063 0.16279 lineto
0.42188 0.16182 lineto
0.42312 0.16117 lineto
0.42436 0.16085 lineto
0.4256 0.16088 lineto
0.42684 0.16126 lineto
0.42808 0.162 lineto
0.42932 0.16311 lineto
0.43056 0.16459 lineto
0.43304 0.16869 lineto
0.43552 0.17432 lineto
0.44048 0.19011 lineto
0.44544 0.21167 lineto
0.4504 0.23835 lineto
0.46032 0.30284 lineto
0.47024 0.37285 lineto
Mistroke
0.48016 0.43557 lineto
0.48512 0.46032 lineto
0.4876 0.47046 lineto
0.49008 0.47894 lineto
0.49256 0.48565 lineto
0.4938 0.48831 lineto
0.49504 0.49051 lineto
0.49628 0.49222 lineto
0.49752 0.49344 lineto
0.49876 0.49418 lineto
0.5 0.49443 lineto
0.53968 0.30284 lineto
0.5496 0.23835 lineto
0.55456 0.21167 lineto
0.55952 0.19011 lineto
0.562 0.18147 lineto
0.56448 0.17432 lineto
0.56696 0.16869 lineto
0.5682 0.16645 lineto
0.56944 0.16459 lineto
0.57068 0.16311 lineto
0.57192 0.162 lineto
0.57316 0.16126 lineto
0.5744 0.16088 lineto
0.57564 0.16085 lineto
0.57688 0.16117 lineto
0.57813 0.16182 lineto
0.57937 0.16279 lineto
0.59921 0.20966 lineto
0.60913 0.24079 lineto
0.61409 0.25432 lineto
0.61905 0.26532 lineto
0.62153 0.26968 lineto
0.62401 0.27321 lineto
0.62649 0.27588 lineto
0.62773 0.27689 lineto
0.62897 0.27768 lineto
0.63021 0.27825 lineto
0.63145 0.27861 lineto
0.63269 0.27875 lineto
0.63393 0.27869 lineto
0.63517 0.27843 lineto
0.63641 0.27796 lineto
0.63765 0.27731 lineto
0.63889 0.27648 lineto
0.64137 0.2743 lineto
0.64385 0.2715 lineto
0.64881 0.26443 lineto
0.65873 0.24721 lineto
0.66369 0.23881 lineto
Mistroke
0.66865 0.23164 lineto
0.67113 0.22873 lineto
0.67361 0.22638 lineto
0.67485 0.22543 lineto
0.67609 0.22464 lineto
0.67733 0.22402 lineto
0.67857 0.22356 lineto
0.67981 0.22328 lineto
0.68105 0.22317 lineto
0.68229 0.22324 lineto
0.68353 0.22349 lineto
0.68477 0.22391 lineto
0.68601 0.22451 lineto
0.68849 0.22624 lineto
0.69097 0.22865 lineto
0.69345 0.2317 lineto
0.69841 0.2395 lineto
0.70833 0.25991 lineto
0.71825 0.28198 lineto
0.72321 0.29176 lineto
0.72817 0.29982 lineto
0.73065 0.30305 lineto
0.73313 0.30568 lineto
0.73562 0.30768 lineto
0.73686 0.30843 lineto
0.7381 0.30902 lineto
0.73934 0.30944 lineto
0.74058 0.3097 lineto
0.74182 0.30979 lineto
0.74306 0.30972 lineto
0.7443 0.3095 lineto
0.74554 0.30912 lineto
0.74678 0.30858 lineto
0.74802 0.30791 lineto
0.75794 0.29811 lineto
0.76786 0.28403 lineto
0.77282 0.27719 lineto
0.7753 0.27416 lineto
0.77778 0.27149 lineto
0.78026 0.26927 lineto
0.7815 0.26836 lineto
0.78274 0.26758 lineto
0.78398 0.26694 lineto
0.78522 0.26646 lineto
0.78646 0.26614 lineto
0.7877 0.26597 lineto
0.78894 0.26598 lineto
0.79018 0.26616 lineto
0.79142 0.2665 lineto
0.79266 0.26703 lineto
Mistroke
0.7939 0.26772 lineto
0.79514 0.2686 lineto
0.79762 0.27086 lineto
0.8001 0.27381 lineto
0.80258 0.2774 lineto
0.80754 0.28631 lineto
0.81746 0.30902 lineto
0.82738 0.3331 lineto
0.83234 0.3435 lineto
0.83482 0.34793 lineto
0.8373 0.35172 lineto
0.83978 0.35481 lineto
0.84102 0.35606 lineto
0.84226 0.35711 lineto
0.8435 0.35795 lineto
0.84474 0.35858 lineto
0.84598 0.35899 lineto
0.84722 0.35918 lineto
0.84846 0.35914 lineto
0.8497 0.35889 lineto
0.85094 0.35841 lineto
0.85218 0.3577 lineto
0.85466 0.35564 lineto
0.85714 0.35272 lineto
0.8621 0.34453 lineto
0.86706 0.33372 lineto
0.87698 0.30772 lineto
0.8869 0.28326 lineto
0.88938 0.27851 lineto
0.89187 0.2746 lineto
0.89435 0.27167 lineto
0.89559 0.27061 lineto
0.89683 0.26984 lineto
0.89807 0.26937 lineto
0.89931 0.26921 lineto
0.90055 0.26938 lineto
0.90179 0.26989 lineto
0.90303 0.27074 lineto
0.90427 0.27195 lineto
0.90551 0.27352 lineto
0.90675 0.27545 lineto
0.91171 0.28691 lineto
0.91419 0.29488 lineto
0.91667 0.30431 lineto
0.92659 0.35539 lineto
0.93651 0.42224 lineto
0.97619 0.61803 lineto
Mfstroke
grestore
grestore
% End of Graphics
MathPictureEnd%%PSTrailer
end

%%EPS Trailer
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
300 execuserobject setfont
0 setgray
77 293 1.677616e+07 12 rectclip
77 293 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) Out[11]=) show
grestore
gsave
96 307 425 12 rectclip
/Courier findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
0 0 0 setrgbcolor
96 315 moveto
(-Graphics-) show
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 327 460 28 rectclip
gsave
297 execuserobject setfont
0 setgray
61 327 1.677618e+07 28 rectclip
61 327 translate
1 1 1 setrgbcolor
0 0 459 28 rectfill
299 execuserobject setfont
0 setgray
2 11 moveto (As another option, let us examine adding the 2nd, 4th, 6th, and 8th Chebychev) show
2 25 moveto (polynomials. First, the wavetable:) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
299 execuserobject setfont
0 setgray
77 363 1.677616e+07 12 rectclip
77 363 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) In[12]:=) show
grestore
gsave
96 377 425 13 rectclip
gsave
297 execuserobject setfont
0 setgray
96 377 1.677615e+07 13 rectclip
96 377 translate
1 1 1 setrgbcolor
0 0 425 13 rectfill
300 execuserobject setfont
0 setgray
2 10 moveto (cheby4[x_] := .25*\(2*x^2 -1\) + .25*\(8*x^4 - 8*x^2 +1\) + .25*\(32*x^6 - 48*x^4 +18 x^2 -1\) +.25*\(128*x^8 -256*x^6 +160*x^4 -32*x^2 +1\)) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
300 execuserobject setfont
0 setgray
77 398 1.677616e+07 12 rectclip
77 398 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) In[13]:=) show
grestore
gsave
96 412 425 13 rectclip
gsave
297 execuserobject setfont
0 setgray
96 412 1.677614e+07 13 rectclip
96 412 translate
1 1 1 setrgbcolor
0 0 425 13 rectfill
300 execuserobject setfont
0 setgray
2 10 moveto (Plot[cheby4[x],{x,-1,1},PlotRange->{-1,1}]) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
95 433 282 174 rectclip
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		95.000000 def
/Mbottom	607.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
%!
%%Creator: Mathematica
%%AspectRatio: 0.61803 
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0.309017 0.309017 [
[(-1)] 0.02381 0.30902 0 2 Msboxa
[(-0.5)] 0.2619 0.30902 0 2 Msboxa
[(0.5)] 0.7381 0.30902 0 2 Msboxa
[(1)] 0.97619 0.30902 0 2 Msboxa
[(-1)] 0.4875 0 1 0 Msboxa
[(-0.75)] 0.4875 0.07725 1 0 Msboxa
[(-0.5)] 0.4875 0.15451 1 0 Msboxa
[(-0.25)] 0.4875 0.23176 1 0 Msboxa
[(0.25)] 0.4875 0.38627 1 0 Msboxa
[(0.5)] 0.4875 0.46353 1 0 Msboxa
[(0.75)] 0.4875 0.54078 1 0 Msboxa
[(1)] 0.4875 0.61803 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.02381 0.30902 moveto
0.02381 0.31527 lineto
stroke
grestore
[(-1)] 0.02381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.2619 0.30902 moveto
0.2619 0.31527 lineto
stroke
grestore
[(-0.5)] 0.2619 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.7381 0.30902 moveto
0.7381 0.31527 lineto
stroke
grestore
[(0.5)] 0.7381 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.97619 0.30902 moveto
0.97619 0.31527 lineto
stroke
grestore
[(1)] 0.97619 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.07143 0.30902 moveto
0.07143 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11905 0.30902 moveto
0.11905 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.16667 0.30902 moveto
0.16667 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.21429 0.30902 moveto
0.21429 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.30952 0.30902 moveto
0.30952 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35714 0.30902 moveto
0.35714 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.40476 0.30902 moveto
0.40476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.45238 0.30902 moveto
0.45238 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.54762 0.30902 moveto
0.54762 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.59524 0.30902 moveto
0.59524 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.64286 0.30902 moveto
0.64286 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69048 0.30902 moveto
0.69048 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.78571 0.30902 moveto
0.78571 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.83333 0.30902 moveto
0.83333 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.88095 0.30902 moveto
0.88095 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.92857 0.30902 moveto
0.92857 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.50625 0 lineto
stroke
grestore
[(-1)] 0.4875 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.07725 moveto
0.50625 0.07725 lineto
stroke
grestore
[(-0.75)] 0.4875 0.07725 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.15451 moveto
0.50625 0.15451 lineto
stroke
grestore
[(-0.5)] 0.4875 0.15451 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.23176 moveto
0.50625 0.23176 lineto
stroke
grestore
[(-0.25)] 0.4875 0.23176 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.38627 moveto
0.50625 0.38627 lineto
stroke
grestore
[(0.25)] 0.4875 0.38627 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.46353 moveto
0.50625 0.46353 lineto
stroke
grestore
[(0.5)] 0.4875 0.46353 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.54078 moveto
0.50625 0.54078 lineto
stroke
grestore
[(0.75)] 0.4875 0.54078 1 0 Mshowa
gsave
0.002 setlinewidth
0.5 0.61803 moveto
0.50625 0.61803 lineto
stroke
grestore
[(1)] 0.4875 0.61803 1 0 Mshowa
gsave
0.001 setlinewidth
0.5 0.01545 moveto
0.50375 0.01545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.0309 moveto
0.50375 0.0309 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.04635 moveto
0.50375 0.04635 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.0618 moveto
0.50375 0.0618 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.09271 moveto
0.50375 0.09271 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.10816 moveto
0.50375 0.10816 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.12361 moveto
0.50375 0.12361 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.13906 moveto
0.50375 0.13906 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.16996 moveto
0.50375 0.16996 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.18541 moveto
0.50375 0.18541 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.20086 moveto
0.50375 0.20086 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.21631 moveto
0.50375 0.21631 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.24721 moveto
0.50375 0.24721 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.26266 moveto
0.50375 0.26266 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.27812 moveto
0.50375 0.27812 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.29357 moveto
0.50375 0.29357 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.32447 moveto
0.50375 0.32447 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.33992 moveto
0.50375 0.33992 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.35537 moveto
0.50375 0.35537 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.37082 moveto
0.50375 0.37082 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.40172 moveto
0.50375 0.40172 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.41717 moveto
0.50375 0.41717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.43262 moveto
0.50375 0.43262 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.44807 moveto
0.50375 0.44807 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.47898 moveto
0.50375 0.47898 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.49443 moveto
0.50375 0.49443 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.50988 moveto
0.50375 0.50988 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.52533 moveto
0.50375 0.52533 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.55623 moveto
0.50375 0.55623 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.57168 moveto
0.50375 0.57168 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.58713 moveto
0.50375 0.58713 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5 0.60258 moveto
0.50375 0.60258 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.5 0 moveto
0.5 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.61803 moveto
0.02877 0.52894 lineto
0.03373 0.45375 lineto
0.03869 0.39098 lineto
0.04365 0.33926 lineto
0.04861 0.29734 lineto
0.05357 0.26404 lineto
0.05853 0.23831 lineto
0.06101 0.22797 lineto
0.06349 0.21916 lineto
0.06845 0.2057 lineto
0.07093 0.20085 lineto
0.07341 0.19711 lineto
0.07589 0.19442 lineto
0.07713 0.19343 lineto
0.07837 0.19266 lineto
0.07961 0.19212 lineto
0.08085 0.19178 lineto
0.08209 0.19163 lineto
0.08333 0.19167 lineto
0.08457 0.1919 lineto
0.08581 0.19229 lineto
0.08705 0.19284 lineto
0.08829 0.19354 lineto
0.09077 0.19538 lineto
0.09325 0.19773 lineto
0.09821 0.20374 lineto
0.10317 0.21114 lineto
0.12302 0.24766 lineto
0.14286 0.28322 lineto
0.15278 0.29745 lineto
0.1627 0.30847 lineto
0.16766 0.31269 lineto
0.17262 0.31604 lineto
0.17758 0.31851 lineto
0.18006 0.31943 lineto
0.18254 0.32013 lineto
0.18378 0.32041 lineto
0.18502 0.32063 lineto
0.18626 0.32081 lineto
0.1875 0.32093 lineto
0.18874 0.32101 lineto
0.18998 0.32104 lineto
0.19122 0.32102 lineto
0.19246 0.32095 lineto
0.1937 0.32084 lineto
0.19494 0.32068 lineto
0.19742 0.32023 lineto
0.1999 0.3196 lineto
0.20238 0.31882 lineto
Mistroke
0.20734 0.31677 lineto
0.2123 0.31415 lineto
0.22222 0.30744 lineto
0.2619 0.27039 lineto
0.28175 0.25238 lineto
0.29167 0.24484 lineto
0.30159 0.23862 lineto
0.30655 0.23607 lineto
0.31151 0.23391 lineto
0.31647 0.23216 lineto
0.32143 0.23081 lineto
0.32391 0.23029 lineto
0.32639 0.22988 lineto
0.32887 0.22957 lineto
0.33011 0.22946 lineto
0.33135 0.22937 lineto
0.33259 0.2293 lineto
0.33383 0.22926 lineto
0.33507 0.22925 lineto
0.33631 0.22926 lineto
0.33755 0.2293 lineto
0.33879 0.22936 lineto
0.34003 0.22945 lineto
0.34127 0.22956 lineto
0.34375 0.22986 lineto
0.34623 0.23025 lineto
0.35119 0.23132 lineto
0.35615 0.23276 lineto
0.36111 0.23453 lineto
0.38095 0.24459 lineto
0.42063 0.27289 lineto
0.44048 0.28707 lineto
0.4504 0.29332 lineto
0.46032 0.29873 lineto
0.47024 0.30312 lineto
0.4752 0.30489 lineto
0.48016 0.30636 lineto
0.48512 0.30752 lineto
0.4876 0.30797 lineto
0.49008 0.30835 lineto
0.49256 0.30864 lineto
0.4938 0.30876 lineto
0.49504 0.30885 lineto
0.49628 0.30892 lineto
0.49752 0.30898 lineto
0.49876 0.30901 lineto
0.5 0.30902 lineto
0.50124 0.30901 lineto
0.50248 0.30898 lineto
0.50372 0.30892 lineto
Mistroke
0.50496 0.30885 lineto
0.5062 0.30876 lineto
0.50744 0.30864 lineto
0.50992 0.30835 lineto
0.5124 0.30797 lineto
0.51488 0.30752 lineto
0.51984 0.30636 lineto
0.52976 0.30312 lineto
0.53968 0.29873 lineto
0.55952 0.28707 lineto
0.57937 0.27289 lineto
0.59921 0.25804 lineto
0.61905 0.24459 lineto
0.62897 0.23902 lineto
0.63889 0.23453 lineto
0.64385 0.23276 lineto
0.64881 0.23132 lineto
0.65129 0.23074 lineto
0.65377 0.23025 lineto
0.65625 0.22986 lineto
0.65749 0.2297 lineto
0.65873 0.22956 lineto
0.65997 0.22945 lineto
0.66121 0.22936 lineto
0.66245 0.2293 lineto
0.66369 0.22926 lineto
0.66493 0.22925 lineto
0.66617 0.22926 lineto
0.66741 0.2293 lineto
0.66865 0.22937 lineto
0.67113 0.22957 lineto
0.67237 0.22971 lineto
0.67361 0.22988 lineto
0.67857 0.23081 lineto
0.68105 0.23143 lineto
0.68353 0.23216 lineto
0.68849 0.23391 lineto
0.69841 0.23862 lineto
0.70833 0.24484 lineto
0.71825 0.25238 lineto
0.7381 0.27039 lineto
0.75794 0.28994 lineto
0.76786 0.29919 lineto
0.77778 0.30744 lineto
0.78274 0.31102 lineto
0.7877 0.31415 lineto
0.79266 0.31677 lineto
0.79762 0.31882 lineto
0.8001 0.3196 lineto
0.80258 0.32023 lineto
Mistroke
0.80506 0.32068 lineto
0.8063 0.32084 lineto
0.80754 0.32095 lineto
0.80878 0.32102 lineto
0.81002 0.32104 lineto
0.81126 0.32101 lineto
0.8125 0.32093 lineto
0.81374 0.32081 lineto
0.81498 0.32063 lineto
0.81746 0.32013 lineto
0.81994 0.31943 lineto
0.82242 0.31851 lineto
0.82738 0.31604 lineto
0.83234 0.31269 lineto
0.8373 0.30847 lineto
0.84722 0.29745 lineto
0.85714 0.28322 lineto
0.87698 0.24766 lineto
0.8869 0.22863 lineto
0.89683 0.21114 lineto
0.90179 0.20374 lineto
0.90427 0.20053 lineto
0.90675 0.19773 lineto
0.90923 0.19538 lineto
0.91171 0.19354 lineto
0.91295 0.19284 lineto
0.91419 0.19229 lineto
0.91543 0.1919 lineto
0.91667 0.19167 lineto
0.91791 0.19163 lineto
0.91915 0.19178 lineto
0.92039 0.19212 lineto
0.92163 0.19266 lineto
0.92287 0.19343 lineto
0.92411 0.19442 lineto
0.92659 0.19711 lineto
0.92907 0.20085 lineto
0.93155 0.2057 lineto
0.93403 0.21177 lineto
0.93651 0.21916 lineto
0.94147 0.23831 lineto
0.94643 0.26404 lineto
0.95139 0.29734 lineto
0.95635 0.33926 lineto
0.96131 0.39098 lineto
0.96627 0.45375 lineto
0.97619 0.61803 lineto
Mfstroke
grestore
grestore
% End of Graphics
MathPictureEnd%%PSTrailer
end

%%EPS Trailer
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
300 execuserobject setfont
0 setgray
77 615 1.677616e+07 12 rectclip
77 615 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) Out[13]=) show
grestore
gsave
96 629 425 12 rectclip
32 execuserobject setfont
0 0 0 setrgbcolor
96 637 moveto
(-Graphics-) show
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 649 460 28 rectclip
gsave
297 execuserobject setfont
0 setgray
61 649 1.677618e+07 28 rectclip
61 649 translate
1 1 1 setrgbcolor
0 0 459 28 rectfill
299 execuserobject setfont
0 setgray
2 11 moveto (As can bee seen, and/or proven mathematically, wavetables consisting of purely even) show
2 25 moveto (harmonics \(polynomials\) will be symetrical about the y axis.) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 685 460 14 rectclip
gsave
299 execuserobject setfont
0 setgray
61 685 1.677618e+07 14 rectclip
61 685 translate
1 1 1 setrgbcolor
0 0 459 14 rectfill
299 execuserobject setfont
0 setgray
2 11 moveto (And, the waveform that feeding a sine wave into it results in:) show
grestore
grestore
grestore
gsave
54 29 467 14 rectclip
gsave
299 execuserobject setfont
0 setgray
54 29 467 14 rectclip
54 29 translate
299 execuserobject setfont
0 setgray
2 11 moveto (WaveShaping.math.ma) show
grestore
grestore
0.5 setlinewidth
521 43 moveto
54 43 lineto
stroke
1 setlinewidth
1 setlinewidth 0 setgray
gsave
54 29 467 14 rectclip
gsave
299 execuserobject setfont
0 setgray
54 29 467 14 rectclip
54 29 translate
299 execuserobject setfont
0 setgray
459 11 moveto (5) show
grestore
grestore
0.5 setlinewidth
521 43 moveto
54 43 lineto
stroke
1 setlinewidth
1 setlinewidth 0 setgray
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Courier-Bold
%%+ Courier
%%+ Times-Italic
%%+ Times-Roman

%%Page: 6 6
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 9972 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
[1 0 0 -1 -19 10581] concat
19 9789 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
299
exch
defineuserobject
299 execuserobject setfont
0 setgray
77 76 1.677616e+07 12 rectclip
77 76 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
/Times-Italic findfont 10 scalefont [1 0 0 -1 0 0] makefont
297
exch
defineuserobject
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) In[14]:=) show
grestore
gsave
96 90 425 13 rectclip
gsave
297 execuserobject setfont
0 setgray
96 90 1.677614e+07 13 rectclip
96 90 translate
1 1 1 setrgbcolor
0 0 425 13 rectfill
/Courier-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
300
exch
defineuserobject
300 execuserobject setfont
0 setgray
2 10 moveto (Plot[cheby4[Cos[time]],{time,0,2*Pi},PlotRange->{-1,1}]) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
95 111 282 174 rectclip
/Mnodistort true def
100 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	1 -1 scale
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        8 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        10 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/Msaveaa exch def
	/Msavebb exch def
	/Msavecc exch def
	/Msavedd exch def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabswid {
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	mul
	setlinewidth
} bind def
/Mabsdash {
	exch
	Mimatrix
	0 get
	Mgmatrix
	0 get
	div
	[
	3 1 roll
	exch
	{
	exch
	dup
	3 -1 roll
	mul
	exch
	}
	forall
	pop ]
	exch
	setdash
} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
 pop pop
 5 -1 roll
 mul
 4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse

/Mleft		95.000000 def
/Mbottom	285.000000 def
/Mwidth		282.000000 def
/Mheight	174.000000 def
/Mfontsize 12 def
/Plain /Courier findfont def
%!
%%Creator: Mathematica
%%AspectRatio: 0.61803 
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.151576 0.309017 0.309017 [
[(1)] 0.17539 0.30902 0 2 Msboxa
[(2)] 0.32696 0.30902 0 2 Msboxa
[(3)] 0.47854 0.30902 0 2 Msboxa
[(4)] 0.63011 0.30902 0 2 Msboxa
[(5)] 0.78169 0.30902 0 2 Msboxa
[(6)] 0.93327 0.30902 0 2 Msboxa
[(-1)] 0.01131 0 1 0 Msboxa
[(-0.75)] 0.01131 0.07725 1 0 Msboxa
[(-0.5)] 0.01131 0.15451 1 0 Msboxa
[(-0.25)] 0.01131 0.23176 1 0 Msboxa
[(0.25)] 0.01131 0.38627 1 0 Msboxa
[(0.5)] 0.01131 0.46353 1 0 Msboxa
[(0.75)] 0.01131 0.54078 1 0 Msboxa
[(1)] 0.01131 0.61803 1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0.17539 0.30902 moveto
0.17539 0.31527 lineto
stroke
grestore
[(1)] 0.17539 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.32696 0.30902 moveto
0.32696 0.31527 lineto
stroke
grestore
[(2)] 0.32696 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.47854 0.30902 moveto
0.47854 0.31527 lineto
stroke
grestore
[(3)] 0.47854 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.63011 0.30902 moveto
0.63011 0.31527 lineto
stroke
grestore
[(4)] 0.63011 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.78169 0.30902 moveto
0.78169 0.31527 lineto
stroke
grestore
[(5)] 0.78169 0.30902 0 2 Mshowa
gsave
0.002 setlinewidth
0.93327 0.30902 moveto
0.93327 0.31527 lineto
stroke
grestore
[(6)] 0.93327 0.30902 0 2 Mshowa
gsave
0.001 setlinewidth
0.05412 0.30902 moveto
0.05412 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.08444 0.30902 moveto
0.08444 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.11476 0.30902 moveto
0.11476 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.14507 0.30902 moveto
0.14507 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.2057 0.30902 moveto
0.2057 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.23602 0.30902 moveto
0.23602 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.26633 0.30902 moveto
0.26633 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.29665 0.30902 moveto
0.29665 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.35728 0.30902 moveto
0.35728 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.38759 0.30902 moveto
0.38759 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.41791 0.30902 moveto
0.41791 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.44822 0.30902 moveto
0.44822 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.50885 0.30902 moveto
0.50885 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.53917 0.30902 moveto
0.53917 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.56948 0.30902 moveto
0.56948 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.5998 0.30902 moveto
0.5998 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.66043 0.30902 moveto
0.66043 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.69074 0.30902 moveto
0.69074 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.72106 0.30902 moveto
0.72106 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.75137 0.30902 moveto
0.75137 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.81201 0.30902 moveto
0.81201 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.84232 0.30902 moveto
0.84232 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.87264 0.30902 moveto
0.87264 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.90295 0.30902 moveto
0.90295 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.96358 0.30902 moveto
0.96358 0.31277 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.9939 0.30902 moveto
0.9939 0.31277 lineto
stroke
grestore
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.03006 0 lineto
stroke
grestore
[(-1)] 0.01131 0 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.07725 moveto
0.03006 0.07725 lineto
stroke
grestore
[(-0.75)] 0.01131 0.07725 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.15451 moveto
0.03006 0.15451 lineto
stroke
grestore
[(-0.5)] 0.01131 0.15451 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.23176 moveto
0.03006 0.23176 lineto
stroke
grestore
[(-0.25)] 0.01131 0.23176 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.38627 moveto
0.03006 0.38627 lineto
stroke
grestore
[(0.25)] 0.01131 0.38627 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.46353 moveto
0.03006 0.46353 lineto
stroke
grestore
[(0.5)] 0.01131 0.46353 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.54078 moveto
0.03006 0.54078 lineto
stroke
grestore
[(0.75)] 0.01131 0.54078 1 0 Mshowa
gsave
0.002 setlinewidth
0.02381 0.61803 moveto
0.03006 0.61803 lineto
stroke
grestore
[(1)] 0.01131 0.61803 1 0 Mshowa
gsave
0.001 setlinewidth
0.02381 0.01545 moveto
0.02756 0.01545 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0309 moveto
0.02756 0.0309 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.04635 moveto
0.02756 0.04635 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.0618 moveto
0.02756 0.0618 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.09271 moveto
0.02756 0.09271 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.10816 moveto
0.02756 0.10816 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.12361 moveto
0.02756 0.12361 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.13906 moveto
0.02756 0.13906 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.16996 moveto
0.02756 0.16996 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.18541 moveto
0.02756 0.18541 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.20086 moveto
0.02756 0.20086 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.21631 moveto
0.02756 0.21631 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.24721 moveto
0.02756 0.24721 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.26266 moveto
0.02756 0.26266 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.27812 moveto
0.02756 0.27812 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.29357 moveto
0.02756 0.29357 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.32447 moveto
0.02756 0.32447 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.33992 moveto
0.02756 0.33992 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.35537 moveto
0.02756 0.35537 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.37082 moveto
0.02756 0.37082 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.40172 moveto
0.02756 0.40172 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.41717 moveto
0.02756 0.41717 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.43262 moveto
0.02756 0.43262 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.44807 moveto
0.02756 0.44807 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.47898 moveto
0.02756 0.47898 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.49443 moveto
0.02756 0.49443 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.50988 moveto
0.02756 0.50988 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.52533 moveto
0.02756 0.52533 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.55623 moveto
0.02756 0.55623 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.57168 moveto
0.02756 0.57168 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.58713 moveto
0.02756 0.58713 lineto
stroke
grestore
gsave
0.001 setlinewidth
0.02381 0.60258 moveto
0.02756 0.60258 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
0.004 setlinewidth
0.02381 0.61803 moveto
0.06349 0.37592 lineto
0.07341 0.29383 lineto
0.07837 0.25964 lineto
0.08333 0.23176 lineto
0.08829 0.21101 lineto
0.09077 0.20345 lineto
0.09201 0.20038 lineto
0.09325 0.19777 lineto
0.09449 0.19564 lineto
0.09573 0.19397 lineto
0.09697 0.19275 lineto
0.09821 0.19198 lineto
0.09945 0.19164 lineto
0.10069 0.19173 lineto
0.10193 0.19223 lineto
0.10317 0.19314 lineto
0.10565 0.19607 lineto
0.10689 0.19807 lineto
0.10813 0.20039 lineto
0.1131 0.21258 lineto
0.12302 0.24611 lineto
0.13294 0.28182 lineto
0.1379 0.29703 lineto
0.14038 0.30348 lineto
0.14286 0.30902 lineto
0.14534 0.31357 lineto
0.14658 0.31545 lineto
0.14782 0.31706 lineto
0.14906 0.31841 lineto
0.1503 0.31947 lineto
0.15154 0.32027 lineto
0.15278 0.32078 lineto
0.15402 0.32102 lineto
0.15526 0.32099 lineto
0.1565 0.32068 lineto
0.15774 0.32012 lineto
0.15898 0.3193 lineto
0.16022 0.31823 lineto
0.1627 0.31537 lineto
0.16518 0.31164 lineto
0.16766 0.30712 lineto
0.17262 0.2962 lineto
0.18254 0.27039 lineto
0.1875 0.25768 lineto
0.19246 0.24646 lineto
0.19494 0.24169 lineto
0.19742 0.23761 lineto
0.1999 0.23428 lineto
0.20114 0.23292 lineto
Mistroke
0.20238 0.23176 lineto
0.20362 0.23082 lineto
0.20486 0.2301 lineto
0.2061 0.2296 lineto
0.20734 0.22932 lineto
0.20858 0.22926 lineto
0.20982 0.22941 lineto
0.21106 0.22979 lineto
0.2123 0.23038 lineto
0.21354 0.23118 lineto
0.21478 0.23219 lineto
0.21726 0.23479 lineto
0.22222 0.24211 lineto
0.23214 0.26271 lineto
0.24206 0.2853 lineto
0.24702 0.29501 lineto
0.25198 0.30258 lineto
0.25446 0.30535 lineto
0.2557 0.30646 lineto
0.25694 0.30737 lineto
0.25818 0.30809 lineto
0.25942 0.3086 lineto
0.26066 0.30891 lineto
0.2619 0.30902 lineto
0.26314 0.30891 lineto
0.26438 0.3086 lineto
0.26562 0.30809 lineto
0.26687 0.30737 lineto
0.26935 0.30535 lineto
0.27183 0.30258 lineto
0.27679 0.29501 lineto
0.28175 0.2853 lineto
0.29167 0.26271 lineto
0.29663 0.25169 lineto
0.30159 0.24211 lineto
0.30407 0.23812 lineto
0.30655 0.23479 lineto
0.30903 0.23219 lineto
0.31027 0.23118 lineto
0.31151 0.23038 lineto
0.31275 0.22979 lineto
0.31399 0.22941 lineto
0.31523 0.22926 lineto
0.31647 0.22932 lineto
0.31771 0.2296 lineto
0.31895 0.2301 lineto
0.32019 0.23082 lineto
0.32143 0.23176 lineto
0.32391 0.23428 lineto
0.32639 0.23761 lineto
Mistroke
0.33135 0.24646 lineto
0.34127 0.27039 lineto
0.35119 0.2962 lineto
0.35615 0.30712 lineto
0.35863 0.31164 lineto
0.36111 0.31537 lineto
0.36235 0.31691 lineto
0.36359 0.31823 lineto
0.36483 0.3193 lineto
0.36607 0.32012 lineto
0.36731 0.32068 lineto
0.36855 0.32099 lineto
0.36979 0.32102 lineto
0.37103 0.32078 lineto
0.37227 0.32027 lineto
0.37351 0.31947 lineto
0.37599 0.31706 lineto
0.37723 0.31545 lineto
0.37847 0.31357 lineto
0.38095 0.30902 lineto
0.38591 0.29703 lineto
0.39087 0.28182 lineto
0.40079 0.24611 lineto
0.40575 0.22832 lineto
0.41071 0.21258 lineto
0.41319 0.20595 lineto
0.41567 0.20039 lineto
0.41815 0.19607 lineto
0.41939 0.19442 lineto
0.42063 0.19314 lineto
0.42188 0.19223 lineto
0.42312 0.19173 lineto
0.42436 0.19164 lineto
0.4256 0.19198 lineto
0.42684 0.19275 lineto
0.42808 0.19397 lineto
0.42932 0.19564 lineto
0.43056 0.19777 lineto
0.43304 0.20345 lineto
0.43552 0.21101 lineto
0.44048 0.23176 lineto
0.44544 0.25964 lineto
0.4504 0.29383 lineto
0.46032 0.37592 lineto
0.47024 0.46458 lineto
0.48016 0.5438 lineto
0.48512 0.57502 lineto
0.4876 0.58782 lineto
0.49008 0.59851 lineto
0.49256 0.60697 lineto
Mistroke
0.4938 0.61033 lineto
0.49504 0.61309 lineto
0.49628 0.61525 lineto
0.49752 0.61679 lineto
0.49876 0.61772 lineto
0.5 0.61803 lineto
0.53968 0.37592 lineto
0.5496 0.29383 lineto
0.55456 0.25964 lineto
0.55952 0.23176 lineto
0.562 0.22046 lineto
0.56448 0.21101 lineto
0.56696 0.20345 lineto
0.5682 0.20038 lineto
0.56944 0.19777 lineto
0.57068 0.19564 lineto
0.57192 0.19397 lineto
0.57316 0.19275 lineto
0.5744 0.19198 lineto
0.57564 0.19164 lineto
0.57688 0.19173 lineto
0.57813 0.19223 lineto
0.57937 0.19314 lineto
0.59921 0.24611 lineto
0.60913 0.28182 lineto
0.61409 0.29703 lineto
0.61657 0.30348 lineto
0.61905 0.30902 lineto
0.62153 0.31357 lineto
0.62277 0.31545 lineto
0.62401 0.31706 lineto
0.62525 0.31841 lineto
0.62649 0.31947 lineto
0.62773 0.32027 lineto
0.62897 0.32078 lineto
0.63021 0.32102 lineto
0.63145 0.32099 lineto
0.63269 0.32068 lineto
0.63393 0.32012 lineto
0.63517 0.3193 lineto
0.63641 0.31823 lineto
0.63889 0.31537 lineto
0.64137 0.31164 lineto
0.64385 0.30712 lineto
0.64881 0.2962 lineto
0.65873 0.27039 lineto
0.66369 0.25768 lineto
0.66865 0.24646 lineto
0.67361 0.23761 lineto
0.67609 0.23428 lineto
Mistroke
0.67733 0.23292 lineto
0.67857 0.23176 lineto
0.67981 0.23082 lineto
0.68105 0.2301 lineto
0.68229 0.2296 lineto
0.68353 0.22932 lineto
0.68477 0.22926 lineto
0.68601 0.22941 lineto
0.68725 0.22979 lineto
0.68849 0.23038 lineto
0.68973 0.23118 lineto
0.69097 0.23219 lineto
0.69345 0.23479 lineto
0.69841 0.24211 lineto
0.70833 0.26271 lineto
0.71825 0.2853 lineto
0.72321 0.29501 lineto
0.72817 0.30258 lineto
0.73065 0.30535 lineto
0.73189 0.30646 lineto
0.73313 0.30737 lineto
0.73437 0.30809 lineto
0.73562 0.3086 lineto
0.73686 0.30891 lineto
0.7381 0.30902 lineto
0.73934 0.30891 lineto
0.74058 0.3086 lineto
0.74182 0.30809 lineto
0.74306 0.30737 lineto
0.74554 0.30535 lineto
0.74802 0.30258 lineto
0.75298 0.29501 lineto
0.75794 0.2853 lineto
0.76786 0.26271 lineto
0.77282 0.25169 lineto
0.77778 0.24211 lineto
0.78026 0.23812 lineto
0.78274 0.23479 lineto
0.78522 0.23219 lineto
0.78646 0.23118 lineto
0.7877 0.23038 lineto
0.78894 0.22979 lineto
0.79018 0.22941 lineto
0.79142 0.22926 lineto
0.79266 0.22932 lineto
0.7939 0.2296 lineto
0.79514 0.2301 lineto
0.79638 0.23082 lineto
0.79762 0.23176 lineto
0.8001 0.23428 lineto
Mistroke
0.80258 0.23761 lineto
0.80754 0.24646 lineto
0.81746 0.27039 lineto
0.82738 0.2962 lineto
0.83234 0.30712 lineto
0.83482 0.31164 lineto
0.8373 0.31537 lineto
0.83978 0.31823 lineto
0.84102 0.3193 lineto
0.84226 0.32012 lineto
0.8435 0.32068 lineto
0.84474 0.32099 lineto
0.84598 0.32102 lineto
0.84722 0.32078 lineto
0.84846 0.32027 lineto
0.8497 0.31947 lineto
0.85094 0.31841 lineto
0.85218 0.31706 lineto
0.85466 0.31357 lineto
0.85714 0.30902 lineto
0.8621 0.29703 lineto
0.86706 0.28182 lineto
0.87698 0.24611 lineto
0.8869 0.21258 lineto
0.88938 0.20595 lineto
0.89187 0.20039 lineto
0.89435 0.19607 lineto
0.89559 0.19442 lineto
0.89683 0.19314 lineto
0.89807 0.19223 lineto
0.89931 0.19173 lineto
0.90055 0.19164 lineto
0.90179 0.19198 lineto
0.90303 0.19275 lineto
0.90427 0.19397 lineto
0.90551 0.19564 lineto
0.90675 0.19777 lineto
0.90923 0.20345 lineto
0.91171 0.21101 lineto
0.91419 0.22046 lineto
0.91667 0.23176 lineto
0.92659 0.29383 lineto
0.93651 0.37592 lineto
0.97619 0.61803 lineto
Mfstroke
grestore
grestore
% End of Graphics
MathPictureEnd%%PSTrailer
end

%%EPS Trailer
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
300 execuserobject setfont
0 setgray
77 293 1.677616e+07 12 rectclip
77 293 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) Out[14]=) show
grestore
gsave
96 307 425 12 rectclip
/Courier findfont 12 scalefont [1 0 0 -1 0 0] makefont
32
exch
defineuserobject
32 execuserobject setfont
0 0 0 setrgbcolor
96 315 moveto
(-Graphics-) show
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 327 460 42 rectclip
gsave
297 execuserobject setfont
0 setgray
61 327 1.677618e+07 42 rectclip
61 327 translate
1 1 1 setrgbcolor
0 0 459 42 rectfill
299 execuserobject setfont
0 setgray
2 11 moveto (However, we still have a problem with ChebyChev synthesis... Namely, we need a way) show
2 25 moveto (of figuring out the kth ChebyChev polynomial; it is too inflexible to simply keep a table of) show
2 39 moveto (them, such as the following:) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
299 execuserobject setfont
0 setgray
77 377 1.677616e+07 12 rectclip
77 377 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) In[23]:=) show
grestore
gsave
96 391 425 117 rectclip
gsave
297 execuserobject setfont
0 setgray
96 391 1.677615e+07 117 rectclip
96 391 translate
1 1 1 setrgbcolor
0 0 425 117 rectfill
300 execuserobject setfont
0 setgray
2 10 moveto (Ch0[x_] := 1;) show
2 23 moveto (Ch1[x_] := x;) show
2 36 moveto (Ch2[x_] := 2  x^2 - 1;) show
2 49 moveto (Ch3[x_] := 4  x^3 - 3 x;) show
2 62 moveto (Ch4[x_] := 8  x^4 - 8 x^2  + 1;) show
2 75 moveto (Ch5[x_] := 16 x^5 - 20x^3  + 5 x;) show
2 88 moveto (Ch6[x_] := 32 x^6 - 48x^4  + 18 x^2 -1;) show
2 101 moveto (Ch7[x_] := 64 x^7 - 112x^5 + 56 x^3 -7 x;) show
2 114 moveto (Ch8[x_] := 128x^8 - 256x^6 + 160x^4 -32x^2 +1;) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 516 460 84 rectclip
gsave
300 execuserobject setfont
0 setgray
61 516 1.677618e+07 84 rectclip
61 516 translate
1 1 1 setrgbcolor
0 0 459 84 rectfill
299 execuserobject setfont
0 setgray
2 11 moveto (While the table would work, it would not be flexible enough to be able to implemenet any) show
2 25 moveto (additive synthesis partials we can come up with. However, math again comes to the) show
2 39 moveto (rescue. Most higher math books give a few different methods of calculating the kth) show
2 53 moveto (ChebyChev polynomial.) show
2 81 moveto (The first of those methods is the Recursive method--that is,) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
299 execuserobject setfont
0 setgray
77 608 1.677616e+07 12 rectclip
77 608 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) In[80]:=) show
grestore
gsave
96 622 425 39 rectclip
gsave
297 execuserobject setfont
0 setgray
96 622 1.677615e+07 39 rectclip
96 622 translate
1 1 1 setrgbcolor
0 0 425 39 rectfill
300 execuserobject setfont
0 setgray
2 10 moveto (Tch[0,x_] := 1;) show
2 23 moveto (Tch[1,x_] := x;) show
2 36 moveto (Tch[n_,x_] := 2 x Tch[n-1,x] - Tch[n-2,x]) show
grestore
grestore
grestore
gsave
54 72 467 639 rectclip
1 setlinewidth 0 setgray
gsave
61 669 460 42 rectclip
gsave
300 execuserobject setfont
0 setgray
61 669 1.677618e+07 70 rectclip
61 669 translate
1 1 1 setrgbcolor
0 0 459 42 rectfill
299 execuserobject setfont
0 setgray
2 11 moveto (While this is an interesting property of ChebyChev Polynomials, it is, unfortunately not) show
2 25 moveto (the best way to calculate a table of the values.) show
grestore
grestore
grestore
gsave
54 29 467 14 rectclip
gsave
299 execuserobject setfont
0 setgray
54 29 467 14 rectclip
54 29 translate
299 execuserobject setfont
0 setgray
2 11 moveto (WaveShaping.math.ma) show
grestore
grestore
0.5 setlinewidth
521 43 moveto
54 43 lineto
stroke
1 setlinewidth
1 setlinewidth 0 setgray
gsave
54 29 467 14 rectclip
gsave
299 execuserobject setfont
0 setgray
54 29 467 14 rectclip
54 29 translate
299 execuserobject setfont
0 setgray
459 11 moveto (6) show
grestore
grestore
0.5 setlinewidth
521 43 moveto
54 43 lineto
stroke
1 setlinewidth
1 setlinewidth 0 setgray
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Courier-Bold
%%+ Courier
%%+ Times-Italic
%%+ Times-Roman

%%Page: 7 7
%%PageBoundingBox: 0 0 612 792
%%PageFonts: (atend)
%%BeginPageSetup
%%PaperSize: Letter
/__NXsheetsavetoken save def
0 0 translate
gsave
-20 9972 translate
 /__NXbasematrix matrix currentmatrix def
grestore
gsave
[1 0 0 -1 -19 10581] concat
19 9789 translate
%%EndPageSetup
gsave
0 0 612 792 rectclip
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 72 460 28 rectclip
gsave
/Times-Roman findfont 12 scalefont [1 0 0 -1 0 0] makefont
299
exch
defineuserobject
299 execuserobject setfont
0 setgray
61 30 1.677618e+07 70 rectclip
61 30 translate
1 1 1 setrgbcolor
0 42 459 28 rectfill
299 execuserobject setfont
0 setgray
2 53 moveto (For this task, we turn instead to an alternative representation \(involving the "Choose") show
2 67 moveto (function--also known as the binomial coeffecient\).) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 108 460 70 rectclip
gsave
299 execuserobject setfont
0 setgray
61 108 1.677618e+07 70 rectclip
61 108 translate
1 1 1 setrgbcolor
0 0 459 70 rectfill
299 execuserobject setfont
0 setgray
74 11 moveto (T[n_,x_] := x^n) show
110 25 moveto (- Binomial[n,2] x^\(n-2\) \(1-x^2\)) show
110 39 moveto (+ Binomial[n,4] x^\(n-4\) \(1-x^2\)^2) show
110 53 moveto (- ...) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
61 186 460 14 rectclip
gsave
299 execuserobject setfont
0 setgray
61 186 1.677618e+07 14 rectclip
61 186 translate
1 1 1 setrgbcolor
0 0 459 14 rectfill
299 execuserobject setfont
0 setgray
2 11 moveto (This, of course, can be written as the sum:) show
grestore
grestore
grestore
gsave
54 72 467 648 rectclip
1 setlinewidth 0 setgray
gsave
299 execuserobject setfont
0 setgray
77 208 1.677616e+07 12 rectclip
77 208 translate
1 1 1 setrgbcolor
0 0 444 12 rectfill
/Times-Italic findfont 10 scalefont [1 0 0 -1 0 0] makefont
297
exch
defineuserobject
297 execuserobject setfont
0 setgray
2 9 moveto (\(Ernie.Princeton.edu\) In[111]:=) show
grestore
gsave
96 222 425 26 rectclip
gsave
297 execuserobject setfont
0 setgray
96 222 1.677615e+07 26 rectclip
96 222 translate
1 1 1 setrgbcolor
0 0 425 26 rectfill
/Courier-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
300
exch
defineuserobject
300 execuserobject setfont
0 setgray
2 23 moveto (Sum[\(-1\)^\(k/2\) Binomial[n,k] x^\(n-2\) \(1-x^2\)\(k/2\),{k,0,n}]) show
grestore
grestore
grestore
gsave
54 29 467 14 rectclip
gsave
299 execuserobject setfont
0 setgray
54 29 467 14 rectclip
54 29 translate
299 execuserobject setfont
0 setgray
2 11 moveto (WaveShaping.math.ma) show
grestore
grestore
0.5 setlinewidth
521 43 moveto
54 43 lineto
stroke
1 setlinewidth
1 setlinewidth 0 setgray
gsave
54 29 467 14 rectclip
gsave
299 execuserobject setfont
0 setgray
54 29 467 14 rectclip
54 29 translate
299 execuserobject setfont
0 setgray
459 11 moveto (7) show
grestore
grestore
0.5 setlinewidth
521 43 moveto
54 43 lineto
stroke
1 setlinewidth
1 setlinewidth 0 setgray
grestore
grestore
showpage
__NXsheetsavetoken restore
%%PageTrailer
%%DocumentFonts: Courier-Bold
%%+ Times-Italic
%%+ Times-Roman
%%Trailer
%%DocumentFonts: Courier-Bold
%%+ Courier
%%+ Times-Italic
%%+ Times-Bold
%%+ Times-Roman
%%Pages: 7 1
%%BoundingBox:0 0 612 792

