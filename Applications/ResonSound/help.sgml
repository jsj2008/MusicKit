<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook V3.1//EN">
  <article id="Reson">
    <artheader>
      <title>Reson</title>
<!-- picture 
<figure>Reson.tiff</figure>
-->
      <author>
	<firstname>David</firstname>
	<othername role=mi>A.</othername>
	<surname>Jaffe</surname>
      </author>
      <copyright>
	<year>1994</year>
	<holder>
David A. Jaffe, P. O. Box 4268, Stanford, CA. 94309, U.S.A.
</holder>
      </copyright>

      <abstract>
	<para>
Welcome to <application>Reson</application>, a DSP sound
processing demo application built on the
<productname>MusicKit.</productname>
</para>
      </abstract>
    </artheader>

<sect1 id="hardware">
<title>How Do I Configure the Hardware to use
<productname>Reson</productname>?</title>

<para>To use <application>Reson</application>, you must plug in
an AD/DA device to your NeXT computer's DSP serial port.  To use
<application>Reson</application>, plug a DSP serial port device
into your NeXT computer's DSP serial port, and plug an audio source
into the serial port device's sound input.  (The nature of the audio
source depends on the type of serial port device you have).  Then
select, in the <application>Reson</application> main window, the
type of serial port device you have.  If your device does not appear,
chose Other, which may work if your device follows the usual
protocols.</para>

<warning>
<para>
If you pick the wrong device, you may hear a loud noise!
</para>
</warning>

<para>To hear the sound, you have two options.  You may either use the
serial port device for sound output or you may use the NeXT's own
sound hardware.  To hear the sound from the serial port device, select
serial port device sound output on the
<application>Reson</application> main window, and plug an audio
destination into the device's sound output.  (Again, the nature of the
audio destination depends on the type of serial port device you have.)
To hear the sound from the NeXT sound hardware, simply select NeXT
sound output on the <application>Reson</application> main window.
Note that some serial port devices, such as the Metaresearch Digital
Ears, do not allow for sound output.</para>
</sect1>

<sect1 id="starting">
<title>How Do I Start Reson? And what is that icon?</title>   

<para>Launch the application, then press <emphasis
role="bold">Play</emphasis>.  The icon is supposed to represent a
frequency-domain plot of a resonator.  But it looks like a mountain
range so I added a sun shining.  I guess you could say the sun is
<emphasis>rising</emphasis>, which sounds sort of like "reson".  Well,
maybe not.</para>  

</sect1>
<sect1 id="operation">
<title>What Does Reson Do?</title>

<para>Reson filters sound using a bank of 8 resonators, 4 for the left
audio source channel, and 4 for the right audio source channel.  Each
resonator has four controls.  We examine these controls in detail:
</para>

    <itemizedlist>
      <listitem>
	<para><emphasis>RESONANCE PITCH</emphasis> is the base frequency of
the resonator.  The resonator emphasizes this frequency, as well as
all harmonics of this frequency, while attenuating other frequencies.
</para>

<para>The frequency is indicated by a pitch symbol, where C4 is middle
C.</para> 
      </listitem>

      <listitem>
<para><emphasis>RESONANCE GAIN</emphasis> is the amplitude of the
resonator.  Precisely, it is the coefficient of feedback.  The higher
the gain, the more the filter "rings".  That is, higher settings of
gain accentuate more the resonance pitch and its harmonics, as well as
attenuating more all other pitches.  Setting the resonance gain to its
highest value can cause a feedback effect where the original sound is
barely audible at all and only the filter's ringing can be heard.  On
the other hand, setting resonance gain to zero provides a straight
"feed-through" of the original signal.</para> 
      </listitem>
      <listitem>
<para><emphasis>LEFT/RIGHT PANNING</emphasis> is the position between
the two speakers of the output of the resonator.  This effect is most
obvious with head-phones.  It is a simple amplitude pan.</para> 
      </listitem>
      <listitem>
<para><emphasis>LOUDNESS</emphasis> is the gain of the
resonator.</para>
      </listitem>
    </itemizedlist>

<para>Thus, you can set each of the eight resonators to different
values and create a variety of tuned filters.</para>

</sect1>
<sect1 id="resonators">

<title>What Kind of Resonators Does Reson Use?</title>

<para>Reson uses "recursive comb filters."  These are simple delays
with feedback and a coefficient on the feedback ("resonance gain").
In signal processing terminology, such a filter has poles equally
spaced around the unit circle.  The radius of these poles depends on
the coefficient.</para>  

</sect1>
<sect1 id="distortion">

<title>Why Does Reson Distort Sometimes?</title>

<para>If you turn all the resonance gains up full and turn up all the
amplitudes up full, the feedback may be so great that the energy
builds up in the resonators and overflows the DSP's word-size.  If
this happens, simply reduce the amplitudes and/or the resonance
gains.</para>

</sect1>
<sect1 id="musickit">
<title>What is the <productname>MusicKit</productname> and How Does
<application>Reson</application> Use It?</title>

<para>The <productname>MusicKit</productname> is an object-oriented
software system for building music, sound, signal processing, and MIDI
applications on the NeXT computer.  It has been used in such diverse
commercial applications as music sequencers, computer games, and
document processors.  Professors and students in academia have used
the <productname>MusicKit</productname> in a host of areas, including
music performance, scientific experiments, computer-aided instruction,
and physical modeling.  The <productname>MusicKit</productname> is the
first to unify the MIDI and Music V paradigms, thus combining
interaction with generality.  (Music V, written by Max Mathews and
others at Bell Labs three decades ago, was the first widely available
"computer music compiler".)</para>

<para>The NeXT <productname>MusicKit</productname> was first
demonstrated at the 1988 NeXT product introduction and was bundled in
NeXT software releases 1.0 and 2.0.  Versions 3.0 and 4.0 were then distributed
and supported by the Center for Computer Research in Music and
Acoustics (CCRMA) of Stanford University. Beginning with V5.0, the
MusicKit is now an institution independent open-source effort hosted
on <ulink url="http://www.sourceforge.net">sourceforge</ulink>.</para>

<para><application>Reson</application> uses the
<productname>MusicKit</productname> as follows:</para>

<para>A <classname>MKSynthPatch</classname> object (synthesis or
processing instrument) reads sound from the DSP serial port using a
<classname>MKUnitGenerator</classname> object designed for this
purpose.  This <classname>MKUnitGenerator</classname> sends its output
to a series of other <classname>MKUnitGenerator</classname>s that
implement the filter.  A <classname>MKSynthInstrument</classname>
object manages the set of <classname>MKSynthPatch</classname> objects,
one for each resonator voice.  Finally, an
<classname>MKOrchestra</classname> object represents the DSP as a
whole.  For example, to select the serial port device as the serial
port device, you just say

<programlisting>
[orchestra setSerialPortDevice:[[SSserial port device alloc] init]];
</programlisting>
</para>

<para><application>Reson</application> required no custom DSP code to
be written&horbar;the <productname>MusicKit</productname> makes it
possible to make applications such as <application>Reson</application>
in a matter of hours using only Objective-C objects.</para>

<sect2>
<title>How Can I Obtain the <productname>MusicKit</productname>?</title>

<para><application>Reson</application> uses release 4.0 of the
<productname>MusicKit</productname>, the first release of the
<productname>MusicKit</productname> that supports sound processing
(previous releases support only synthesis).
It is a comprehensive package that includes on-line
documentation, programming examples, utilities, applications and
sample score documents.</para>

<para>In addition, source code is available for everything except
the low-level sound and MIDI drivers.  This means
researchers and developers may study the source or even customize the
<productname>MusicKit</productname> and DSP Tools to suit their needs.
Enhancements can be sent to
<email>musickit-developer@lists.sourceforge.net</email> to have them
considered for future releases. Commercial software developers
may freely incorporate and adapt the software to accelerate
development of software products.  (Free commercial use of files
copyrighted by NeXT Inc/Apple. are understandably restricted to
NeXTSTEP platforms.)</para>

<para>The <productname>MusicKit</productname> and DSP Tools is
available from <ulink
url="http://musickit.sourceforge.net">sourceforge</ulink>.</para>
</sect2>
</sect1>
</article>
