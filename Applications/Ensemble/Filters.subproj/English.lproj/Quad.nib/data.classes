WmFractal = {
    ACTIONS = {
	takeDimensionFrom:;
	takeTimeScaleFrom:;
	newAmpRanSeed:;
	takeRFrom:;
	takeTimeOffsetFrom:;
	newPhaseRanSeed:;
	takeAmpRanSeedFrom:;
	takePhaseRanSeedFrom:;
	takeNumTermsFrom:;
	takeFirstTermFrom:;
	show:;
    };
    OUTLETS = {
	firstTermField;
	numTermsField;
	paramSliders;
	rField;
	timeOffsetField;
	phaseRanSeedField;
	dimensionField;
	delegate;
	window;
	lineGraph;
	timeScaleField;
	ampRanSeedField;
    };
    SUPERCLASS = Object;
};
FirstResponder = {
    ACTIONS = {
    };
    SUPERCLASS = Object;
};
Performer = {
    OUTLETS = {
	conductor;
	delegate;
	noteSenders;
    };
    SUPERCLASS = Object;
};
NoteFilter = {
    OUTLETS = {
	noteSenders;
    };
    SUPERCLASS = Instrument;
};
LineGraph = {
    SUPERCLASS = View;
};
EnsembleNoteFilter = {
    ACTIONS = {
	reset:;
	toggleBypass:;
    };
    OUTLETS = {
	bypassButton;
	menuCell;
	performer;
	inspectorPanel;
    };
    SUPERCLASS = NoteFilter;
};
QuadPerformer = {
    OUTLETS = {
	xFractal;
	noteFilter;
	document;
	noteSender;
	yFractal;
    };
    SUPERCLASS = Performer;
};
WmFractalDelegate = {
    ACTIONS = {
	fractalChanged:;
    };
    OUTLETS = {
    };
    SUPERCLASS = Object;
};
ParamInterface = {
    ACTIONS = {
	takeValueFrom:;
	incrementValueFrom:;
    };
    OUTLETS = {
	textFields;
	sliders;
    };
    SUPERCLASS = ActionCell;
};
Instrument = {
    OUTLETS = {
	noteReceivers;
    };
    SUPERCLASS = Object;
};
Quad = {
    ACTIONS = {
	takeDisplayDurationFrom:;
	takeRoomSizeFrom:;
	takeDelayFrom:;
	takeControllerFrom:;
	takeGravityControllerFrom:;
	takeThruFrom:;
	takePitchBendFrom:;
	inspectFractal:;
	takeIntervalFrom:;
	takeMinDistanceFrom:;
	takeNicheOffsetFrom:;
	takeFractalEnableFrom:;
	takeOutControllerFrom:;
    };
    OUTLETS = {
	inControlInterface;
	intervalSlider;
	displayDurationSlider;
	gravControlInterface;
	conductor;
	minDistanceSlider;
	xFractal;
	displayDurationField;
	yFractal;
	thruButton;
	roomSizeField;
	intervalField;
	channelButtons;
	minDistanceField;
	lineGraph;
	pitchBendSlider;
	outControlInterface;
	pathEnableSwitch;
	pitchBendNote;
	delaySlider;
	roomSizeSlider;
	delayField;
	pitchBendField;
    };
    SUPERCLASS = EnsembleNoteFilter;
};
