WmFractal = {
    ACTIONS = {
	takeDimensionFrom:;
	takeTimeScaleFrom:;
	takeRFrom:;
	newAmpRanSeed:;
	takeTimeOffsetFrom:;
	newPhaseRanSeed:;
	takeAmpRanSeedFrom:;
	takePhaseRanSeedFrom:;
	takeNumTermsFrom:;
	takeFirstTermFrom:;
	show:;
    };
    OUTLETS = {
	delegate;
	dimensionDisplay;
	timeOffsetDisplay;
	window;
	firstTermDisplay;
	ampRanSeedDisplay;
	lineGraph;
	numTermsDisplay;
	rDisplay;
	timeScaleDisplay;
	phaseRanSeedDisplay;
    };
    SUPERCLASS = Object;
};
FirstResponder = {
    ACTIONS = {
    };
    SUPERCLASS = Object;
};
Performer = {
    OUTLETS = {
	conductor;
	delegate;
	noteSenders;
    };
    SUPERCLASS = Object;
};
EnsembleNoteFilter = {
    ACTIONS = {
	toggleBypass:;
	reset:;
    };
    OUTLETS = {
	bypassButton;
	menuCell;
	performer;
	inspectorPanel;
    };
    SUPERCLASS = NoteFilter;
};
NoteFilter = {
    OUTLETS = {
	noteSenders;
    };
    SUPERCLASS = Instrument;
};
WmFractalDelegate = {
    ACTIONS = {
	fractalChanged:;
    };
    OUTLETS = {
    };
    SUPERCLASS = Object;
};
ParamInterface = {
    ACTIONS = {
	incrementValueFrom:;
	takeValueFrom:;
    };
    OUTLETS = {
	textFields;
	sliders;
    };
    SUPERCLASS = ActionCell;
};
Instrument = {
    OUTLETS = {
	noteReceivers;
    };
    SUPERCLASS = Object;
};
FractalPerformer = {
    OUTLETS = {
	keynumFractal;
	controllerFractal;
	document;
	dynamicsFractal;
	noteSender;
	noteFilter;
	phrasingFractal;
    };
    SUPERCLASS = Performer;
};
FractalMelody = {
    ACTIONS = {
	selectMode:;
	incrementStaticGravity:;
	takeSilenceFrom:;
	inspectFractal:;
	enableDurations:;
	takeTagTypeFrom:;
	toggleThru:;
	takeControllerFrom:;
	takeStaticGravitiesFrom:;
	selectRestMode:;
	reset:;
	enablePitchSorting:;
	takeControlValsFrom:;
	takeNoteSetFrom:;
	takeControllersFrom:;
	takeKeyNumsFrom:;
	takeNoteIntervalFrom:;
	takeNumTagsFrom:;
	takeSetDurationFrom:;
	enableUniqueNotes:;
	takeVelocitiesFrom:;
	enableOctaves:;
	takeNumNotesFrom:;
	takeGravityScalingFrom:;
	selectRepeatMode:;
	takeVelocityTrackingFrom:;
	takeDelayFrom:;
	toggleListening:;
	takeSetNumFrom:;
    };
    OUTLETS = {
	controlValInterface;
	controllersInterface;
	listeningButton;
	keyInterface;
	phrasingInterface;
	numNotesField;
	noteSetButtons;
	setNumField;
	setDurationInterface;
	noteTagInterface;
	thruButton;
	modeButtons;
	dynamicGravityInterface;
	velocityInterface;
	controllerPanel;
	tagTypeButtons;
	controlNumInterface;
	silenceButtons;
	durationSwitch;
	velocityButtons;
	gravityFields;
	phrasingSwitches;
	noteSetSwitches;
	silenceField;
	silenceSlider;
	delayField;
    };
    SUPERCLASS = EnsembleNoteFilter;
};
