FirstResponder = {
    ACTIONS = {
    };
    SUPERCLASS = Object;
};
EnvelopeView = {
    ACTIONS = {
	takeInputRangeFrom:;
	takeOutputRangeFrom:;
    };
    OUTLETS = {
	delegate;
	outRangeFields;
	inRangeFields;
	envelope;
	yAxisView;
	xAxisView;
    };
    SUPERCLASS = View;
};
EnsembleSynthIns = {
    ACTIONS = {
	showInspector:;
	takeBrightnessFrom:;
	takeSustainFrom:;
	takePatchCountFrom:;
	takeAmpFrom:;
	takeBearingFrom:;
	takeSensitivityFrom:;
    };
    OUTLETS = {
	ampSlider;
	sustainButton;
	ampField;
	brightField;
	sensitivityInterface;
	view;
	patchCountField;
	inspector;
	bearingSlider;
	hashtable;
	brightSlider;
	window;
	bearingField;
	document;
    };
    SUPERCLASS = SynthInstrument;
};
EnvelopeViewDelgate = {
    ACTIONS = {
	envelopeModified:;
    };
    OUTLETS = {
    };
    SUPERCLASS = Object;
};
YAxisView = {
    ACTIONS = {
    };
    OUTLETS = {
	font;
    };
    SUPERCLASS = View;
};
Fm1Instrument = {
    ACTIONS = {
	takeModParamsFrom:;
	takeModWaveFrom:;
	takeCarWaveFrom:;
    };
    OUTLETS = {
	modSustainSwitch;
	carrierSliders;
	indEnv;
	modSmoothingFields;
	modulatorSliders;
	modulationInterface;
	indEnvEditor;
    };
    SUPERCLASS = Wave1Instrument;
};
ParamInterface = {
    ACTIONS = {
	incrementValueFrom:;
	takeValueFrom:;
    };
    OUTLETS = {
	textFields;
	sliders;
    };
    SUPERCLASS = ActionCell;
};
SynthInstrument = {
    SUPERCLASS = Instrument;
};
Instrument = {
    SUPERCLASS = Object;
};
Wave1Instrument = {
    ACTIONS = {
	takeModwheelFrom:;
	takeVibratoFrom:;
	takeWaveformFrom:;
	takeWaveInterpFrom:;
	toggleVibrato:;
    };
    OUTLETS = {
	modwheelField;
	modwheelSlider;
	ampEnv;
	vibratoInterface;
	interpField;
	timbreMenu;
	interpSlider;
	ampEnvEditor;
	waveformButton;
    };
    SUPERCLASS = EnsembleSynthIns;
};
XAxisView = {
    ACTIONS = {
    };
    OUTLETS = {
	font;
    };
    SUPERCLASS = View;
};
