/*
  $Id$
  
  Defined In: The MusicKit
  Description:
    This is a prototype of the class interface you will write.
    Generated by dspwrap. 

  Original Author: David A. Jaffe

  Copyright (c) 1988-1992, NeXT Computer, Inc.
  Portions Copyright (c) 1994 NeXT Computer, Inc. and reproduced under license from NeXT
  Portions Copyright (c) 1994 Stanford University.
  Portions Copyright (c) 1999-2001, The MusicKit Project.
*/
// classgroup Sound Inputs and Outputs
/*!
  @class In1qpUG
  @brief <b>In1qpUG </b>is useful when using the Ariel QuintProcessor - it provides the "hub" DSP
  with the signals from the "satellite" DSPs.
  
  

The In1qpUG may only be used on the hub (master DSP) of theAriel QuintProcessor,
which is represented by an instance of the ArielQP object.  In1qpUG reads one
channel of the sample stream coming from one of the QuintProcessor satellite
DSPs. 

If you're building a SynthPatch subclass, you should note that every SynthPatch
object should have its own signal-input UnitGenerator; in other words, you don't
allocate just one such object and then share it amongst the various
SynthPatches.  The input signal is sent to all the In1qpUGs for a given channel
and satellite DSP setting.

<h2>Memory Spaces</h2>

<b>In1qpUG<i>a</i></b>
<i>a</i>	output 
*/
#ifndef __MK_In1qpUG_H___
#define __MK_In1qpUG_H___
/* */

#import <MusicKit/MKUnitGenerator.h>

@interface In1qpUG : MKUnitGenerator
{
    int qpSatellite;
    BOOL _set;
}


/*!
  @brief Sets the input channel that this instance of In1qpUG reads.

  Channel 0 is the first channel, channel 1 is the second channel.   For
  quadraphonic streams, <i>aChan</i> may be larger.
  @param  aChan is an integer, 0-based channel.
  @return Returns an id.
*/
- setChannel: (int) aChan;

/*!
  @brief Sets the scale as specified.

  The default is 1.0. 
  @param  value is a double.
  @return Returns an id.
*/
- setScale: (double) value;


/*!
  @param  sat is a char.
  @return Returns an id.
  @brief Sets the DSP from which this instance of In1qpUG reads its input
  sample stream.

  <i>sat</i> is the DSP, one of 'A', 'B', 'C' or
  'D'.
*/
- setSatellite:(char)sat;
/* 'A','B','C' or 'D'. Default is 'A'. */


/*!
  @param  aPatchPoint is an id.
  @return Returns an id.
  @brief Sets the output patchpoint to <i>aPatchPoint</i>.

  Returns
  <b>nil</b> if the argument isn't a patchpoint; otherwise returns
  <b>self</b>.
*/
- setOutput:(id)aPatchPoint;
/* output location */

- init;

/*!
  @return Returns an id.
  @brief You never send this message.

  It's invoked by sending the
  <b>idle</b> message to the object.   In1qpUG  idles itself by
  patching its output to <i>zero</i>. Thus, an idle In1aUG makes no
  sound.   Note that you must send <b>setOutput:</b> and <b>run
  </b>again to use the MKUnitGenerator after sending
  <b>idle</b>.
*/
- idleSelf;

/*!
  @return Returns an id.
  @brief If scale has not been set, sets it to 1.0.

  If Satellite has not
  been set, it is set to 'A'.  This method is invoked when you send
  the <b>run</b> message to the object.
*/
- runSelf;

@end

#endif
